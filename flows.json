[
    {
        "id": "0bd865dc83ec0d5a",
        "type": "tab",
        "label": "GET DATA",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d91ac3d282c069d0",
        "type": "tab",
        "label": "SEND DATA",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "12b6281657f0f653",
        "type": "tab",
        "label": "ESTATUS DEL SISTEMA",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ccbba8193508b160",
        "type": "tab",
        "label": "CHARTS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e7bb50b21f9817d9",
        "type": "tab",
        "label": "DASHBOARD TEST",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "87fe75fba6b00d60",
        "type": "tab",
        "label": "LOCALIZACIÓN",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "93c938d261dc36e3",
        "type": "tab",
        "label": "DESCARGA USB",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "ac1b7f858f654d07",
        "type": "tab",
        "label": "CONNECTIVITY & MONITORING",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3e6cdd9658d4b98d",
        "type": "group",
        "z": "d91ac3d282c069d0",
        "name": "Envio por MQTT",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4b44abe7284d3925",
            "3b0fb10da4893963",
            "dbb0818b6ec8428d",
            "129a57a1dde77825",
            "10fe9b1f0057fb10",
            "ce80aa21413d62c3",
            "d825a23051422fb4",
            "1d325151593e5d32",
            "2106c9058afc494e",
            "ab7d8e0de922c171"
        ],
        "x": 94,
        "y": 119,
        "w": 632,
        "h": 262
    },
    {
        "id": "6b7c1f4fbbe77c84",
        "type": "group",
        "z": "d91ac3d282c069d0",
        "name": "Guardado de data local",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "121f11e8ca291a0e",
            "c4c0299bf7185dbc",
            "bcd67702c395a8fb",
            "838733237fd1d982",
            "80cc8c7dae71c897",
            "04c1122e78e23c08",
            "aa1c36cde09fb4f4"
        ],
        "x": 94,
        "y": 959,
        "w": 752,
        "h": 162
    },
    {
        "id": "65c598bb5234d69b",
        "type": "group",
        "z": "d91ac3d282c069d0",
        "name": "Guardado de data offline",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "1b58f9fcea6b249f",
            "e9eeb5845b5972aa",
            "f33d6f0f0f55c8c7",
            "83165532a02208c5",
            "c92224eb190a3a85",
            "5c1f0d9723125c37",
            "c2403b842567b383"
        ],
        "x": 84,
        "y": 419,
        "w": 742,
        "h": 182
    },
    {
        "id": "a5bc3a1930f09c8f",
        "type": "group",
        "z": "d91ac3d282c069d0",
        "name": "Recuperar y enviar la data adquirida offline",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "89c8205089453bdc",
            "f744467ba4084a45",
            "4d989b9847ec219b",
            "a92b564f771f2512",
            "45c703090ffad7f3",
            "f8c2dbe5933535aa",
            "7848935da681379d",
            "9a6f168a3cfe9e6c",
            "de31a22e8417c259",
            "901a8dc39713bf21",
            "124808048f0bda31"
        ],
        "x": 84,
        "y": 639,
        "w": 1142,
        "h": 262
    },
    {
        "id": "39ddbe85a72ee0b3",
        "type": "group",
        "z": "ac1b7f858f654d07",
        "name": "Check server connection",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "36974351050e81e2",
            "dbaf8b3efeaabf37",
            "969b2948e1ba5ece",
            "ee185204f3df637f",
            "30361390301119e6",
            "369a679a146cb309",
            "48fe66a37a5d4455",
            "47371280d37afc93"
        ],
        "x": 74,
        "y": 79
    },
    {
        "id": "b7f9bad1da3f666b",
        "type": "group",
        "z": "ac1b7f858f654d07",
        "name": "Check server connection",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "24694e9174f9ea7c",
            "f884311d2c1d9673",
            "a25ce97d8a1e53e6",
            "b64c3a8d66676f32",
            "594f458e05d10cbd",
            "0108dea861a38364",
            "227c7884566505e1"
        ],
        "x": 54,
        "y": 359
    },
    {
        "id": "f2e2e6faa602b3b4",
        "type": "group",
        "z": "d91ac3d282c069d0",
        "name": "Guardar data local a CSV more efficient",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "1fe246825016b224",
            "2808688270ae7e19",
            "75d640b92c14bf05",
            "1696a641113f4ebb",
            "e6ea489a3988f9d3",
            "de212ed652df9d16",
            "5988850cd948728c",
            "f7123ee93d205da4",
            "d7e5425487244021",
            "73f0360cf3cf9070",
            "863f91b1290010b4",
            "c75c61cf2dd42916"
        ],
        "x": 54,
        "y": 2199,
        "w": 1612,
        "h": 342
    },
    {
        "id": "24d00d6b1a472a12",
        "type": "group",
        "z": "d91ac3d282c069d0",
        "name": "Seleccionar y eliminar data de la última semana ",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5c869004c94f9e5b",
            "6be862ef70aa5ce0",
            "a7d503cc74fad55a",
            "c304b9efafbee2ce",
            "6da3f330a7d17166",
            "bdd4d3fb6e929cc7",
            "c659995ce3fdc68c",
            "c4ff83c05b9335ed",
            "08bfa969958c3141",
            "a0b002195171260a",
            "f5322cda4a2f356c",
            "05d8f608fe5eb3a7",
            "4512bff38c8cd675"
        ],
        "x": 54,
        "y": 1199,
        "w": 1712,
        "h": 202
    },
    {
        "id": "1a0d550707f8cc4f",
        "type": "group",
        "z": "d91ac3d282c069d0",
        "name": "Eliminar data local anterior a 1 año",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "3e80e2e1aef47e06",
            "58836c8d2ead4daa",
            "60716de1fbc60246",
            "7f4121ee2de54254",
            "75f7fd59086311fd"
        ],
        "x": 54,
        "y": 1939,
        "w": 792,
        "h": 202
    },
    {
        "id": "f3d20ca83e6edb3b",
        "type": "group",
        "z": "d91ac3d282c069d0",
        "name": "Eliminar la data mas antigua a 2 meses",
        "style": {
            "stroke": "#a4a4a4",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ac795a621f12d022",
            "aa710893e7dd8d1a",
            "107bce0cc90af4f7",
            "e89cfe106f7515fa"
        ],
        "x": 54,
        "y": 1739,
        "w": 932,
        "h": 142
    },
    {
        "id": "1d1b1c227a0bc262",
        "type": "group",
        "z": "d91ac3d282c069d0",
        "name": "DELETE ALL DATA MANUALLY (CAREFULL)",
        "style": {
            "label": true
        },
        "nodes": [
            "545927d79126b532",
            "75f4430f63d837a1",
            "0c617771a3bf80f9"
        ],
        "x": 54,
        "y": 2659,
        "w": 572,
        "h": 82
    },
    {
        "id": "a6e52991c91f4c94",
        "type": "group",
        "z": "d91ac3d282c069d0",
        "name": "Guardar a CSV desde el dashboard",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "33bbe4c6d1917a06",
            "a6bcf2f01996a5c8",
            "ed991b72ae9093a6",
            "f468ca404ec7b3ba",
            "92118584c83a7087",
            "e349b59a54266dfb"
        ],
        "x": 54,
        "y": 1479,
        "w": 1152,
        "h": 82
    },
    {
        "id": "2491dc44ba7072d1",
        "type": "group",
        "z": "12b6281657f0f653",
        "name": "Horómetro",
        "style": {
            "label": true
        },
        "nodes": [
            "b96aedb2c8faedf7",
            "f98abb4fe7a367b0",
            "7acb17b8b6747504",
            "d883f4cd09fbd51e",
            "50bf59d98eba1a53",
            "7da739b59da81a69",
            "3cf4ea1277d17c9b",
            "5e9a1077c77c1127",
            "5a470f467d6d46dc"
        ],
        "x": 114,
        "y": 579,
        "w": 1012,
        "h": 262
    },
    {
        "id": "4c1211b19890c008",
        "type": "group",
        "z": "12b6281657f0f653",
        "name": "Recuperar data local",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "cb41c12bc59dd4ef",
            "e148917b295d6dd2",
            "cec16d99a7a25b04",
            "fa1e23d60e897bfb",
            "561856b7fa69579b",
            "8a611a2f49459cc9",
            "850fefbfc2e4e036",
            "31c3ccc4207e816c"
        ],
        "x": 14,
        "y": 379,
        "w": 1252,
        "h": 142
    },
    {
        "id": "8d53d2f17df7fbc4",
        "type": "mqtt-broker",
        "name": "ACME_broker",
        "broker": "161.132.39.167",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "45598baf2af77f76",
        "type": "MySQLdatabase",
        "name": "",
        "host": "localhost",
        "port": "3306",
        "db": "acme_db",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "eadfda525a15b034",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB1",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "25bec14118d50672",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "88dead4c2d39df0d",
        "order": 1,
        "disp": false,
        "width": 26,
        "collapse": false,
        "className": ""
    },
    {
        "id": "88dead4c2d39df0d",
        "type": "ui_tab",
        "name": "ESTATUS DE OPERACION",
        "icon": "timeline",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "51cc9a5c59010e6d",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "komatsu",
                "default": "#4B7930",
                "baseColor": "#0e1271",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#0e1271",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0e1271",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#d8d9db",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#0e1271",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#000000",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#0e1271",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "0359ad7573d63126",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "f1881403c636972e",
        "type": "MySQLdatabase",
        "name": "",
        "host": "localhost",
        "port": "3306",
        "db": "db_mysql",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "bf980bdca4a87b7e",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "d212cb1ffc18f352",
        "order": 1,
        "disp": false,
        "width": 28,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d212cb1ffc18f352",
        "type": "ui_tab",
        "name": "ESTATUS DEL SISTEMA",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "49729f7479e52854",
        "type": "inject",
        "z": "0bd865dc83ec0d5a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "fbadb31b0d03b579",
                "b86aa9499c0305b6",
                "56cdadc6c4e658a8",
                "0d0085b9ae9c524c",
                "39cbc9153cb96df7",
                "76e65c6efcafe950"
            ]
        ]
    },
    {
        "id": "c6b692f2e37d0319",
        "type": "change",
        "z": "0bd865dc83ec0d5a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.rm9000.x_axis",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "235910951843d19c",
        "type": "change",
        "z": "0bd865dc83ec0d5a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.rm9000.y_axis",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "fdc233e8913f84c9",
        "type": "change",
        "z": "0bd865dc83ec0d5a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.rm9000.z1_axis",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "92d82892633db146",
        "type": "change",
        "z": "0bd865dc83ec0d5a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.rm9000.z2_axis",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "80965d9bb7be526b",
        "type": "change",
        "z": "0bd865dc83ec0d5a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.carga_grua.carga1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "8602465676af17b1",
        "type": "change",
        "z": "0bd865dc83ec0d5a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.carga_grua.carga2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "fbadb31b0d03b579",
        "type": "random",
        "z": "0bd865dc83ec0d5a",
        "name": "",
        "low": 1,
        "high": "500",
        "inte": "true",
        "property": "payload",
        "x": 300,
        "y": 160,
        "wires": [
            [
                "c6b692f2e37d0319"
            ]
        ]
    },
    {
        "id": "b86aa9499c0305b6",
        "type": "random",
        "z": "0bd865dc83ec0d5a",
        "name": "",
        "low": 1,
        "high": "500",
        "inte": "true",
        "property": "payload",
        "x": 300,
        "y": 220,
        "wires": [
            [
                "235910951843d19c"
            ]
        ]
    },
    {
        "id": "56cdadc6c4e658a8",
        "type": "random",
        "z": "0bd865dc83ec0d5a",
        "name": "",
        "low": 1,
        "high": 10,
        "inte": "true",
        "property": "payload",
        "x": 300,
        "y": 280,
        "wires": [
            [
                "fdc233e8913f84c9"
            ]
        ]
    },
    {
        "id": "0d0085b9ae9c524c",
        "type": "random",
        "z": "0bd865dc83ec0d5a",
        "name": "",
        "low": 1,
        "high": 10,
        "inte": "true",
        "property": "payload",
        "x": 300,
        "y": 340,
        "wires": [
            [
                "92d82892633db146"
            ]
        ]
    },
    {
        "id": "76e65c6efcafe950",
        "type": "random",
        "z": "0bd865dc83ec0d5a",
        "name": "",
        "low": "90",
        "high": "120",
        "inte": "true",
        "property": "payload",
        "x": 300,
        "y": 400,
        "wires": [
            [
                "80965d9bb7be526b"
            ]
        ]
    },
    {
        "id": "39cbc9153cb96df7",
        "type": "random",
        "z": "0bd865dc83ec0d5a",
        "name": "",
        "low": "100",
        "high": "140",
        "inte": "true",
        "property": "payload",
        "x": 300,
        "y": 460,
        "wires": [
            [
                "8602465676af17b1"
            ]
        ]
    },
    {
        "id": "37be9db8305c3097",
        "type": "change",
        "z": "0bd865dc83ec0d5a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.sensor_estado.state",
                "pt": "global",
                "to": "positivo",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "14739e50bfb85e8c",
        "type": "random",
        "z": "0bd865dc83ec0d5a",
        "name": "",
        "low": 1,
        "high": "3",
        "inte": "true",
        "property": "payload",
        "x": 440,
        "y": 560,
        "wires": [
            [
                "6707de4e5568bf43"
            ]
        ]
    },
    {
        "id": "6707de4e5568bf43",
        "type": "switch",
        "z": "0bd865dc83ec0d5a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 610,
        "y": 560,
        "wires": [
            [
                "37be9db8305c3097"
            ],
            [
                "37be9db8305c3097"
            ],
            [
                "9197ae96ecf6e751",
                "37be9db8305c3097"
            ]
        ]
    },
    {
        "id": "b03c4268ae1a5bf4",
        "type": "change",
        "z": "0bd865dc83ec0d5a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.sensor_estado.state",
                "pt": "global",
                "to": "init",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "df03522f4c1dda8b",
        "type": "change",
        "z": "0bd865dc83ec0d5a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.sensor_estado.state",
                "pt": "global",
                "to": "negativo",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "9197ae96ecf6e751",
        "type": "debug",
        "z": "0bd865dc83ec0d5a",
        "name": "debug 160",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 700,
        "wires": []
    },
    {
        "id": "96d6ef2cddbac871",
        "type": "inject",
        "z": "0bd865dc83ec0d5a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 560,
        "wires": [
            [
                "14739e50bfb85e8c"
            ]
        ]
    },
    {
        "id": "d4c91e04aba283b0",
        "type": "inject",
        "z": "d91ac3d282c069d0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 40,
        "wires": [
            [
                "a5c3e22a254f5be0"
            ]
        ]
    },
    {
        "id": "a5c3e22a254f5be0",
        "type": "change",
        "z": "d91ac3d282c069d0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data",
                "pt": "global",
                "to": "{\"gateway_key\":\"AXOGRUA\",\"timestamp\":0,\"data\":{\"gateway_info\":{\"eth_ip\":\"-\",\"vpn_ip\":\"-\",\"ping_acme\":\"-\",\"total_space\":0,\"used_space\":0,\"used_space_percent\":0,\"free_space\":0,\"num_gps_sat\":0,\"memory_usage_percent\":0,\"temperature\":0,\"vbat\":0},\"gps\":{\"pos_valid\":0,\"old_pos\":1,\"total\":0,\"nav_status\":0,\"latitude\":0,\"longitude\":0,\"altitude\":0,\"haccuracy\":0,\"vaccuracy\":0,\"speed\":0,\"course\":0,\"hdop\":0,\"vdop\":0,\"tdop\":0,\"num_sat\":0},\"jd2120\":{\"x_angle\":0,\"y_angle\":0},\"imu\":{\"accel_x\":0,\"accel_y\":0,\"accel_z\":0},\"rm900\":{\"x_axis\":0,\"y_axis\":0,\"z_axis\":0},\"carga_grua\":{\"carga1\":0,\"carga2\":0},\"sensor_estado\":{\"state\":\"init\"}}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 40,
        "wires": [
            [
                "a25e103160a7edec"
            ]
        ]
    },
    {
        "id": "a25e103160a7edec",
        "type": "debug",
        "z": "d91ac3d282c069d0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 40,
        "wires": []
    },
    {
        "id": "f744467ba4084a45",
        "type": "function",
        "z": "d91ac3d282c069d0",
        "g": "a5bc3a1930f09c8f",
        "name": "obtener primer dato",
        "func": "msg.topic = \"SELECT data FROM offline_data LIMIT 1;\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 740,
        "wires": [
            [
                "89c8205089453bdc"
            ]
        ]
    },
    {
        "id": "4d989b9847ec219b",
        "type": "debug",
        "z": "d91ac3d282c069d0",
        "g": "a5bc3a1930f09c8f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 800,
        "wires": []
    },
    {
        "id": "121f11e8ca291a0e",
        "type": "function",
        "z": "d91ac3d282c069d0",
        "g": "6b7c1f4fbbe77c84",
        "name": "function 103",
        "func": "\nmsg.topic = \"INSERT INTO `local_data` (`data`) VALUES ('\"+ msg.payload + \"');\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1080,
        "wires": [
            [
                "c4c0299bf7185dbc",
                "838733237fd1d982"
            ]
        ]
    },
    {
        "id": "838733237fd1d982",
        "type": "debug",
        "z": "d91ac3d282c069d0",
        "g": "6b7c1f4fbbe77c84",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 1040,
        "wires": []
    },
    {
        "id": "bcd67702c395a8fb",
        "type": "json",
        "z": "d91ac3d282c069d0",
        "g": "6b7c1f4fbbe77c84",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 1080,
        "wires": [
            [
                "121f11e8ca291a0e"
            ]
        ]
    },
    {
        "id": "1b58f9fcea6b249f",
        "type": "function",
        "z": "d91ac3d282c069d0",
        "g": "65c598bb5234d69b",
        "name": "function 103",
        "func": "\nmsg.topic = \"INSERT INTO `offline_data` (`data`) VALUES ('\"+ msg.payload + \"');\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 500,
        "wires": [
            [
                "e9eeb5845b5972aa",
                "83165532a02208c5"
            ]
        ]
    },
    {
        "id": "f33d6f0f0f55c8c7",
        "type": "json",
        "z": "d91ac3d282c069d0",
        "g": "65c598bb5234d69b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 500,
        "wires": [
            [
                "1b58f9fcea6b249f"
            ]
        ]
    },
    {
        "id": "83165532a02208c5",
        "type": "debug",
        "z": "d91ac3d282c069d0",
        "g": "65c598bb5234d69b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 460,
        "wires": []
    },
    {
        "id": "a92b564f771f2512",
        "type": "function",
        "z": "d91ac3d282c069d0",
        "g": "a5bc3a1930f09c8f",
        "name": "Procesar para mqtt",
        "func": "var array_in = msg.payload;\nvar data_out = [];\n\n\n\nif (msg.payload[0] == undefined){\n    node.status({ fill: \"green\", shape: \"ring\", text: \"empty data\" });\n    return null;    \n}\n\nelse {\n    data_out = JSON.parse(msg.payload[0].data);\n    \n    node.status({ fill: \"green\", shape: \"dot\", text: \"sending offline\" });\n\n    msg.payload = data_out;\n\n    return msg;\n\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 740,
        "wires": [
            [
                "f8c2dbe5933535aa",
                "7848935da681379d",
                "4d989b9847ec219b",
                "9a6f168a3cfe9e6c"
            ]
        ]
    },
    {
        "id": "45c703090ffad7f3",
        "type": "debug",
        "z": "d91ac3d282c069d0",
        "g": "a5bc3a1930f09c8f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 680,
        "wires": []
    },
    {
        "id": "f8c2dbe5933535aa",
        "type": "mqtt out",
        "z": "d91ac3d282c069d0",
        "g": "a5bc3a1930f09c8f",
        "name": "",
        "topic": "data/offline/puente_grua",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8d53d2f17df7fbc4",
        "x": 1090,
        "y": 740,
        "wires": []
    },
    {
        "id": "7848935da681379d",
        "type": "debug",
        "z": "d91ac3d282c069d0",
        "g": "a5bc3a1930f09c8f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.timestamp",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 680,
        "wires": []
    },
    {
        "id": "9a6f168a3cfe9e6c",
        "type": "function",
        "z": "d91ac3d282c069d0",
        "g": "a5bc3a1930f09c8f",
        "name": "Eliminar primer dato",
        "func": "\n// elimina el primer dato\nmsg.topic = \"DELETE FROM offline_data LIMIT 1;\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 860,
        "wires": [
            [
                "de31a22e8417c259"
            ]
        ]
    },
    {
        "id": "80cc8c7dae71c897",
        "type": "link in",
        "z": "d91ac3d282c069d0",
        "g": "6b7c1f4fbbe77c84",
        "name": "",
        "links": [
            "6a0d6344d5559850",
            "1d325151593e5d32"
        ],
        "x": 135,
        "y": 1080,
        "wires": [
            [
                "04c1122e78e23c08",
                "aa1c36cde09fb4f4"
            ]
        ]
    },
    {
        "id": "c92224eb190a3a85",
        "type": "link in",
        "z": "d91ac3d282c069d0",
        "g": "65c598bb5234d69b",
        "name": "",
        "links": [
            "6a0d6344d5559850",
            "1d325151593e5d32"
        ],
        "x": 125,
        "y": 500,
        "wires": [
            [
                "5c1f0d9723125c37"
            ]
        ]
    },
    {
        "id": "5c1f0d9723125c37",
        "type": "function",
        "z": "d91ac3d282c069d0",
        "g": "65c598bb5234d69b",
        "name": "",
        "func": "var connections = global.get('connections');\n\nvar msg2 = {}\n\nmsg.payload = msg.payload;\nif (connections.acme_server == false){\n    // Not connected\n    node.status({ fill: \"green\", shape: \"ring\", text: \"disconnected - saving\" });\n    return [msg, null];\n}\nelse{\n    // Connected\n    node.status({ fill: \"green\", shape: \"dot\", text: \"connected - no save\" });\n\n    return [null, msg];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 500,
        "wires": [
            [
                "f33d6f0f0f55c8c7"
            ],
            [
                "c2403b842567b383"
            ]
        ]
    },
    {
        "id": "c2403b842567b383",
        "type": "link out",
        "z": "d91ac3d282c069d0",
        "g": "65c598bb5234d69b",
        "name": "connected",
        "mode": "link",
        "links": [
            "901a8dc39713bf21"
        ],
        "x": 355,
        "y": 560,
        "wires": []
    },
    {
        "id": "901a8dc39713bf21",
        "type": "link in",
        "z": "d91ac3d282c069d0",
        "g": "a5bc3a1930f09c8f",
        "name": "",
        "links": [
            "c2403b842567b383"
        ],
        "x": 125,
        "y": 740,
        "wires": [
            [
                "f744467ba4084a45"
            ]
        ]
    },
    {
        "id": "124808048f0bda31",
        "type": "debug",
        "z": "d91ac3d282c069d0",
        "g": "a5bc3a1930f09c8f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1110,
        "y": 860,
        "wires": []
    },
    {
        "id": "1fe246825016b224",
        "type": "function",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "f2e2e6faa602b3b4",
        "name": "",
        "func": "\nmsg.topic = \"SELECT data FROM local_data LIMIT 10\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 2260,
        "wires": [
            [
                "2808688270ae7e19"
            ]
        ]
    },
    {
        "id": "75d640b92c14bf05",
        "type": "debug",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "f2e2e6faa602b3b4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 2320,
        "wires": []
    },
    {
        "id": "1696a641113f4ebb",
        "type": "function",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "f2e2e6faa602b3b4",
        "name": "Procesar array para csv",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\n// All data\nfor (var i = 0; i < array_in.length; i++) {\n    array_out[i] = JSON.parse(msg.payload[i].data);\n\n    // Converting simple timestamp to human readable\n    // time\n    array_out[i].timestamp = unixTimestampToHumanReadable(array_out[i].timestamp);\n}\n\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n\n\n\n// Function for timestamp to readable time\nfunction unixTimestampToHumanReadable(unixTimestamp) {\n    const date = new Date(unixTimestamp);\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    const seconds = date.getSeconds().toString().padStart(2, '0');\n\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2240,
        "wires": [
            [
                "75d640b92c14bf05",
                "f7123ee93d205da4"
            ]
        ]
    },
    {
        "id": "e6ea489a3988f9d3",
        "type": "debug",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "f2e2e6faa602b3b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 2320,
        "wires": []
    },
    {
        "id": "de212ed652df9d16",
        "type": "debug",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "f2e2e6faa602b3b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 2400,
        "wires": []
    },
    {
        "id": "5988850cd948728c",
        "type": "file",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "f2e2e6faa602b3b4",
        "name": "",
        "filename": "/root/ITEMAQ/ANGULAMIENTO/data_angulamiento.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1350,
        "y": 2240,
        "wires": [
            [
                "c75c61cf2dd42916"
            ]
        ]
    },
    {
        "id": "f7123ee93d205da4",
        "type": "function",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "f2e2e6faa602b3b4",
        "name": "csv",
        "func": "function arrayToCSV(data) {\n    // Verificar si el array de datos está vacío\n    if (data.length === 0) {\n        return '';\n    }\n\n    // Obtener las claves del primer objeto JSON para los encabezados de columna\n    const keys = Object.keys(data[0]);\n\n    // Construir los encabezados de columna\n    const headerRow = keys.join(',');\n\n    // Construir filas del CSV\n    const csvRows = [];\n    csvRows.push(headerRow);\n\n    for (const obj of data) {\n        const values = keys.map(key => obj[key]);\n        const csvRow = values.join(',');\n        csvRows.push(csvRow);\n    }\n\n    // Unir todas las filas con saltos de línea\n    return csvRows.join('\\n');\n}\n// Convertir el array de objetos JSON a una cadena CSV\nconst csvString = arrayToCSV(msg.payload);\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 2240,
        "wires": [
            [
                "d7e5425487244021",
                "5988850cd948728c"
            ]
        ]
    },
    {
        "id": "d7e5425487244021",
        "type": "debug",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "f2e2e6faa602b3b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 2500,
        "wires": []
    },
    {
        "id": "73f0360cf3cf9070",
        "type": "inject",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "f2e2e6faa602b3b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 2320,
        "wires": [
            [
                "1fe246825016b224"
            ]
        ]
    },
    {
        "id": "863f91b1290010b4",
        "type": "link in",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "f2e2e6faa602b3b4",
        "name": "",
        "links": [
            "24491a42e5626d87"
        ],
        "x": 205,
        "y": 2260,
        "wires": [
            [
                "1fe246825016b224"
            ]
        ]
    },
    {
        "id": "c75c61cf2dd42916",
        "type": "link out",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "f2e2e6faa602b3b4",
        "name": "",
        "mode": "link",
        "links": [
            "1bb50ae54662e6ff"
        ],
        "x": 1625,
        "y": 2240,
        "wires": []
    },
    {
        "id": "4b44abe7284d3925",
        "type": "inject",
        "z": "d91ac3d282c069d0",
        "g": "3e6cdd9658d4b98d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 220,
        "wires": [
            [
                "dbb0818b6ec8428d"
            ]
        ]
    },
    {
        "id": "3b0fb10da4893963",
        "type": "mqtt out",
        "z": "d91ac3d282c069d0",
        "g": "3e6cdd9658d4b98d",
        "name": "",
        "topic": "data_live",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8d53d2f17df7fbc4",
        "x": 620,
        "y": 220,
        "wires": []
    },
    {
        "id": "dbb0818b6ec8428d",
        "type": "function",
        "z": "d91ac3d282c069d0",
        "g": "3e6cdd9658d4b98d",
        "name": "function 103",
        "func": "var data_json = global.get('gateway_data');\ndata_json.timestamp = msg.payload;\nmsg.payload = data_json;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 220,
        "wires": [
            [
                "129a57a1dde77825"
            ]
        ]
    },
    {
        "id": "129a57a1dde77825",
        "type": "debug",
        "z": "d91ac3d282c069d0",
        "g": "3e6cdd9658d4b98d",
        "name": "debug 119",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 610,
        "y": 160,
        "wires": []
    },
    {
        "id": "10fe9b1f0057fb10",
        "type": "mqtt out",
        "z": "d91ac3d282c069d0",
        "g": "3e6cdd9658d4b98d",
        "name": "",
        "topic": "data/online/save",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8d53d2f17df7fbc4",
        "x": 620,
        "y": 280,
        "wires": []
    },
    {
        "id": "ce80aa21413d62c3",
        "type": "function",
        "z": "d91ac3d282c069d0",
        "g": "3e6cdd9658d4b98d",
        "name": "function 103",
        "func": "var data_json = global.get('gateway_data');\ndata_json.timestamp = msg.payload;\nmsg.payload = data_json;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 280,
        "wires": [
            [
                "10fe9b1f0057fb10"
            ]
        ]
    },
    {
        "id": "d825a23051422fb4",
        "type": "inject",
        "z": "d91ac3d282c069d0",
        "g": "3e6cdd9658d4b98d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 280,
        "wires": [
            [
                "ce80aa21413d62c3"
            ]
        ]
    },
    {
        "id": "1d325151593e5d32",
        "type": "link out",
        "z": "d91ac3d282c069d0",
        "g": "3e6cdd9658d4b98d",
        "name": "data_stream",
        "mode": "link",
        "links": [
            "80cc8c7dae71c897",
            "c92224eb190a3a85"
        ],
        "x": 555,
        "y": 340,
        "wires": []
    },
    {
        "id": "2106c9058afc494e",
        "type": "inject",
        "z": "d91ac3d282c069d0",
        "g": "3e6cdd9658d4b98d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 340,
        "wires": [
            [
                "ab7d8e0de922c171"
            ]
        ]
    },
    {
        "id": "ab7d8e0de922c171",
        "type": "function",
        "z": "d91ac3d282c069d0",
        "g": "3e6cdd9658d4b98d",
        "name": "function 103",
        "func": "var data_json = global.get('gateway_data');\ndata_json.timestamp = msg.payload;\nmsg.payload = data_json;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 340,
        "wires": [
            [
                "1d325151593e5d32"
            ]
        ]
    },
    {
        "id": "89c8205089453bdc",
        "type": "mysql",
        "z": "d91ac3d282c069d0",
        "g": "a5bc3a1930f09c8f",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 480,
        "y": 740,
        "wires": [
            [
                "a92b564f771f2512",
                "45c703090ffad7f3"
            ]
        ]
    },
    {
        "id": "c4c0299bf7185dbc",
        "type": "mysql",
        "z": "d91ac3d282c069d0",
        "g": "6b7c1f4fbbe77c84",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 740,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "e9eeb5845b5972aa",
        "type": "mysql",
        "z": "d91ac3d282c069d0",
        "g": "65c598bb5234d69b",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 720,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "de31a22e8417c259",
        "type": "mysql",
        "z": "d91ac3d282c069d0",
        "g": "a5bc3a1930f09c8f",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 920,
        "y": 860,
        "wires": [
            [
                "124808048f0bda31"
            ]
        ]
    },
    {
        "id": "2808688270ae7e19",
        "type": "mysql",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "f2e2e6faa602b3b4",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 520,
        "y": 2260,
        "wires": [
            [
                "1696a641113f4ebb",
                "e6ea489a3988f9d3"
            ]
        ]
    },
    {
        "id": "04c1122e78e23c08",
        "type": "debug",
        "z": "d91ac3d282c069d0",
        "g": "6b7c1f4fbbe77c84",
        "name": "debug 123",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 1000,
        "wires": []
    },
    {
        "id": "5c869004c94f9e5b",
        "type": "function",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "24d00d6b1a472a12",
        "name": "Query ",
        "func": "\nmsg.topic = `\n  SELECT * FROM local_data WHERE data < CURDATE();\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1240,
        "wires": [
            [
                "6be862ef70aa5ce0"
            ]
        ]
    },
    {
        "id": "6be862ef70aa5ce0",
        "type": "mysql",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "24d00d6b1a472a12",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 560,
        "y": 1240,
        "wires": [
            [
                "bdd4d3fb6e929cc7"
            ]
        ]
    },
    {
        "id": "a7d503cc74fad55a",
        "type": "inject",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "24d00d6b1a472a12",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "01 00 * * 6",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1240,
        "wires": [
            [
                "5c869004c94f9e5b"
            ]
        ]
    },
    {
        "id": "c304b9efafbee2ce",
        "type": "debug",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "24d00d6b1a472a12",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 1240,
        "wires": []
    },
    {
        "id": "6da3f330a7d17166",
        "type": "comment",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "24d00d6b1a472a12",
        "name": "Se guarda a csv cada sábado",
        "info": "",
        "x": 200,
        "y": 1340,
        "wires": []
    },
    {
        "id": "bdd4d3fb6e929cc7",
        "type": "function",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "24d00d6b1a472a12",
        "name": "Procesar array para csv",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\n// All data\nfor (var i = 0; i < array_in.length; i++) {\n    array_out[i] = JSON.parse(msg.payload[i].data);\n\n    // Converting simple timestamp to human readable\n    // time\n    array_out[i].timestamp = unixTimestampToHumanReadable(array_out[i].timestamp);\n}\n\n// Nombre del archivo CSV\nmsg.filename = `/root/ITEMAQ/ANGULAMIENTO/${array_out[0].timestamp.split(\" \")[0]} hasta ${array_out[array_out.length - 1].timestamp.split(\" \")[0]}`;\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n\n\n\n// Function for timestamp to readable time\nfunction unixTimestampToHumanReadable(unixTimestamp) {\n    const date = new Date(unixTimestamp);\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    const seconds = date.getSeconds().toString().padStart(2, '0');\n\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1240,
        "wires": [
            [
                "c659995ce3fdc68c"
            ]
        ]
    },
    {
        "id": "c659995ce3fdc68c",
        "type": "function",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "24d00d6b1a472a12",
        "name": "csv",
        "func": "function arrayToCSV(data) {\n    // Verificar si el array de datos está vacío\n    if (data.length === 0) {\n        return '';\n    }\n\n    // Obtener las claves del primer objeto JSON para los encabezados de columna\n    const keys = Object.keys(data[0]);\n\n    // Construir los encabezados de columna\n    const headerRow = keys.join(',');\n\n    // Construir filas del CSV\n    const csvRows = [];\n    csvRows.push(headerRow);\n\n    for (const obj of data) {\n        const values = keys.map(key => obj[key]);\n        const csvRow = values.join(',');\n        csvRows.push(csvRow);\n    }\n\n    // Unir todas las filas con saltos de línea\n    return csvRows.join('\\n');\n}\n// Convertir el array de objetos JSON a una cadena CSV\nconst csvString = arrayToCSV(msg.payload);\nmsg.payload = csvString;\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1240,
        "wires": [
            [
                "c4ff83c05b9335ed"
            ]
        ]
    },
    {
        "id": "c4ff83c05b9335ed",
        "type": "file",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "24d00d6b1a472a12",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1100,
        "y": 1240,
        "wires": [
            [
                "08bfa969958c3141"
            ]
        ]
    },
    {
        "id": "08bfa969958c3141",
        "type": "function",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "24d00d6b1a472a12",
        "name": "Query ",
        "func": "// msg.topic = `\n//   DELETE FROM local_data\n//   WHERE date >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK)\n//     AND date < CURDATE();\n// `;\n\n// Eliminar toda la data anterior al dia \nmsg.topic = `\n  DELETE FROM local_data\n  WHERE date < CURDATE();\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1240,
        "wires": [
            [
                "a0b002195171260a"
            ]
        ]
    },
    {
        "id": "a0b002195171260a",
        "type": "mysql",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "24d00d6b1a472a12",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 1460,
        "y": 1240,
        "wires": [
            [
                "c304b9efafbee2ce",
                "4512bff38c8cd675"
            ]
        ]
    },
    {
        "id": "ac795a621f12d022",
        "type": "exec",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "f3d20ca83e6edb3b",
        "command": "/root/axotec_scripts/delete_older_file.sh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 520,
        "y": 1800,
        "wires": [
            [
                "107bce0cc90af4f7"
            ],
            [
                "e89cfe106f7515fa"
            ],
            []
        ]
    },
    {
        "id": "aa710893e7dd8d1a",
        "type": "inject",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "f3d20ca83e6edb3b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "01 00 * * 0",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1800,
        "wires": [
            [
                "ac795a621f12d022"
            ]
        ]
    },
    {
        "id": "107bce0cc90af4f7",
        "type": "debug",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "f3d20ca83e6edb3b",
        "name": "debug 124",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1780,
        "wires": []
    },
    {
        "id": "3e80e2e1aef47e06",
        "type": "function",
        "z": "d91ac3d282c069d0",
        "g": "1a0d550707f8cc4f",
        "name": "",
        "func": "msg.topic = \"DELETE FROM local_data WHERE date < DATE_SUB(CURDATE(), INTERVAL 365 DAY);\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 2000,
        "wires": [
            [
                "58836c8d2ead4daa"
            ]
        ]
    },
    {
        "id": "58836c8d2ead4daa",
        "type": "mysql",
        "z": "d91ac3d282c069d0",
        "g": "1a0d550707f8cc4f",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 540,
        "y": 1980,
        "wires": [
            [
                "7f4121ee2de54254"
            ]
        ]
    },
    {
        "id": "60716de1fbc60246",
        "type": "inject",
        "z": "d91ac3d282c069d0",
        "g": "1a0d550707f8cc4f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "59 23 * * 5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 2040,
        "wires": [
            [
                "3e80e2e1aef47e06"
            ]
        ]
    },
    {
        "id": "7f4121ee2de54254",
        "type": "debug",
        "z": "d91ac3d282c069d0",
        "g": "1a0d550707f8cc4f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1980,
        "wires": []
    },
    {
        "id": "75f7fd59086311fd",
        "type": "comment",
        "z": "d91ac3d282c069d0",
        "g": "1a0d550707f8cc4f",
        "name": "La data se elimina cada viernes",
        "info": "",
        "x": 210,
        "y": 2100,
        "wires": []
    },
    {
        "id": "e89cfe106f7515fa",
        "type": "debug",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "f3d20ca83e6edb3b",
        "name": "debug 125",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1840,
        "wires": []
    },
    {
        "id": "f5322cda4a2f356c",
        "type": "comment",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "24d00d6b1a472a12",
        "name": "Se guarda a csv local cada sábado",
        "info": "Estos es posible porque el inkect se hace cada semana",
        "x": 500,
        "y": 1360,
        "wires": []
    },
    {
        "id": "05d8f608fe5eb3a7",
        "type": "link in",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "24d00d6b1a472a12",
        "name": "",
        "links": [
            "24491a42e5626d87"
        ],
        "x": 215,
        "y": 1300,
        "wires": [
            [
                "5c869004c94f9e5b"
            ]
        ]
    },
    {
        "id": "4512bff38c8cd675",
        "type": "link out",
        "z": "d91ac3d282c069d0",
        "d": true,
        "g": "24d00d6b1a472a12",
        "name": "connected",
        "mode": "link",
        "links": [
            "1bb50ae54662e6ff"
        ],
        "x": 1615,
        "y": 1300,
        "wires": []
    },
    {
        "id": "545927d79126b532",
        "type": "inject",
        "z": "d91ac3d282c069d0",
        "g": "1d1b1c227a0bc262",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 2700,
        "wires": [
            [
                "75f4430f63d837a1"
            ]
        ]
    },
    {
        "id": "75f4430f63d837a1",
        "type": "function",
        "z": "d91ac3d282c069d0",
        "g": "1d1b1c227a0bc262",
        "name": "DELETE ALL",
        "func": "\nmsg.topic = `\n  DELETE FROM local_data;\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2700,
        "wires": [
            [
                "0c617771a3bf80f9"
            ]
        ]
    },
    {
        "id": "0c617771a3bf80f9",
        "type": "mysql",
        "z": "d91ac3d282c069d0",
        "g": "1d1b1c227a0bc262",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 540,
        "y": 2700,
        "wires": [
            []
        ]
    },
    {
        "id": "aa1c36cde09fb4f4",
        "type": "function",
        "z": "d91ac3d282c069d0",
        "g": "6b7c1f4fbbe77c84",
        "name": "Filter",
        "func": "let out_data = {}\n\nout_data.timestamp = msg.payload.timestamp;\nout_data.x_axis = msg.payload.data.rm9000.x_axis;\nout_data.y_axis = msg.payload.data.rm9000.y_axis;\nout_data.z1_axis = msg.payload.data.rm9000.z1_axis;\nout_data.z2_axis = msg.payload.data.rm9000.z2_axis;\nout_data.carga1 = msg.payload.data.carga_grua.carga1;\nout_data.carga2 = msg.payload.data.carga_grua.carga2;\nout_data.speed = msg.payload.data.gps.speed;\nout_data.state = msg.payload.data.sensor_estado.state;\n\n\nmsg.payload = out_data;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1080,
        "wires": [
            [
                "bcd67702c395a8fb"
            ]
        ]
    },
    {
        "id": "33bbe4c6d1917a06",
        "type": "function",
        "z": "d91ac3d282c069d0",
        "g": "a6e52991c91f4c94",
        "name": "Query ",
        "func": "\nmsg.topic = `\n  SELECT * FROM local_data WHERE data < CURDATE();\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1520,
        "wires": [
            [
                "a6bcf2f01996a5c8"
            ]
        ]
    },
    {
        "id": "a6bcf2f01996a5c8",
        "type": "mysql",
        "z": "d91ac3d282c069d0",
        "g": "a6e52991c91f4c94",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 540,
        "y": 1520,
        "wires": [
            [
                "f468ca404ec7b3ba"
            ]
        ]
    },
    {
        "id": "ed991b72ae9093a6",
        "type": "inject",
        "z": "d91ac3d282c069d0",
        "g": "a6e52991c91f4c94",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1520,
        "wires": [
            [
                "33bbe4c6d1917a06"
            ]
        ]
    },
    {
        "id": "f468ca404ec7b3ba",
        "type": "function",
        "z": "d91ac3d282c069d0",
        "g": "a6e52991c91f4c94",
        "name": "Procesar array para csv",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\n// All data\nfor (var i = 0; i < array_in.length; i++) {\n    array_out[i] = JSON.parse(msg.payload[i].data);\n\n    // Converting simple timestamp to human readable\n    // time\n    array_out[i].timestamp = unixTimestampToHumanReadable(array_out[i].timestamp);\n}\nmsg.filename = `${array_out[0].timestamp.split(\" \")[0]} hasta ${array_out[array_out.length - 1].timestamp.split(\" \")[0]}`;\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n\n\n\n// Function for timestamp to readable time\nfunction unixTimestampToHumanReadable(unixTimestamp) {\n    const date = new Date(unixTimestamp);\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    const seconds = date.getSeconds().toString().padStart(2, '0');\n\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1520,
        "wires": [
            [
                "92118584c83a7087"
            ]
        ]
    },
    {
        "id": "92118584c83a7087",
        "type": "function",
        "z": "d91ac3d282c069d0",
        "g": "a6e52991c91f4c94",
        "name": "csv",
        "func": "function arrayToCSV(data) {\n    // Verificar si el array de datos está vacío\n    if (data.length === 0) {\n        return '';\n    }\n\n    // Obtener las claves del primer objeto JSON para los encabezados de columna\n    const keys = Object.keys(data[0]);\n\n    // Construir los encabezados de columna\n    const headerRow = keys.join(',');\n\n    // Construir filas del CSV\n    const csvRows = [];\n    csvRows.push(headerRow);\n\n    for (const obj of data) {\n        const values = keys.map(key => obj[key]);\n        const csvRow = values.join(',');\n        csvRows.push(csvRow);\n    }\n\n    // Unir todas las filas con saltos de línea\n    return csvRows.join('\\n');\n}\n// Convertir el array de objetos JSON a una cadena CSV\nconst csvString = arrayToCSV(msg.payload);\nmsg.payload = csvString;\nmsg.descarga = 1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1520,
        "wires": [
            [
                "e349b59a54266dfb"
            ]
        ]
    },
    {
        "id": "e349b59a54266dfb",
        "type": "ui_template",
        "z": "d91ac3d282c069d0",
        "g": "a6e52991c91f4c94",
        "group": "25bec14118d50672",
        "name": "descarga csv",
        "order": 2,
        "width": 26,
        "height": 1,
        "format": "<div id=\"descarga_csv\"></div>\n<script>\n\n\nfunction downloadCSV(csv, filename) {  \n    var csvFile;  \n    var downloadLink;  \n    \n    //define the file type to text/csv  \n    csvFile = new Blob([csv], {type: 'text/csv'});  \n    downloadLink = document.createElement(\"a\");  \n    downloadLink.download = filename;  \n    downloadLink.href = window.URL.createObjectURL(csvFile);  \n    downloadLink.style.display = \"none\";  \n  \n    document.body.appendChild(downloadLink);  \n    downloadLink.click();  \n    document.body.removeChild(downloadLink);\n\n}\n\n\n\n// Update data & layout\n(function(scope) {\n  scope.$watch('msg', function(msg) {\n      if (msg.descarga){\n        csv = msg.payload;\n        downloadCSV(csv, msg.filename);\n      }\n  });\n})(scope);\n</script>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1110,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "b96aedb2c8faedf7",
        "type": "function",
        "z": "12b6281657f0f653",
        "g": "2491dc44ba7072d1",
        "name": "filtramos array por estados",
        "func": "var properties = global.get('properties');\n\nvar array_in = msg.payload;\nvar array_out = [];\nvar msg1 = {};\nvar msg2 = {};\n\n\nmsg.payload = array_in.filter(d => d.state == properties.states[0]);\nmsg1.payload =array_in.filter(d => d.state == properties.states[1]);\nmsg2.payload =array_in.filter(d => d.state == properties.states[2]);\n\n\n// positivo, negativo, init\nreturn [msg, msg1, msg2];",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 720,
        "wires": [
            [
                "f98abb4fe7a367b0",
                "7acb17b8b6747504"
            ],
            [
                "d883f4cd09fbd51e"
            ],
            []
        ]
    },
    {
        "id": "f98abb4fe7a367b0",
        "type": "function",
        "z": "12b6281657f0f653",
        "g": "2491dc44ba7072d1",
        "name": "obtenemos suma de horas útiles totales",
        "func": "var array_in = msg.payload;\n\nlet sum = 0;\n\narray_in.forEach(element => {\n    sum += element.hours;\n});\n\nmsg.payload = sum;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 660,
        "wires": [
            [
                "5e9a1077c77c1127",
                "5a470f467d6d46dc"
            ]
        ]
    },
    {
        "id": "7acb17b8b6747504",
        "type": "function",
        "z": "12b6281657f0f653",
        "g": "2491dc44ba7072d1",
        "name": "filtramos horas útiles acumuladas por mes ",
        "func": "var properties = global.get('properties');\n\nvar array_in = msg.payload;\nvar array_out = [];\nvar nombresMeses = properties.month_names;\n\narray_out = array_in.filter(d => d.state == properties.states[0]);\n\nmsg.payload = array_out;\n\n\n// Inicializa un objeto para almacenar las sumas por mes\nconst sumaPorMes = {};\n\n// Itera sobre los datos y suma las horas por mes\narray_in.forEach(dato => {\n  const mes = dato.month;\n  const horas = dato.hours;\n  \n  // Si el mes aún no existe en el objeto sumaPorMes, inicialízalo en 0\n  if (!sumaPorMes[mes]) {\n    sumaPorMes[mes] = 0;\n  }\n  \n  // Suma las horas al mes correspondiente\n  sumaPorMes[mes] += horas;\n});\n\n// Crea un array con las sumas acumuladas en el orden de los nombres de los meses\nconst sumasAcumuladas = nombresMeses.map(mes => sumaPorMes[mes] || 0);\narray_out = sumasAcumuladas;\n\nmsg.payload = array_out;\nmsg.topic = properties.states[0];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 700,
        "wires": [
            [
                "7da739b59da81a69"
            ]
        ]
    },
    {
        "id": "d883f4cd09fbd51e",
        "type": "function",
        "z": "12b6281657f0f653",
        "g": "2491dc44ba7072d1",
        "name": "filtramos horas no útiles acumuladas por mes ",
        "func": "var properties = global.get('properties');\n\nvar array_in = msg.payload;\nvar array_out = [];\nvar nombresMeses = properties.month_names;\n\narray_out = array_in.filter(d => d.state == properties.states[0]);\n\nmsg.payload = array_out;\n\n\n// Inicializa un objeto para almacenar las sumas por mes\nconst sumaPorMes = {};\n\n// Itera sobre los datos y suma las horas por mes\narray_in.forEach(dato => {\n  const mes = dato.month;\n  const horas = dato.hours;\n  \n  // Si el mes aún no existe en el objeto sumaPorMes, inicialízalo en 0\n  if (!sumaPorMes[mes]) {\n    sumaPorMes[mes] = 0;\n  }\n  \n  // Suma las horas al mes correspondiente\n  sumaPorMes[mes] += horas;\n});\n\n// Crea un array con las sumas acumuladas en el orden de los nombres de los meses\nconst sumasAcumuladas = nombresMeses.map(mes => sumaPorMes[mes] || 0);\narray_out = sumasAcumuladas;\n\nmsg.payload = array_out;\nmsg.topic = properties.states[1];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 740,
        "wires": [
            [
                "50bf59d98eba1a53",
                "3cf4ea1277d17c9b"
            ]
        ]
    },
    {
        "id": "50bf59d98eba1a53",
        "type": "debug",
        "z": "12b6281657f0f653",
        "g": "2491dc44ba7072d1",
        "name": "debug 159",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 800,
        "wires": []
    },
    {
        "id": "7da739b59da81a69",
        "type": "change",
        "z": "12b6281657f0f653",
        "g": "2491dc44ba7072d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "graphs.array1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "3cf4ea1277d17c9b",
        "type": "change",
        "z": "12b6281657f0f653",
        "g": "2491dc44ba7072d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "graphs.array2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "561856b7fa69579b",
        "type": "function",
        "z": "12b6281657f0f653",
        "g": "4c1211b19890c008",
        "name": "Preprocesamiento para frecuencia mensual",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nvar count = 0; // Cambié el inicio de count a 0\nvar current_state = \"\";\nvar prev_state = \"\";\nvar current_date = 0;\n\nfor (var i = 0; i < array_in.length; i++) {\n    current_state = array_in[i].state;\n    current_date = array_in[i].timestamp;\n\n    if (current_state != prev_state) {\n        // Crear un nuevo objeto en cada cambio de estado\n        array_out[count] = {\n            state: current_state,\n            fInit: current_date,\n            fEnd: current_date\n        };\n        count++;\n    } else {\n        // Actualizar la fecha_fin del objeto anterior si el estado es el mismo\n        array_out[count - 1].fEnd = current_date;\n    }\n    prev_state = current_state;\n}\n\nmsg.payload = array_out;\nreturn msg;\n\n\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 420,
        "wires": [
            [
                "8a611a2f49459cc9"
            ]
        ]
    },
    {
        "id": "8a611a2f49459cc9",
        "type": "function",
        "z": "12b6281657f0f653",
        "g": "4c1211b19890c008",
        "name": "Añadiendo mes y horas",
        "func": "var properties = global.get('properties');\n\n\nvar array_in = msg.payload;\nvar array_out = [];\n\nvar nombresMeses = properties.month_names;\n\n\nfor(var i=0;i<array_in.length;i++){\n    array_out[i] = array_in[i];\n    // Calcula la diferencia en milisegundos\n    const diferenciaEnMilisegundos = (array_in[i].fEnd - array_in[i].fInit); // Multiplicamos por 1000 para convertir a milisegundos\n\n    // Convierte la diferencia en milisegundos a horas\n    const horas = diferenciaEnMilisegundos / (60 * 60 * 1000); // 1 hora = 60 minutos * 60 segundos * 1000 milisegundos\n    array_out[i].hours = horas;\n\n    // MES\n    var date = new Date(array_in[i].fInit);\n    // Obtiene el número del mes (0 para enero, 1 para febrero, etc.)\n    var mes = date.getMonth();\n    array_out[i].month = nombresMeses[mes];\n\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 480,
        "wires": [
            [
                "b96aedb2c8faedf7",
                "850fefbfc2e4e036"
            ]
        ]
    },
    {
        "id": "cb41c12bc59dd4ef",
        "type": "mysql",
        "z": "12b6281657f0f653",
        "g": "4c1211b19890c008",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 460,
        "y": 420,
        "wires": [
            [
                "cec16d99a7a25b04"
            ]
        ]
    },
    {
        "id": "e148917b295d6dd2",
        "type": "function",
        "z": "12b6281657f0f653",
        "g": "4c1211b19890c008",
        "name": "",
        "func": "var properties = global.get('properties');\n\n\n// msg.topic =`SELECT data FROM local_data\n// ORDER BY date ASC\n// LIMIT 10;`;\n\nmsg.topic = `SELECT data FROM local_data;`;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 420,
        "wires": [
            [
                "cb41c12bc59dd4ef"
            ]
        ]
    },
    {
        "id": "cec16d99a7a25b04",
        "type": "function",
        "z": "12b6281657f0f653",
        "g": "4c1211b19890c008",
        "name": "Process to json array",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = JSON.parse(msg.payload[i].data);\n}\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 420,
        "wires": [
            [
                "561856b7fa69579b"
            ]
        ]
    },
    {
        "id": "1dd14c02f2393c01",
        "type": "inject",
        "z": "12b6281657f0f653",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 160,
        "wires": [
            [
                "39c5a815debadc9f"
            ]
        ]
    },
    {
        "id": "39c5a815debadc9f",
        "type": "change",
        "z": "12b6281657f0f653",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "properties",
                "pt": "global",
                "to": "{\"table_name\":\"local_data\",\"states\":[\"positivo\",\"negativo\",\"init\"],\"month_names\":[\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "f3614f0385ccc827",
        "type": "inject",
        "z": "12b6281657f0f653",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 870,
        "y": 160,
        "wires": [
            [
                "85b4bb4e0bb49041"
            ]
        ]
    },
    {
        "id": "85b4bb4e0bb49041",
        "type": "change",
        "z": "12b6281657f0f653",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "graphs",
                "pt": "global",
                "to": "{\"array1\":[0,0,0,0,0,0,0,0,0,0,0,0],\"array2\":[0,0,0,0,0,0,0,0,0,0,0,0]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "850fefbfc2e4e036",
        "type": "http response",
        "z": "12b6281657f0f653",
        "g": "4c1211b19890c008",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1180,
        "y": 480,
        "wires": []
    },
    {
        "id": "fa1e23d60e897bfb",
        "type": "http in",
        "z": "12b6281657f0f653",
        "g": "4c1211b19890c008",
        "name": "",
        "url": "/frequency",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 420,
        "wires": [
            [
                "e148917b295d6dd2"
            ]
        ]
    },
    {
        "id": "09432c578ffb84f4",
        "type": "http in",
        "z": "12b6281657f0f653",
        "name": "",
        "url": "/cumulatedfrequency",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 370,
        "y": 940,
        "wires": [
            [
                "c7f8e0dcbe0f1683"
            ]
        ]
    },
    {
        "id": "de6229a748b4171f",
        "type": "http response",
        "z": "12b6281657f0f653",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 840,
        "y": 940,
        "wires": []
    },
    {
        "id": "c7f8e0dcbe0f1683",
        "type": "function",
        "z": "12b6281657f0f653",
        "name": "function 122",
        "func": "var data = global.get('graphs')\n\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 940,
        "wires": [
            [
                "de6229a748b4171f",
                "811fab7bd96eba29"
            ]
        ]
    },
    {
        "id": "31c3ccc4207e816c",
        "type": "inject",
        "z": "12b6281657f0f653",
        "g": "4c1211b19890c008",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 480,
        "wires": [
            [
                "e148917b295d6dd2"
            ]
        ]
    },
    {
        "id": "5e9a1077c77c1127",
        "type": "debug",
        "z": "12b6281657f0f653",
        "g": "2491dc44ba7072d1",
        "name": "debug 161",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 660,
        "wires": []
    },
    {
        "id": "811fab7bd96eba29",
        "type": "debug",
        "z": "12b6281657f0f653",
        "name": "debug 162",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1020,
        "wires": []
    },
    {
        "id": "5a470f467d6d46dc",
        "type": "change",
        "z": "12b6281657f0f653",
        "g": "2491dc44ba7072d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hourmeter.total",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "45822acf90a8bdd3",
        "type": "http in",
        "z": "12b6281657f0f653",
        "name": "",
        "url": "/hourmeter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 1200,
        "wires": [
            [
                "45fb59add5ae2e58"
            ]
        ]
    },
    {
        "id": "ce40d9db692bee8a",
        "type": "http response",
        "z": "12b6281657f0f653",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 780,
        "y": 1200,
        "wires": []
    },
    {
        "id": "45fb59add5ae2e58",
        "type": "function",
        "z": "12b6281657f0f653",
        "name": "function 123",
        "func": "var hourmeter = global.get(\"hourmeter\");\n\nfunction decimalHoursToHoursAndMinutes(decimalHours) {\n  const hours = Math.floor(decimalHours);\n  const minutes = Math.round((decimalHours - hours) * 60);\n  return { hours, minutes };\n}\n\n\n\n\nmsg.payload = decimalHoursToHoursAndMinutes(hourmeter.total);\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1200,
        "wires": [
            [
                "ce40d9db692bee8a",
                "8062610a9d29681f"
            ]
        ]
    },
    {
        "id": "8062610a9d29681f",
        "type": "debug",
        "z": "12b6281657f0f653",
        "name": "debug 163",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1240,
        "wires": []
    },
    {
        "id": "14d993cd66d8acbc",
        "type": "inject",
        "z": "12b6281657f0f653",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 390,
        "y": 1120,
        "wires": [
            [
                "8691a2e33293c113"
            ]
        ]
    },
    {
        "id": "8691a2e33293c113",
        "type": "change",
        "z": "12b6281657f0f653",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hourmeter",
                "pt": "global",
                "to": "{\"total\":0, \"minutes\":0,\"hours\":0}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "540c5e936dbbfaaf",
        "type": "inject",
        "z": "12b6281657f0f653",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 1280,
        "wires": [
            [
                "45fb59add5ae2e58"
            ]
        ]
    },
    {
        "id": "7751d33be3325498",
        "type": "http in",
        "z": "12b6281657f0f653",
        "d": true,
        "name": "",
        "url": "/hourmeter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 360,
        "y": 1480,
        "wires": [
            [
                "13665e27d3554675"
            ]
        ]
    },
    {
        "id": "cd9e6f4c9a49f2a3",
        "type": "http response",
        "z": "12b6281657f0f653",
        "d": true,
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 860,
        "y": 1480,
        "wires": []
    },
    {
        "id": "13665e27d3554675",
        "type": "function",
        "z": "12b6281657f0f653",
        "d": true,
        "name": "function 124",
        "func": "var hourmeter = global.get(\"hourmeter\");\n\n\nmsg.payload = hourmeter;\n\nhourmeter.minutes += 1;\nif (hourmeter.minutes >=60){\n  hourmeter.minutes = 0;\n  hourmeter.hours += 1;\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1480,
        "wires": [
            [
                "cd9e6f4c9a49f2a3"
            ]
        ]
    },
    {
        "id": "369f04d2cf0c811c",
        "type": "inject",
        "z": "12b6281657f0f653",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 450,
        "y": 1380,
        "wires": [
            [
                "18fda71ed532483c"
            ]
        ]
    },
    {
        "id": "18fda71ed532483c",
        "type": "change",
        "z": "12b6281657f0f653",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hourmeter",
                "pt": "global",
                "to": "{\"minutes\":0,\"hours\":0}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "af693dcb41193602",
        "type": "http in",
        "z": "12b6281657f0f653",
        "name": "",
        "url": "/status-draw",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 380,
        "y": 1820,
        "wires": [
            [
                "4ef0a2abc1babe16"
            ]
        ]
    },
    {
        "id": "2492abe59fb7c124",
        "type": "http response",
        "z": "12b6281657f0f653",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 880,
        "y": 1820,
        "wires": []
    },
    {
        "id": "4ef0a2abc1babe16",
        "type": "function",
        "z": "12b6281657f0f653",
        "name": "function 125",
        "func": "const arraySize = 12;\nconst minValue = 0;\nconst maxValue = 100;\n\nfunction randomNumber(minValue, maxValue){\nvar number = Math.floor(Math.random() * (maxValue - minValue + 1)) + minValue;\nreturn number;\n}\n\nmsg.payload = {\n  \"rm9000\":{\"x_axis\":randomNumber(0,75), \"y_axis\":randomNumber(0,38)},\n  \"carga_grua\":{\"carga1\":randomNumber(0,10), \"carga2\":randomNumber(0,10)}\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1820,
        "wires": [
            [
                "2492abe59fb7c124"
            ]
        ]
    },
    {
        "id": "ec90563918ab3883",
        "type": "http in",
        "z": "12b6281657f0f653",
        "name": "",
        "url": "/status-desc",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 320,
        "y": 1700,
        "wires": [
            [
                "ca99f517f8d0284a"
            ]
        ]
    },
    {
        "id": "cc447b4918c87811",
        "type": "http response",
        "z": "12b6281657f0f653",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1000,
        "y": 1700,
        "wires": []
    },
    {
        "id": "4ebf086cde315e49",
        "type": "debug",
        "z": "12b6281657f0f653",
        "name": "debug 171",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 1620,
        "wires": []
    },
    {
        "id": "ca99f517f8d0284a",
        "type": "function",
        "z": "12b6281657f0f653",
        "name": "function 126",
        "func": "var status = global.get(\"gateway_data\").data.sensor_estado.state;\n\nif (status === \"init\"){\n    msg.payload = {\"status\": 0}\n    \n\n}\nelse{\n    msg.payload = {\"status\": 1}\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1700,
        "wires": [
            [
                "cc447b4918c87811",
                "4ebf086cde315e49"
            ]
        ]
    },
    {
        "id": "1afd5cec81f07905",
        "type": "function",
        "z": "ccbba8193508b160",
        "name": "",
        "func": "var properties = global.get('properties');\n\n\n// msg.topic =`SELECT data FROM local_data\n// ORDER BY date ASC\n// LIMIT 10;`;\n\nmsg.topic = `SELECT data FROM local_data;`;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 340,
        "wires": [
            [
                "6e54ef6d06aa9daa"
            ]
        ]
    },
    {
        "id": "0691751ad43d6e19",
        "type": "http in",
        "z": "ccbba8193508b160",
        "name": "",
        "url": "/bell1",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 340,
        "wires": [
            [
                "1afd5cec81f07905"
            ]
        ]
    },
    {
        "id": "74c5e538fffdd527",
        "type": "http response",
        "z": "ccbba8193508b160",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1120,
        "y": 300,
        "wires": []
    },
    {
        "id": "6e54ef6d06aa9daa",
        "type": "mysql",
        "z": "ccbba8193508b160",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 540,
        "y": 340,
        "wires": [
            [
                "ca7d08bcc5d1b252"
            ]
        ]
    },
    {
        "id": "ca7d08bcc5d1b252",
        "type": "function",
        "z": "ccbba8193508b160",
        "name": "Process to json array",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = JSON.parse(msg.payload[i].data);\n}\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 340,
        "wires": [
            [
                "bacbbce613cf7a97",
                "4b4c206763080349"
            ]
        ]
    },
    {
        "id": "71e641b3de3dd236",
        "type": "debug",
        "z": "ccbba8193508b160",
        "name": "debug 164",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 340,
        "wires": []
    },
    {
        "id": "bacbbce613cf7a97",
        "type": "function",
        "z": "ccbba8193508b160",
        "name": "to carga1",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = array_in[i].carga1;\n}\n\nmsg.payload = array_out;\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 340,
        "wires": [
            [
                "71e641b3de3dd236",
                "74c5e538fffdd527"
            ]
        ]
    },
    {
        "id": "4b4c206763080349",
        "type": "debug",
        "z": "ccbba8193508b160",
        "name": "debug 165",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 380,
        "wires": []
    },
    {
        "id": "a4fb89939f777435",
        "type": "function",
        "z": "ccbba8193508b160",
        "name": "",
        "func": "var properties = global.get('properties');\n\n\n// msg.topic =`SELECT data FROM local_data\n// ORDER BY date ASC\n// LIMIT 10;`;\n\nmsg.topic = `SELECT data FROM local_data;`;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 520,
        "wires": [
            [
                "ac0d4fb62a60eb17"
            ]
        ]
    },
    {
        "id": "6611359445a40875",
        "type": "http in",
        "z": "ccbba8193508b160",
        "name": "",
        "url": "/bell2",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 520,
        "wires": [
            [
                "a4fb89939f777435"
            ]
        ]
    },
    {
        "id": "576425faceb2d8d2",
        "type": "http response",
        "z": "ccbba8193508b160",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1100,
        "y": 480,
        "wires": []
    },
    {
        "id": "ac0d4fb62a60eb17",
        "type": "mysql",
        "z": "ccbba8193508b160",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 520,
        "y": 520,
        "wires": [
            [
                "1a40002f62fd9509"
            ]
        ]
    },
    {
        "id": "1a40002f62fd9509",
        "type": "function",
        "z": "ccbba8193508b160",
        "name": "Process to json array",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = JSON.parse(msg.payload[i].data);\n}\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 520,
        "wires": [
            [
                "6e5024bd83a8b958",
                "32543335f2385e18"
            ]
        ]
    },
    {
        "id": "f558651d1c044c21",
        "type": "debug",
        "z": "ccbba8193508b160",
        "name": "debug 166",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 520,
        "wires": []
    },
    {
        "id": "6e5024bd83a8b958",
        "type": "function",
        "z": "ccbba8193508b160",
        "name": "to carga2",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = array_in[i].carga2;\n}\n\nmsg.payload = array_out;\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 520,
        "wires": [
            [
                "f558651d1c044c21",
                "576425faceb2d8d2"
            ]
        ]
    },
    {
        "id": "32543335f2385e18",
        "type": "debug",
        "z": "ccbba8193508b160",
        "name": "debug 167",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 560,
        "wires": []
    },
    {
        "id": "8580898d0416f2be",
        "type": "http in",
        "z": "ccbba8193508b160",
        "name": "",
        "url": "/heat1",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 740,
        "wires": [
            [
                "5951339fb027f9bf"
            ]
        ]
    },
    {
        "id": "f2f557e11e51046a",
        "type": "http response",
        "z": "ccbba8193508b160",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1100,
        "y": 720,
        "wires": []
    },
    {
        "id": "5951339fb027f9bf",
        "type": "function",
        "z": "ccbba8193508b160",
        "name": "",
        "func": "var properties = global.get('properties');\n\n\n// msg.topic =`SELECT data FROM local_data\n// ORDER BY date ASC\n// LIMIT 10;`;\n\nmsg.topic = `SELECT data FROM local_data;`;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 740,
        "wires": [
            [
                "3ee2d3326521d0cc"
            ]
        ]
    },
    {
        "id": "3ee2d3326521d0cc",
        "type": "mysql",
        "z": "ccbba8193508b160",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 500,
        "y": 740,
        "wires": [
            [
                "b8551e6cff23c416"
            ]
        ]
    },
    {
        "id": "b8551e6cff23c416",
        "type": "function",
        "z": "ccbba8193508b160",
        "name": "Process to json array",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = JSON.parse(msg.payload[i].data);\n}\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 740,
        "wires": [
            [
                "5866acbf3ab6d09b"
            ]
        ]
    },
    {
        "id": "5866acbf3ab6d09b",
        "type": "function",
        "z": "ccbba8193508b160",
        "name": "to carga1",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = { \"g\": array_in[i].x_axis ,\n        \"l\": array_in[i].y_axis,\n        \"tmp\": array_in[i].carga1};\n\n    \n}\n\nmsg.payload = array_out;\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 740,
        "wires": [
            [
                "b62f1cc9ce8dda96",
                "f2f557e11e51046a"
            ]
        ]
    },
    {
        "id": "b62f1cc9ce8dda96",
        "type": "debug",
        "z": "ccbba8193508b160",
        "name": "debug 168",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 820,
        "wires": []
    },
    {
        "id": "cbec22a5e3d6462f",
        "type": "inject",
        "z": "ccbba8193508b160",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 820,
        "wires": [
            [
                "5951339fb027f9bf"
            ]
        ]
    },
    {
        "id": "d1a55a3323434040",
        "type": "http in",
        "z": "ccbba8193508b160",
        "name": "",
        "url": "/heat2",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 1040,
        "wires": [
            [
                "d0755b3692e0b3dd"
            ]
        ]
    },
    {
        "id": "db350179b6e48cff",
        "type": "http response",
        "z": "ccbba8193508b160",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1100,
        "y": 1020,
        "wires": []
    },
    {
        "id": "d0755b3692e0b3dd",
        "type": "function",
        "z": "ccbba8193508b160",
        "name": "",
        "func": "var properties = global.get('properties');\n\n\n// msg.topic =`SELECT data FROM local_data\n// ORDER BY date ASC\n// LIMIT 10;`;\n\nmsg.topic = `SELECT data FROM local_data;`;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1040,
        "wires": [
            [
                "cd77c78639023eb2"
            ]
        ]
    },
    {
        "id": "cd77c78639023eb2",
        "type": "mysql",
        "z": "ccbba8193508b160",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 500,
        "y": 1040,
        "wires": [
            [
                "a7eb3061dd07a5fb"
            ]
        ]
    },
    {
        "id": "a7eb3061dd07a5fb",
        "type": "function",
        "z": "ccbba8193508b160",
        "name": "Process to json array",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = JSON.parse(msg.payload[i].data);\n}\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1040,
        "wires": [
            [
                "7506180c62ae2992"
            ]
        ]
    },
    {
        "id": "7506180c62ae2992",
        "type": "function",
        "z": "ccbba8193508b160",
        "name": "to carga2",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = { \"g\": array_in[i].x_axis ,\n        \"l\": array_in[i].y_axis,\n        \"tmp\": array_in[i].carga2};\n\n    \n}\n\nmsg.payload = array_out;\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1040,
        "wires": [
            [
                "cb5ac76698191c89",
                "db350179b6e48cff"
            ]
        ]
    },
    {
        "id": "cb5ac76698191c89",
        "type": "debug",
        "z": "ccbba8193508b160",
        "name": "debug 169",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 1120,
        "wires": []
    },
    {
        "id": "84eade63b1906cb6",
        "type": "inject",
        "z": "ccbba8193508b160",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1120,
        "wires": [
            [
                "d0755b3692e0b3dd"
            ]
        ]
    },
    {
        "id": "4b54d2bcd5fa1302",
        "type": "http in",
        "z": "ccbba8193508b160",
        "name": "",
        "url": "/realtime",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 1400,
        "wires": [
            [
                "a5a250eed62aeaf6"
            ]
        ]
    },
    {
        "id": "869dd987768f740f",
        "type": "http response",
        "z": "ccbba8193508b160",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1080,
        "y": 1400,
        "wires": []
    },
    {
        "id": "9f951d15a3c36ecd",
        "type": "debug",
        "z": "ccbba8193508b160",
        "name": "debug 170",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 1520,
        "wires": []
    },
    {
        "id": "a5a250eed62aeaf6",
        "type": "function",
        "z": "ccbba8193508b160",
        "name": "",
        "func": "var properties = global.get('properties');\n\n\n// msg.topic =`SELECT data FROM local_data\n// ORDER BY date ASC\n// LIMIT 10;`;\n\nmsg.topic = `SELECT data FROM local_data;`;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1400,
        "wires": [
            [
                "9b5adc928ce94899"
            ]
        ]
    },
    {
        "id": "9b5adc928ce94899",
        "type": "mysql",
        "z": "ccbba8193508b160",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 500,
        "y": 1400,
        "wires": [
            [
                "80dc667ae924a1aa"
            ]
        ]
    },
    {
        "id": "80dc667ae924a1aa",
        "type": "function",
        "z": "ccbba8193508b160",
        "name": "Process to json array",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = JSON.parse(msg.payload[i].data);\n}\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1400,
        "wires": [
            [
                "da162258c7d03d69"
            ]
        ]
    },
    {
        "id": "da162258c7d03d69",
        "type": "function",
        "z": "ccbba8193508b160",
        "name": "to realtime",
        "func": "var array_in = msg.payload;\nvar array_out1 = [];\nvar array_out2 = [];\n\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out1[i] = [array_in[i].timestamp, array_in[i].z1_axis];\n    array_out2[i] = [array_in[i].timestamp, array_in[i].z2_axis];\n    \n}\n\nmsg.payload = {\"array1\": array_out1,\n                \"array2\": array_out2};\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 1400,
        "wires": [
            [
                "9f951d15a3c36ecd",
                "869dd987768f740f"
            ]
        ]
    },
    {
        "id": "e73b2e27b018880c",
        "type": "http in",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "url": "/frequency",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 320,
        "y": 260,
        "wires": [
            [
                "c03f6a9ca41d74b5"
            ]
        ]
    },
    {
        "id": "c03f6a9ca41d74b5",
        "type": "change",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"hours\":1,\"month\":\"Octubre\",\"fInit\":1698076766890,\"fEnd\":1698076866890,\"state\":\"positivo\",\"sw\":true},{\"hours\":1,\"month\":\"Octubre\",\"fInit\":1698076866890,\"fEnd\":1698076966890,\"state\":\"negativo\",\"sw\":true},{\"hours\":1,\"month\":\"Octubre\",\"fInit\":1698076966890,\"fEnd\":1698077066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Octubre\",\"fInit\":1698076966890,\"fEnd\":1698077066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Octubre\",\"fInit\":1698076966890,\"fEnd\":1698077066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Octubre\",\"fInit\":1698076966890,\"fEnd\":1698077066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Octubre\",\"fInit\":1698076966890,\"fEnd\":1698077066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Noviembre\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Noviembre\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Noviembre\",\"fInit\":1698076966890,\"fEnd\":1698077066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Noviembre\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Noviembre\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Diciembre\",\"fInit\":1698076966890,\"fEnd\":1698077066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Diciembre\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Diciembre\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Diciembre\",\"fInit\":1698076966890,\"fEnd\":1698077066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Diciembre\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Diciembre\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Enero\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Enero\",\"fInit\":1698076966890,\"fEnd\":1698077066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Enero\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Enero\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Febrero\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"positivo\",\"sw\":true},{\"hours\":1,\"month\":\"Febrero\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"positivo\",\"sw\":true},{\"hours\":1,\"month\":\"Febrero\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"positivo\",\"sw\":true},{\"hours\":1,\"month\":\"Febrero\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"positivo\",\"sw\":true},{\"hours\":1,\"month\":\"Febrero\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"positivo\",\"sw\":true}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 260,
        "wires": [
            [
                "5bd242acd662cc38"
            ]
        ]
    },
    {
        "id": "5bd242acd662cc38",
        "type": "http response",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 780,
        "y": 260,
        "wires": []
    },
    {
        "id": "4d32200d3a2bf213",
        "type": "http in",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "url": "/realtime",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 310,
        "y": 560,
        "wires": [
            [
                "3363fccda3fef63b"
            ]
        ]
    },
    {
        "id": "e52b1d1812e50d85",
        "type": "http response",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 780,
        "y": 560,
        "wires": []
    },
    {
        "id": "3363fccda3fef63b",
        "type": "function",
        "z": "e7bb50b21f9817d9",
        "name": "function 112",
        "func": "var global_realtime = global.get(\"realtime\");\n\nvar array1 = [\n  [1483401600000, 116.33, 114.76, 116.15],\n  [1483488000000, 116.51, 115.75, 116.02],\n  [1483574400000, 116.86, 115.81, 116.61],\n  [1483660800000, 118.16, 116.47, 117.91],\n  [1483920000000, 119.43, 117.94, 118.99],\n  [1484006400000, 119.38, 118.3, 119.11],\n  [1484092800000, 119.93, 118.6, 119.75],\n  [1484179200000, 119.3, 118.21, 119.25],\n  [1484265600000, 119.62, 118.81, 119.04],\n  [1484611200000, 120.24, 118.22, 120.0],\n  [1484697600000, 120.5, 119.71, 119.99],\n  [1484784000000, 120.09, 119.37, 119.78],\n  [1484870400000, 120.45, 119.73, 120.0],\n  [1485129600000, 120.81, 119.77, 120.08],\n  [1485216000000, 120.1, 119.5, 119.97],\n  [1485302400000, 122.1, 120.28, 121.88],\n  [1485388800000, 122.44, 121.6, 121.94],\n  [1485475200000, 122.35, 121.6, 121.95],\n  [1485734400000, 121.63, 120.66, 121.63],\n  [1485820800000, 121.39, 120.62, 121.35],\n  [1485993600000, 129.39, 127.78, 128.53],\n  [1486080000000, 129.19, 128.16, 129.08],\n  [1486339200000, 130.5, 128.9, 130.29],\n  [1486425600000, 132.09, 130.45, 131.53],\n  [1486512000000, 132.22, 131.22, 132.04],\n  [1486598400000, 132.44, 131.12, 132.42],\n  [1486684800000, 132.94, 132.05, 132.12],\n  [1486944000000, 133.82, 132.75, 133.29],\n  [1487030400000, 135.09, 133.25, 135.02],\n  [1487116800000, 136.27, 134.62, 135.51],\n  [1487203200000, 135.9, 134.84, 135.34],\n  [1487289600000, 135.83, 135.1, 135.72],\n  [1487635200000, 136.75, 135.98, 136.7],\n  [1487721600000, 137.12, 136.11, 137.11],\n  [1487808000000, 137.48, 136.3, 136.53],\n  [1487894400000, 136.66, 135.28, 136.66],\n  [1488153600000, 137.44, 136.28, 136.93],\n  [1488240000000, 137.44, 136.7, 136.99],\n];\n\nvar array2 = [\n  [1483401600000, 115.8, 116.33, 114.76, 116.15],\n  [1483488000000, 115.85, 116.51, 115.75, 116.02],\n  [1483574400000, 115.92, 116.86, 115.81, 116.61],\n  [1483660800000, 116.78, 118.16, 116.47, 117.91],\n  [1483920000000, 117.95, 119.43, 117.94, 118.99],\n  [1484006400000, 118.77, 119.38, 118.3, 119.11],\n  [1484092800000, 118.74, 119.93, 118.6, 119.75],\n  [1484179200000, 118.9, 119.3, 118.21, 119.25],\n  [1484265600000, 119.11, 119.62, 118.81, 119.04],\n  [1484611200000, 118.34, 120.24, 118.22, 120.0],\n  [1484697600000, 120.0, 120.5, 119.71, 119.99],\n  [1484784000000, 119.4, 120.09, 119.37, 119.78],\n  [1484870400000, 120.45, 120.45, 119.73, 120.0],\n  [1485129600000, 120.0, 120.81, 119.77, 120.08],\n  [1485216000000, 119.55, 120.1, 119.5, 119.97],\n  [1485302400000, 120.42, 122.1, 120.28, 121.88],\n  [1485388800000, 121.67, 122.44, 121.6, 121.94],\n  [1485475200000, 122.14, 122.35, 121.6, 121.95],\n  [1485734400000, 120.93, 121.63, 120.66, 121.63],\n  [1485820800000, 121.15, 121.39, 120.62, 121.35],\n  [1485993600000, 127.98, 129.39, 127.78, 128.53],\n  [1486080000000, 128.31, 129.19, 128.16, 129.08],\n  [1486339200000, 129.13, 130.5, 128.9, 130.29],\n  [1486425600000, 130.54, 132.09, 130.45, 131.53],\n  [1486512000000, 131.35, 132.22, 131.22, 132.04],\n  [1486598400000, 131.65, 132.44, 131.12, 132.42],\n  [1486684800000, 132.46, 132.94, 132.05, 132.12],\n  [1486944000000, 133.08, 133.82, 132.75, 133.29],\n  [1487030400000, 133.47, 135.09, 133.25, 135.02],\n  [1487116800000, 135.52, 136.27, 134.62, 135.51],\n  [1487203200000, 135.67, 135.9, 134.84, 135.34],\n  [1487289600000, 135.1, 135.83, 135.1, 135.72],\n  [1487635200000, 136.23, 136.75, 135.98, 136.7],\n  [1487721600000, 136.43, 137.12, 136.11, 137.11],\n  [1487808000000, 137.38, 137.48, 136.3, 136.53],\n  [1487894400000, 135.91, 136.66, 135.28, 136.66],\n  [1488153600000, 137.14, 137.44, 136.28, 136.93],\n  [1488240000000, 137.08, 137.44, 136.7, 136.99],\n  [1488440000000, 137.08, 137.44, 136.7, 136.99]\n];\n\nmsg.payload = global_realtime;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 560,
        "wires": [
            [
                "e52b1d1812e50d85",
                "95fec4e00c65e91b"
            ]
        ]
    },
    {
        "id": "d63a203ca9c66e6e",
        "type": "inject",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 40,
        "wires": [
            [
                "f57de3850e730edc"
            ]
        ]
    },
    {
        "id": "f57de3850e730edc",
        "type": "change",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "realtime",
                "pt": "global",
                "to": "{\"array1\":[],\"array2\":[]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "ee8416594914b1d3",
        "type": "inject",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 100,
        "wires": [
            [
                "b5536d9a51afc3d1"
            ]
        ]
    },
    {
        "id": "b5536d9a51afc3d1",
        "type": "function",
        "z": "e7bb50b21f9817d9",
        "name": "function 113",
        "func": "var global_realtime = global.get(\"realtime\");\n\nfunction getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nglobal_realtime.array1.push([msg.payload, getRandomArbitrary(0,10) ])\nglobal_realtime.array2.push([msg.payload, getRandomArbitrary(0,10) ])\nmsg.payload = global_realtime.array1;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 100,
        "wires": [
            [
                "cc7e6743b0ab3689"
            ]
        ]
    },
    {
        "id": "cc7e6743b0ab3689",
        "type": "debug",
        "z": "e7bb50b21f9817d9",
        "name": "debug 126",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 100,
        "wires": []
    },
    {
        "id": "b3f82a2f31062092",
        "type": "http in",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "url": "/cumulatedfrequency",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 350,
        "y": 360,
        "wires": [
            [
                "d6be88102596c82d"
            ]
        ]
    },
    {
        "id": "9caf72f87b320984",
        "type": "http response",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 820,
        "y": 360,
        "wires": []
    },
    {
        "id": "d6be88102596c82d",
        "type": "function",
        "z": "e7bb50b21f9817d9",
        "name": "function 114",
        "func": "const arraySize = 12;\nconst minValue = 0;\nconst maxValue = 100;\nconst randomArray = [];\n\nfor (let i = 0; i < arraySize; i++) {\n  const randomNumber = Math.floor(Math.random() * (maxValue - minValue + 1)) + minValue;\n  randomArray.push(randomNumber);\n}\n\nmsg.payload = {\n    \"array1\": randomArray,\n    \"array2\": randomArray\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 360,
        "wires": [
            [
                "9caf72f87b320984"
            ]
        ]
    },
    {
        "id": "52c2cb9693ac4315",
        "type": "http in",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "url": "/bell1",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 340,
        "y": 420,
        "wires": [
            [
                "6c45b6dbd3c497d5"
            ]
        ]
    },
    {
        "id": "f9f172d16da434b7",
        "type": "http response",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 820,
        "y": 420,
        "wires": []
    },
    {
        "id": "6c45b6dbd3c497d5",
        "type": "function",
        "z": "e7bb50b21f9817d9",
        "name": "function 115",
        "func": "const arraySize = 13;\nconst minValue = 0;\nconst maxValue = 100;\nconst randomArray = [];\n\nfor (let i = 0; i < arraySize; i++) {\n  const randomNumber = Math.floor(Math.random() * (maxValue - minValue + 1)) + minValue;\n  randomArray.push(randomNumber);\n}\n\nmsg.payload = randomArray;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 420,
        "wires": [
            [
                "f9f172d16da434b7",
                "1d712a0d757c604a"
            ]
        ]
    },
    {
        "id": "1d712a0d757c604a",
        "type": "debug",
        "z": "e7bb50b21f9817d9",
        "name": "debug 127",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 480,
        "wires": []
    },
    {
        "id": "682bdf5582de9d02",
        "type": "http in",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "url": "/bell2",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 660,
        "wires": [
            [
                "03bbdf2057806ba3"
            ]
        ]
    },
    {
        "id": "12e57e71b2488dec",
        "type": "http response",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 760,
        "y": 660,
        "wires": []
    },
    {
        "id": "03bbdf2057806ba3",
        "type": "function",
        "z": "e7bb50b21f9817d9",
        "name": "function 116",
        "func": "const arraySize = 13;\nconst minValue = 0;\nconst maxValue = 100;\nconst randomArray = [];\n\nfor (let i = 0; i < arraySize; i++) {\n  const randomNumber = Math.floor(Math.random() * (maxValue - minValue + 1)) + minValue;\n  randomArray.push(randomNumber);\n}\n\nmsg.payload = randomArray;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 660,
        "wires": [
            [
                "12e57e71b2488dec",
                "7b339c567e8441dd"
            ]
        ]
    },
    {
        "id": "7b339c567e8441dd",
        "type": "debug",
        "z": "e7bb50b21f9817d9",
        "name": "debug 128",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 720,
        "wires": []
    },
    {
        "id": "49f52441f42eccd2",
        "type": "http in",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "url": "/barchart1",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 920,
        "wires": [
            [
                "677de558c06a0b18"
            ]
        ]
    },
    {
        "id": "b545aee89207cac3",
        "type": "http response",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 780,
        "y": 920,
        "wires": []
    },
    {
        "id": "677de558c06a0b18",
        "type": "function",
        "z": "e7bb50b21f9817d9",
        "name": "function 117",
        "func": "const arraySize = 12;\nconst minValue = 0;\nconst maxValue = 100;\nconst randomArray = [];\n\nfor (let i = 0; i < arraySize; i++) {\n  const randomNumber = Math.floor(Math.random() * (maxValue - minValue + 1)) + minValue;\n  randomArray.push(randomNumber);\n}\n\nmsg.payload = randomArray;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 920,
        "wires": [
            [
                "b545aee89207cac3"
            ]
        ]
    },
    {
        "id": "7d960e9b97cf7cd3",
        "type": "http in",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "url": "/barchart2",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 1000,
        "wires": [
            [
                "80854ceec67839a4"
            ]
        ]
    },
    {
        "id": "43f7966f19088fba",
        "type": "http response",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 780,
        "y": 1000,
        "wires": []
    },
    {
        "id": "80854ceec67839a4",
        "type": "function",
        "z": "e7bb50b21f9817d9",
        "name": "function 118",
        "func": "const arraySize = 12;\nconst minValue = 0;\nconst maxValue = 100;\nconst randomArray = [];\n\nfor (let i = 0; i < arraySize; i++) {\n  const randomNumber = Math.floor(Math.random() * (maxValue - minValue + 1)) + minValue;\n  randomArray.push(randomNumber);\n}\n\nmsg.payload = randomArray;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1000,
        "wires": [
            [
                "43f7966f19088fba"
            ]
        ]
    },
    {
        "id": "95fec4e00c65e91b",
        "type": "debug",
        "z": "e7bb50b21f9817d9",
        "name": "debug 129",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 600,
        "wires": []
    },
    {
        "id": "92a3366b2c9c5e32",
        "type": "http in",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "url": "/status-draw",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 260,
        "y": 1180,
        "wires": [
            [
                "4f05fe2fdcb38e8f"
            ]
        ]
    },
    {
        "id": "e210b8f5e615bd0e",
        "type": "http response",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 760,
        "y": 1180,
        "wires": []
    },
    {
        "id": "4f05fe2fdcb38e8f",
        "type": "function",
        "z": "e7bb50b21f9817d9",
        "name": "function 119",
        "func": "const arraySize = 12;\nconst minValue = 0;\nconst maxValue = 100;\n\nfunction randomNumber(minValue, maxValue){\nvar number = Math.floor(Math.random() * (maxValue - minValue + 1)) + minValue;\nreturn number;\n}\n\nmsg.payload = {\n  \"rm9000\":{\"x_axis\":randomNumber(0,75), \"y_axis\":randomNumber(0,38)},\n  \"carga_grua\":{\"carga1\":randomNumber(0,10), \"carga2\":randomNumber(0,10)}\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1180,
        "wires": [
            [
                "e210b8f5e615bd0e"
            ]
        ]
    },
    {
        "id": "082af9c899d4d959",
        "type": "http in",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "url": "/hourmeter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 260,
        "y": 1380,
        "wires": [
            [
                "33abe1ce5bfb652b"
            ]
        ]
    },
    {
        "id": "d897bca3f8fd5b79",
        "type": "http response",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 760,
        "y": 1380,
        "wires": []
    },
    {
        "id": "33abe1ce5bfb652b",
        "type": "function",
        "z": "e7bb50b21f9817d9",
        "name": "function 120",
        "func": "var hourmeter = global.get(\"hourmeter\");\n\n\nmsg.payload = hourmeter;\n\nhourmeter.minutes += 1;\nif (hourmeter.minutes >=60){\n  hourmeter.minutes = 0;\n  hourmeter.hours += 1;\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1380,
        "wires": [
            [
                "d897bca3f8fd5b79"
            ]
        ]
    },
    {
        "id": "68bdd6b6740bebb4",
        "type": "http in",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "url": "/status-desc",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 260,
        "y": 1120,
        "wires": [
            [
                "f7116aa1b4a33b66"
            ]
        ]
    },
    {
        "id": "3752576055a02af3",
        "type": "http response",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 760,
        "y": 1120,
        "wires": []
    },
    {
        "id": "f7116aa1b4a33b66",
        "type": "function",
        "z": "e7bb50b21f9817d9",
        "name": "function 121",
        "func": "const arraySize = 12;\nconst minValue = 0;\nconst maxValue = 100;\n\nfunction randomNumber(minValue, maxValue){\nvar number = Math.floor(Math.random() * (maxValue - minValue + 1)) + minValue;\nreturn number;\n}\n\nmsg.payload = {\n  \"status\": randomNumber(0,1), \n};\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1120,
        "wires": [
            [
                "3752576055a02af3"
            ]
        ]
    },
    {
        "id": "698dd709fe455cbe",
        "type": "inject",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 350,
        "y": 1280,
        "wires": [
            [
                "2907737b107aa45c"
            ]
        ]
    },
    {
        "id": "2907737b107aa45c",
        "type": "change",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hourmeter",
                "pt": "global",
                "to": "{\"minutes\":0,\"hours\":0}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "a4aa6c2b9dd43c0c",
        "type": "http in",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "url": "/heat1",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 300,
        "y": 1660,
        "wires": [
            [
                "e49164c21b2a0a80"
            ]
        ]
    },
    {
        "id": "974c1fcd555cb916",
        "type": "http response",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 800,
        "y": 1660,
        "wires": []
    },
    {
        "id": "e49164c21b2a0a80",
        "type": "change",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "heat1",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 1700,
        "wires": [
            [
                "974c1fcd555cb916"
            ]
        ]
    },
    {
        "id": "0c42f0aba4a22599",
        "type": "inject",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 1540,
        "wires": [
            [
                "1de45e1ea62c8639"
            ]
        ]
    },
    {
        "id": "1de45e1ea62c8639",
        "type": "change",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "heat1",
                "pt": "global",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "bb52086734897313",
        "type": "inject",
        "z": "e7bb50b21f9817d9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 1880,
        "wires": [
            [
                "b2f9910713ba5191"
            ]
        ]
    },
    {
        "id": "b2f9910713ba5191",
        "type": "function",
        "z": "e7bb50b21f9817d9",
        "name": "function 104",
        "func": "var heat_array = global.get(\"heat1\")\n\nfunction getRandomNumber(min=0, max=500) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst new_value = { \"g\": getRandomNumber(), \"l\": getRandomNumber(), \"tmp\":getRandomNumber(0,300)};\n\nheat_array.push(new_value);\n\nglobal.set(\"heat1\", heat_array);\n\nmsg.payload = heat_array;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1880,
        "wires": [
            [
                "bab758c0d3d2376e"
            ]
        ]
    },
    {
        "id": "bab758c0d3d2376e",
        "type": "debug",
        "z": "e7bb50b21f9817d9",
        "name": "debug 128",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 1880,
        "wires": []
    },
    {
        "id": "e2e8f2bc2a0fa59e",
        "type": "debug",
        "z": "87fe75fba6b00d60",
        "name": "debug 110",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 400,
        "wires": []
    },
    {
        "id": "2e2a96912f9d7f28",
        "type": "switch",
        "z": "87fe75fba6b00d60",
        "name": "VTG (velocidad km/h)",
        "property": "payload.sentence",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "VTG",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 840,
        "y": 620,
        "wires": [
            [
                "e3cb23e9838998a9"
            ]
        ]
    },
    {
        "id": "9f8c640d28c2dbbc",
        "type": "switch",
        "z": "87fe75fba6b00d60",
        "name": "GCA (lat, lon, alt)",
        "property": "payload.sentence",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "GGA",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 830,
        "y": 520,
        "wires": [
            [
                "71ce98d18eaba14a",
                "d9359ec226f5a587",
                "773046d3e8439af1",
                "e79dd601cc9c793f",
                "28a64d7c7b708ed3"
            ]
        ]
    },
    {
        "id": "71ce98d18eaba14a",
        "type": "function",
        "z": "87fe75fba6b00d60",
        "name": "function 92",
        "func": "msg.payload = { \"name\": \"Vehículo\", \"lat\": msg.payload.lat, \"lon\": msg.payload.lon }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "e3cb23e9838998a9",
        "type": "function",
        "z": "87fe75fba6b00d60",
        "name": "function 93",
        "func": "msg.payload = msg.payload.speedKmph\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 620,
        "wires": [
            [
                "b5dfe0c350e6a7ab",
                "0534cbc24653f9c7"
            ]
        ]
    },
    {
        "id": "62e2e4bb0648be2b",
        "type": "comment",
        "z": "87fe75fba6b00d60",
        "name": "Getting GPS data",
        "info": "",
        "x": 340,
        "y": 300,
        "wires": []
    },
    {
        "id": "773046d3e8439af1",
        "type": "function",
        "z": "87fe75fba6b00d60",
        "name": "longitud",
        "func": "msg.payload = msg.payload.lon;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 320,
        "wires": [
            [
                "cdb92e3372f95d3d",
                "e476710c2d6f2857"
            ]
        ]
    },
    {
        "id": "d9359ec226f5a587",
        "type": "function",
        "z": "87fe75fba6b00d60",
        "name": "latitud",
        "func": "msg.payload = msg.payload.lat;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 260,
        "wires": [
            [
                "1a422330e071023e",
                "170b8b8963c41720"
            ]
        ]
    },
    {
        "id": "e79dd601cc9c793f",
        "type": "function",
        "z": "87fe75fba6b00d60",
        "name": "altitud",
        "func": "msg.payload = msg.payload.alt;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 380,
        "wires": [
            [
                "0a51973433ed0faf"
            ]
        ]
    },
    {
        "id": "ca14bd801a031291",
        "type": "inject",
        "z": "87fe75fba6b00d60",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 870,
        "y": 80,
        "wires": [
            [
                "3ebb85ecf3126f56"
            ]
        ]
    },
    {
        "id": "3ebb85ecf3126f56",
        "type": "function",
        "z": "87fe75fba6b00d60",
        "name": "Global",
        "func": "\nvar data_json = { \"general_flag\": 0 };\n\nglobal.set('data_json', data_json);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b5dfe0c350e6a7ab",
        "type": "debug",
        "z": "87fe75fba6b00d60",
        "name": "debug 111",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1310,
        "y": 720,
        "wires": []
    },
    {
        "id": "7d7cb1a0abb407a4",
        "type": "debug",
        "z": "87fe75fba6b00d60",
        "name": "debug 112",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 540,
        "wires": []
    },
    {
        "id": "205bdcd253d53399",
        "type": "comment",
        "z": "87fe75fba6b00d60",
        "name": "SENDING TO CLOUD",
        "info": "",
        "x": 1320,
        "y": 40,
        "wires": []
    },
    {
        "id": "a2009d0ab2ccef3a",
        "type": "debug",
        "z": "87fe75fba6b00d60",
        "name": "debug 121",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 490,
        "y": 400,
        "wires": []
    },
    {
        "id": "170b8b8963c41720",
        "type": "change",
        "z": "87fe75fba6b00d60",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gps.latitude",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "e476710c2d6f2857",
        "type": "change",
        "z": "87fe75fba6b00d60",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gps.longitude",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "0a51973433ed0faf",
        "type": "change",
        "z": "87fe75fba6b00d60",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gps.altitude",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "1a422330e071023e",
        "type": "debug",
        "z": "87fe75fba6b00d60",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1210,
        "y": 140,
        "wires": []
    },
    {
        "id": "0534cbc24653f9c7",
        "type": "change",
        "z": "87fe75fba6b00d60",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gps.speed",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "28a64d7c7b708ed3",
        "type": "function",
        "z": "87fe75fba6b00d60",
        "name": "numero de satelites",
        "func": "msg.payload = msg.payload.numSat;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 440,
        "wires": [
            [
                "7d7cb1a0abb407a4",
                "b253103a13d4e225",
                "b32165e61e3af597"
            ]
        ]
    },
    {
        "id": "b253103a13d4e225",
        "type": "change",
        "z": "87fe75fba6b00d60",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gps.num_sat",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "b32165e61e3af597",
        "type": "change",
        "z": "87fe75fba6b00d60",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.num_gps_sat",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1530,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "cdb92e3372f95d3d",
        "type": "debug",
        "z": "87fe75fba6b00d60",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1210,
        "y": 360,
        "wires": []
    },
    {
        "id": "be4fa11e3767c765",
        "type": "nmea",
        "z": "87fe75fba6b00d60",
        "name": "",
        "property": "payload",
        "outputProperty": "payload",
        "x": 570,
        "y": 540,
        "wires": [
            [
                "2e2a96912f9d7f28",
                "9f8c640d28c2dbbc",
                "e2e8f2bc2a0fa59e"
            ]
        ]
    },
    {
        "id": "2d7923c474abe8c7",
        "type": "serial in",
        "z": "87fe75fba6b00d60",
        "name": "",
        "serial": "eadfda525a15b034",
        "x": 290,
        "y": 440,
        "wires": [
            [
                "a2009d0ab2ccef3a",
                "be4fa11e3767c765"
            ]
        ]
    },
    {
        "id": "0fa85570732327d9",
        "type": "exec",
        "z": "93c938d261dc36e3",
        "command": "mount /dev/sda1 /media/USB/",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 710,
        "y": 280,
        "wires": [
            [],
            [],
            [
                "7cb1bfa6ee14cd59"
            ]
        ]
    },
    {
        "id": "908fa73116dffd7a",
        "type": "exec",
        "z": "93c938d261dc36e3",
        "command": "umount /media/USB",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 880,
        "y": 480,
        "wires": [
            [],
            [],
            [
                "eb67adf7cd48d352",
                "484501af6a01d73c"
            ]
        ]
    },
    {
        "id": "f0909c5883cf2bb5",
        "type": "delay",
        "z": "93c938d261dc36e3",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 500,
        "y": 280,
        "wires": [
            [
                "0fa85570732327d9"
            ]
        ]
    },
    {
        "id": "611c4768cd164731",
        "type": "delay",
        "z": "93c938d261dc36e3",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 500,
        "y": 360,
        "wires": [
            [
                "24491a42e5626d87"
            ]
        ]
    },
    {
        "id": "79c85eb3c32b4cec",
        "type": "delay",
        "z": "93c938d261dc36e3",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 680,
        "y": 480,
        "wires": [
            [
                "908fa73116dffd7a"
            ]
        ]
    },
    {
        "id": "6cae6ebd51676aa2",
        "type": "exec",
        "z": "93c938d261dc36e3",
        "command": "echo 1 > /dev/usrled3; echo 0 > /dev/usrled2",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 510,
        "y": 180,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5913ac761e735950",
        "type": "exec",
        "z": "93c938d261dc36e3",
        "command": "echo 0 > /dev/usrled3; echo 1 > /dev/usrled2",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1390,
        "y": 660,
        "wires": [
            [],
            [],
            [
                "95b9733afe4cfa28"
            ]
        ]
    },
    {
        "id": "411b82cd9be62670",
        "type": "exec",
        "z": "93c938d261dc36e3",
        "command": "echo 0 > /dev/usrled3; echo 0 > /dev/usrled2; umount /media/USB",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 440,
        "y": 600,
        "wires": [
            [],
            [],
            [
                "36c50bea4f163c33"
            ]
        ]
    },
    {
        "id": "8280a977f37e7427",
        "type": "exec",
        "z": "93c938d261dc36e3",
        "command": "echo 0 > /dev/diod3",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 950,
        "y": 980,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "3b41906495a76b75",
        "type": "exec",
        "z": "93c938d261dc36e3",
        "command": "echo 0 > /dev/usrled2",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 960,
        "y": 860,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "7c8765ccbcef1d36",
        "type": "inject",
        "z": "93c938d261dc36e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 730,
        "y": 940,
        "wires": [
            [
                "3b41906495a76b75",
                "8280a977f37e7427",
                "a24ecf78cb9c4bcd",
                "6599757e27dee406"
            ]
        ]
    },
    {
        "id": "eb67adf7cd48d352",
        "type": "debug",
        "z": "93c938d261dc36e3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 480,
        "wires": []
    },
    {
        "id": "24491a42e5626d87",
        "type": "link out",
        "z": "93c938d261dc36e3",
        "name": "descarga_usb",
        "mode": "link",
        "links": [
            "453da7bdd0eca604",
            "08ef0af123c7225b",
            "05d8f608fe5eb3a7",
            "5640511ec10b0865"
        ],
        "x": 605,
        "y": 400,
        "wires": []
    },
    {
        "id": "1bb50ae54662e6ff",
        "type": "link in",
        "z": "93c938d261dc36e3",
        "name": "descarga_done",
        "links": [
            "f89cd51984aeef3d",
            "fa52f9efaa73c12b",
            "4512bff38c8cd675",
            "2bc1b60033c6d16d"
        ],
        "x": 805,
        "y": 400,
        "wires": [
            [
                "09f0e4f9549d2ba9"
            ]
        ]
    },
    {
        "id": "09f0e4f9549d2ba9",
        "type": "exec",
        "z": "93c938d261dc36e3",
        "command": "cp -r /root/ITEMAQ/ANGULAMIENTO /media/USB",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1030,
        "y": 400,
        "wires": [
            [],
            [],
            [
                "79c85eb3c32b4cec"
            ]
        ]
    },
    {
        "id": "bb293532cfb39e99",
        "type": "comment",
        "z": "93c938d261dc36e3",
        "name": "saving csv",
        "info": "",
        "x": 700,
        "y": 400,
        "wires": []
    },
    {
        "id": "36c50bea4f163c33",
        "type": "debug",
        "z": "93c938d261dc36e3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 700,
        "wires": []
    },
    {
        "id": "484501af6a01d73c",
        "type": "function",
        "z": "93c938d261dc36e3",
        "name": "",
        "func": "if (msg.payload.code == 0){\n    node.status({ fill: \"green\", shape: \"dot\", text: \"usb connected\" });\n    return [null, msg];\n    \n}\nelse{\n    node.status({ fill: \"red\", shape: \"ring\", text: \"usb disconnected\" });\n    return [msg, null];\n}\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 600,
        "wires": [
            [
                "af2952fef3c4bb96",
                "39db48e634e5f68e"
            ],
            [
                "5913ac761e735950",
                "ca21724456fbfc8b"
            ]
        ]
    },
    {
        "id": "af2952fef3c4bb96",
        "type": "exec",
        "z": "93c938d261dc36e3",
        "command": "echo 0 > /dev/usrled3; echo 0 > /dev/usrled2",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1390,
        "y": 560,
        "wires": [
            [],
            [],
            [
                "cd3920d3e89b9edd"
            ]
        ]
    },
    {
        "id": "68ad270c7e3aa592",
        "type": "inject",
        "z": "93c938d261dc36e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 660,
        "y": 540,
        "wires": [
            [
                "908fa73116dffd7a"
            ]
        ]
    },
    {
        "id": "cd3920d3e89b9edd",
        "type": "debug",
        "z": "93c938d261dc36e3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 540,
        "wires": []
    },
    {
        "id": "95b9733afe4cfa28",
        "type": "debug",
        "z": "93c938d261dc36e3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 660,
        "wires": []
    },
    {
        "id": "b896e77a5281950e",
        "type": "debug",
        "z": "93c938d261dc36e3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 460,
        "wires": []
    },
    {
        "id": "82cc57f035f4b635",
        "type": "inject",
        "z": "93c938d261dc36e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 300,
        "wires": [
            [
                "f0909c5883cf2bb5"
            ]
        ]
    },
    {
        "id": "c8180879340f9797",
        "type": "usb-watch",
        "z": "93c938d261dc36e3",
        "name": "",
        "initialScan": false,
        "x": 260,
        "y": 360,
        "wires": [
            [
                "f0909c5883cf2bb5",
                "6cae6ebd51676aa2",
                "b896e77a5281950e",
                "267bd568987c89b8"
            ],
            [
                "411b82cd9be62670",
                "42e2da368acfdb16"
            ]
        ]
    },
    {
        "id": "267bd568987c89b8",
        "type": "exec",
        "z": "93c938d261dc36e3",
        "command": "echo 1 > /dev/diod3; echo 0 > /dev/diod2",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 500,
        "y": 120,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "42e2da368acfdb16",
        "type": "exec",
        "z": "93c938d261dc36e3",
        "command": "echo 0 > /dev/diod3; echo 0 > /dev/diod2",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 360,
        "y": 660,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "559d7dc0b202b6ec",
        "type": "comment",
        "z": "93c938d261dc36e3",
        "name": "2 es luz verde, 3 es luz roja",
        "info": "",
        "x": 870,
        "y": 160,
        "wires": []
    },
    {
        "id": "a24ecf78cb9c4bcd",
        "type": "exec",
        "z": "93c938d261dc36e3",
        "command": "echo 0 > /dev/diod2",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 950,
        "y": 800,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "6599757e27dee406",
        "type": "exec",
        "z": "93c938d261dc36e3",
        "command": "echo 0 > /dev/diod3",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 950,
        "y": 1040,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "39db48e634e5f68e",
        "type": "exec",
        "z": "93c938d261dc36e3",
        "command": "echo 0 > /dev/diod3; echo 0 > /dev/diod2",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1380,
        "y": 520,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "ca21724456fbfc8b",
        "type": "exec",
        "z": "93c938d261dc36e3",
        "command": "echo 0 > /dev/diod3; echo 1 > /dev/diod2",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1380,
        "y": 720,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "7cb1bfa6ee14cd59",
        "type": "function",
        "z": "93c938d261dc36e3",
        "name": "",
        "func": "if (msg.payload.code == 0){\n    node.status({ fill: \"green\", shape: \"dot\", text: \"usb connected\" });\n    return [null, msg];\n    \n}\nelse{\n    node.status({ fill: \"red\", shape: \"ring\", text: \"usb disconnected\" });\n    return [msg, null];\n}\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 280,
        "wires": [
            [
                "739dd41c60b23bc3"
            ],
            [
                "611c4768cd164731"
            ]
        ]
    },
    {
        "id": "739dd41c60b23bc3",
        "type": "exec",
        "z": "93c938d261dc36e3",
        "command": "/root/axotec_scripts/blink_red_led.sh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1230,
        "y": 240,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "dbaf8b3efeaabf37",
        "type": "change",
        "z": "ac1b7f858f654d07",
        "g": "39ddbe85a72ee0b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "connections.acme_server",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 140,
        "wires": [
            [
                "30361390301119e6",
                "48fe66a37a5d4455"
            ]
        ]
    },
    {
        "id": "969b2948e1ba5ece",
        "type": "switch",
        "z": "ac1b7f858f654d07",
        "g": "39ddbe85a72ee0b3",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 180,
        "wires": [
            [
                "dbaf8b3efeaabf37"
            ],
            [
                "ee185204f3df637f"
            ]
        ]
    },
    {
        "id": "ee185204f3df637f",
        "type": "change",
        "z": "ac1b7f858f654d07",
        "g": "39ddbe85a72ee0b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "connections_acme_server",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 220,
        "wires": [
            [
                "369a679a146cb309",
                "47371280d37afc93"
            ]
        ]
    },
    {
        "id": "30361390301119e6",
        "type": "debug",
        "z": "ac1b7f858f654d07",
        "g": "39ddbe85a72ee0b3",
        "name": "Latencia servidor Acme",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1010,
        "y": 120,
        "wires": []
    },
    {
        "id": "369a679a146cb309",
        "type": "debug",
        "z": "ac1b7f858f654d07",
        "g": "39ddbe85a72ee0b3",
        "name": "Not connected",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 240,
        "wires": []
    },
    {
        "id": "f884311d2c1d9673",
        "type": "change",
        "z": "ac1b7f858f654d07",
        "g": "b7f9bad1da3f666b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "connections.vpn_server",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 400,
        "wires": [
            [
                "594f458e05d10cbd"
            ]
        ]
    },
    {
        "id": "a25ce97d8a1e53e6",
        "type": "switch",
        "z": "ac1b7f858f654d07",
        "g": "b7f9bad1da3f666b",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 440,
        "wires": [
            [
                "f884311d2c1d9673"
            ],
            [
                "b64c3a8d66676f32"
            ]
        ]
    },
    {
        "id": "b64c3a8d66676f32",
        "type": "change",
        "z": "ac1b7f858f654d07",
        "g": "b7f9bad1da3f666b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "connections.vpn_server",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 480,
        "wires": [
            [
                "0108dea861a38364"
            ]
        ]
    },
    {
        "id": "594f458e05d10cbd",
        "type": "debug",
        "z": "ac1b7f858f654d07",
        "g": "b7f9bad1da3f666b",
        "name": "Latencia servidor VPN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 980,
        "y": 400,
        "wires": []
    },
    {
        "id": "0108dea861a38364",
        "type": "debug",
        "z": "ac1b7f858f654d07",
        "g": "b7f9bad1da3f666b",
        "name": "Not connected",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 480,
        "wires": []
    },
    {
        "id": "f6957c60f691242c",
        "type": "change",
        "z": "ac1b7f858f654d07",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "connections",
                "pt": "global",
                "to": "{\"acme_server\":false,\"vpn_server\":false}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "e659df00a59847c2",
        "type": "inject",
        "z": "ac1b7f858f654d07",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 490,
        "y": 40,
        "wires": [
            [
                "f6957c60f691242c"
            ]
        ]
    },
    {
        "id": "227c7884566505e1",
        "type": "comment",
        "z": "ac1b7f858f654d07",
        "g": "b7f9bad1da3f666b",
        "name": "falta corregir la IP maestra del VPN",
        "info": "",
        "x": 220,
        "y": 500,
        "wires": []
    },
    {
        "id": "48fe66a37a5d4455",
        "type": "change",
        "z": "ac1b7f858f654d07",
        "g": "39ddbe85a72ee0b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.ping_acme",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "47371280d37afc93",
        "type": "change",
        "z": "ac1b7f858f654d07",
        "g": "39ddbe85a72ee0b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.ping_acme",
                "pt": "global",
                "to": "not connected",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "c9cde978afbb363d",
        "type": "inject",
        "z": "ac1b7f858f654d07",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 620,
        "wires": [
            [
                "881fd3c483db04a9",
                "5611ce40d44b863a",
                "cc44bd7818012c3e",
                "859dde0a440deb3d",
                "da42eb0b5eb1cf98",
                "bf0eb595da64b68b",
                "daca6e4fef23766a"
            ]
        ]
    },
    {
        "id": "881fd3c483db04a9",
        "type": "exec",
        "z": "ac1b7f858f654d07",
        "command": "echo -n $(hostname -I | awk '{print $1}')",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 450,
        "y": 620,
        "wires": [
            [
                "80755401e99146fb"
            ],
            [],
            []
        ]
    },
    {
        "id": "80755401e99146fb",
        "type": "change",
        "z": "ac1b7f858f654d07",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.eth_ip",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "5611ce40d44b863a",
        "type": "exec",
        "z": "ac1b7f858f654d07",
        "command": "echo -n $(df -h --total | grep /dev/root | awk '{print$2}')",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 480,
        "y": 720,
        "wires": [
            [
                "8931face9461a432"
            ],
            [],
            []
        ]
    },
    {
        "id": "cc44bd7818012c3e",
        "type": "exec",
        "z": "ac1b7f858f654d07",
        "command": "echo -n $(df -h --total | grep /dev/root | awk '{print$3}')",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 480,
        "y": 780,
        "wires": [
            [
                "6e6ed535dc218ae7"
            ],
            [],
            []
        ]
    },
    {
        "id": "859dde0a440deb3d",
        "type": "exec",
        "z": "ac1b7f858f654d07",
        "command": "echo -n $(df -h --total | grep /dev/root | awk '{print$4}')",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 480,
        "y": 840,
        "wires": [
            [
                "9c3013b28a9565d1"
            ],
            [],
            []
        ]
    },
    {
        "id": "8931face9461a432",
        "type": "change",
        "z": "ac1b7f858f654d07",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.total_space",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "6e6ed535dc218ae7",
        "type": "change",
        "z": "ac1b7f858f654d07",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.used_space",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "9c3013b28a9565d1",
        "type": "change",
        "z": "ac1b7f858f654d07",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.free_space",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "da42eb0b5eb1cf98",
        "type": "exec",
        "z": "ac1b7f858f654d07",
        "command": "echo -n $(df -h --total | grep /dev/root | awk '{print$5}')",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 480,
        "y": 900,
        "wires": [
            [
                "078126b863f90a30"
            ],
            [],
            []
        ]
    },
    {
        "id": "078126b863f90a30",
        "type": "change",
        "z": "ac1b7f858f654d07",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.used_space_percent",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "bf0eb595da64b68b",
        "type": "exec",
        "z": "ac1b7f858f654d07",
        "command": "echo -n $(free | grep Mem: | awk '{print$3/$2*100}')",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 470,
        "y": 1020,
        "wires": [
            [
                "f42d877d0d4b7a77"
            ],
            [],
            []
        ]
    },
    {
        "id": "f42d877d0d4b7a77",
        "type": "change",
        "z": "ac1b7f858f654d07",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.memory_usage_percent",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "daca6e4fef23766a",
        "type": "exec",
        "z": "ac1b7f858f654d07",
        "command": "echo -n $(vcgencmd measure_temp)",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 430,
        "y": 1100,
        "wires": [
            [
                "a62d96489e8eb651"
            ],
            [],
            []
        ]
    },
    {
        "id": "6e5bce5ba042c84c",
        "type": "change",
        "z": "ac1b7f858f654d07",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.temperature",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "a62d96489e8eb651",
        "type": "change",
        "z": "ac1b7f858f654d07",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$substring(payload,5,4)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 1100,
        "wires": [
            [
                "6e5bce5ba042c84c"
            ]
        ]
    },
    {
        "id": "93581f2a0b502758",
        "type": "exec",
        "z": "ac1b7f858f654d07",
        "d": true,
        "command": "speedtest-cli --simple --secure",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 410,
        "y": 1200,
        "wires": [
            [
                "f1de9b1aed5f2e0e"
            ],
            [],
            []
        ]
    },
    {
        "id": "f1de9b1aed5f2e0e",
        "type": "split",
        "z": "ac1b7f858f654d07",
        "d": true,
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": true,
        "addname": "",
        "x": 690,
        "y": 1200,
        "wires": [
            [
                "6c7fb87e581a434e",
                "0581f6cf6f24eaef"
            ]
        ]
    },
    {
        "id": "6c7fb87e581a434e",
        "type": "debug",
        "z": "ac1b7f858f654d07",
        "d": true,
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 1280,
        "wires": []
    },
    {
        "id": "0581f6cf6f24eaef",
        "type": "switch",
        "z": "ac1b7f858f654d07",
        "d": true,
        "name": "",
        "property": "parts.index",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 890,
        "y": 1200,
        "wires": [
            [
                "8f37898dbbb551a5"
            ],
            [
                "0465430fc5acd53e"
            ],
            [
                "a63b7998cf19828d"
            ]
        ]
    },
    {
        "id": "8f37898dbbb551a5",
        "type": "change",
        "z": "ac1b7f858f654d07",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.ping_internet",
                "pt": "global",
                "to": "$substring(payload, 6, 9)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "0465430fc5acd53e",
        "type": "change",
        "z": "ac1b7f858f654d07",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.download",
                "pt": "global",
                "to": "$substring(payload, 10, 12)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "a63b7998cf19828d",
        "type": "change",
        "z": "ac1b7f858f654d07",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.upload",
                "pt": "global",
                "to": "$substring(payload, 10, 12)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "b894d27ce548b6b6",
        "type": "inject",
        "z": "ac1b7f858f654d07",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1200,
        "wires": [
            [
                "93581f2a0b502758"
            ]
        ]
    },
    {
        "id": "a866e060f2779308",
        "type": "comment",
        "z": "ac1b7f858f654d07",
        "d": true,
        "name": "Not recommended, affects server connection",
        "info": "",
        "x": 430,
        "y": 1260,
        "wires": []
    },
    {
        "id": "36974351050e81e2",
        "type": "ping",
        "z": "ac1b7f858f654d07",
        "g": "39ddbe85a72ee0b3",
        "protocol": "Automatic",
        "mode": "timed",
        "name": "",
        "host": "161.132.39.167",
        "timer": "5",
        "inputs": 0,
        "x": 180,
        "y": 180,
        "wires": [
            [
                "969b2948e1ba5ece"
            ]
        ]
    },
    {
        "id": "24694e9174f9ea7c",
        "type": "ping",
        "z": "ac1b7f858f654d07",
        "g": "b7f9bad1da3f666b",
        "protocol": "Automatic",
        "mode": "timed",
        "name": "",
        "host": "192.168.192.79",
        "timer": "5",
        "inputs": 0,
        "x": 160,
        "y": 440,
        "wires": [
            [
                "a25ce97d8a1e53e6"
            ]
        ]
    }
]