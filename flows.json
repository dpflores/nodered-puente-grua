[
    {
        "id": "7e745af8071944c2",
        "type": "tab",
        "label": "INIT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "42897ad46e77c19c",
        "type": "tab",
        "label": "GET DATA",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "88710bd4abef8c71",
        "type": "tab",
        "label": "SEND DATA",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6d22ca827c229e56",
        "type": "tab",
        "label": "ESTATUS DEL SISTEMA",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a0ba15e2dac68838",
        "type": "tab",
        "label": "CHARTS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c5f49755157c982b",
        "type": "tab",
        "label": "DASHBOARD TEST",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "b85ff4939ed7cb27",
        "type": "tab",
        "label": "LOCALIZACIÓN",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0e59410b16d8c0d1",
        "type": "tab",
        "label": "CONNECTIVITY & MONITORING",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f24bebacdb4e3198",
        "type": "tab",
        "label": "CAN",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2727bbfc69998559",
        "type": "group",
        "z": "88710bd4abef8c71",
        "name": "Envio por MQTT",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "75d0e21904048102",
            "c1bfd5fb4f55b186",
            "3138bb908f5403e1",
            "986e2ce130163afa",
            "3bbf9add2595b8c2",
            "0dcf8d887164a097",
            "d3f06d9a9148f7e1",
            "743fde7e9495f3d0",
            "4b19baef0f447a64",
            "5fb10eab77c3f44d"
        ],
        "x": 94,
        "y": 119,
        "w": 632,
        "h": 262
    },
    {
        "id": "479cbfad929b1fbd",
        "type": "group",
        "z": "88710bd4abef8c71",
        "name": "Guardado de data local",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6d7dec1876c4bc85",
            "8c751bc10df5f8f7",
            "460f4a1dcaf40223",
            "48f8cc92e57ed319",
            "51b6c61463ebafc2",
            "446906bddfa7b4e6",
            "b8724e1c5f6a5125"
        ],
        "x": 94,
        "y": 959,
        "w": 752,
        "h": 162
    },
    {
        "id": "f4c83cc67ff202ee",
        "type": "group",
        "z": "88710bd4abef8c71",
        "name": "Guardado de data offline",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "73a6078750626023",
            "de52622b974c5bfa",
            "460b0916befeb07e",
            "e78863c3fb4e5adf",
            "6084bdcba3b009a2",
            "54e69caaf5320a4b",
            "2888a2a0990dbb41"
        ],
        "x": 84,
        "y": 419,
        "w": 742,
        "h": 182
    },
    {
        "id": "b26b9d2ecbf63aad",
        "type": "group",
        "z": "88710bd4abef8c71",
        "name": "Recuperar y enviar la data adquirida offline",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d63a08bda03af72f",
            "46d605c846712a1c",
            "d4a00120a198db5e",
            "cd3ce5cab6973143",
            "1c72cb073822d0b0",
            "fb70af46f0e9aa4e",
            "e9517722bd43523d",
            "382ac5e59a40141b",
            "1f2b695a272278f6",
            "228528026fe67b75",
            "9f7023c73f0fde4e"
        ],
        "x": 84,
        "y": 639,
        "w": 1142,
        "h": 262
    },
    {
        "id": "391293c6a3ed1d34",
        "type": "group",
        "z": "0e59410b16d8c0d1",
        "name": "Check server connection",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "01351c47f8e420f9",
            "735eada7813d22ff",
            "04679722cfe5f990",
            "a3b5af3b8f4aba3a",
            "11ceb1f8c548271a",
            "5f855c63def49250",
            "4a8ac69b345e633c",
            "f82eba84d7d53d1b"
        ],
        "x": 74,
        "y": 79
    },
    {
        "id": "5179124c0369cae1",
        "type": "group",
        "z": "0e59410b16d8c0d1",
        "name": "Check server connection",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c6fe45afc9c6eb9f",
            "f7194e3b080e9e13",
            "ad64acdcb68dea2e",
            "47c71030ed8e575c",
            "6f161a26d6ca704c",
            "efe82c8833f5e7fb",
            "01c93927a286229b"
        ],
        "x": 54,
        "y": 359
    },
    {
        "id": "8955c8ae76354b57",
        "type": "group",
        "z": "88710bd4abef8c71",
        "name": "Guardar data local a CSV more efficient",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "57b56322f94a74bf",
            "1af3afe0fa6688b1",
            "51b3fce38ca447b0",
            "e25ee4e7018d50ed",
            "105d7ab84942abee",
            "e23a5df488c150aa",
            "7eb2c3fb5a6040dc",
            "3ec116b8fc0e18ad",
            "082f3683ac0737aa",
            "7d3b648c195e8f27",
            "82661fba196597fd",
            "ac8f8323ad79bd1a"
        ],
        "x": 54,
        "y": 2199,
        "w": 1612,
        "h": 342
    },
    {
        "id": "7153f3847aa5ae85",
        "type": "group",
        "z": "88710bd4abef8c71",
        "name": "Seleccionar y eliminar data de la última semana ",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "8c8c1020199f8440",
            "d514f0ed0feb3b21",
            "bb64c73b5730077f",
            "632b34e20696d0d2",
            "ad8e2e488742925a",
            "85979d24b475399a",
            "cad56383cce99bee",
            "85b01667d974833f",
            "5286db960201857c",
            "2e96ea8f95a775dc",
            "0a50d78bc47d51d1",
            "13c1e20a99e19ff8",
            "72d009ee46d29f35"
        ],
        "x": 54,
        "y": 1199,
        "w": 1712,
        "h": 202
    },
    {
        "id": "b1c4dfd104899031",
        "type": "group",
        "z": "88710bd4abef8c71",
        "name": "Eliminar data local anterior a 1 año",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "fb33253a24d20d27",
            "382d7ce92ee926fa",
            "e43c2eb643c8d766",
            "ab736b6e4164dd14",
            "eff70b300ce9ea9d"
        ],
        "x": 54,
        "y": 1939,
        "w": 792,
        "h": 202
    },
    {
        "id": "c3a2d4404f836df1",
        "type": "group",
        "z": "88710bd4abef8c71",
        "name": "Eliminar la data mas antigua a 2 meses",
        "style": {
            "stroke": "#a4a4a4",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "66145dd7203ccb1c",
            "1c8329253901b3aa",
            "a953dc10598a3993",
            "87dc6ceca1168969"
        ],
        "x": 54,
        "y": 1739,
        "w": 932,
        "h": 142
    },
    {
        "id": "8c40c5fa882ced72",
        "type": "group",
        "z": "88710bd4abef8c71",
        "name": "DELETE ALL DATA MANUALLY (CAREFULL)",
        "style": {
            "label": true
        },
        "nodes": [
            "bb04e059f87af065",
            "346fa05f50dcde33",
            "73d657039bb34872"
        ],
        "x": 54,
        "y": 2659,
        "w": 572,
        "h": 82
    },
    {
        "id": "1e4ff3cc7b7175fc",
        "type": "group",
        "z": "88710bd4abef8c71",
        "name": "Guardar a CSV desde el dashboard",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "2e31b11df2e99de3",
            "d315c890f9188f8d",
            "18b6978abfa7e214",
            "2ef1abd9b96f89c2",
            "61a05725c5779d7c"
        ],
        "x": 54,
        "y": 1479,
        "w": 972,
        "h": 82
    },
    {
        "id": "83389f3909d131cd",
        "type": "group",
        "z": "6d22ca827c229e56",
        "name": "Horómetro",
        "style": {
            "label": true
        },
        "nodes": [
            "42d066bb94eb5113",
            "92538704e950278f",
            "696148b2bfc859f1",
            "ed69b8913409b966",
            "7f794c124c579224",
            "08a2e2a4e70f0a11",
            "feaa75bda85f3d83",
            "7dbc15a857c383f4",
            "0fa328a272257c4a"
        ],
        "x": 114,
        "y": 579,
        "w": 1012,
        "h": 262
    },
    {
        "id": "b5820d425c18f740",
        "type": "group",
        "z": "6d22ca827c229e56",
        "name": "Recuperar data local",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b7486239c2e4036c",
            "4e252340494aaea7",
            "75a24660cd48b3d7",
            "2421ee53ca27c9fb",
            "13db80d191c063cf",
            "820f048881e1c00d",
            "c62877a708910f8a"
        ],
        "x": 14,
        "y": 379,
        "w": 1252,
        "h": 142
    },
    {
        "id": "862801e1cc0ee16c",
        "type": "group",
        "z": "6d22ca827c229e56",
        "name": "Horómetro",
        "style": {
            "label": true
        },
        "nodes": [
            "c0eb85ca3e5e290d",
            "aec79d55b9d5237a",
            "03c77f85084aa581",
            "be79467af0c160c0",
            "89a77a163d6b42d4",
            "05398629dfdcfe52"
        ],
        "x": 294,
        "y": 1499,
        "w": 972,
        "h": 242
    },
    {
        "id": "7dda2138188e3286",
        "type": "group",
        "z": "6d22ca827c229e56",
        "name": "Hourmeter",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f4ca9963f5d29594",
            "3a06903a25bdbc48",
            "6de41ea3c4b45d4f",
            "157d0b0f8051b22e",
            "12865a7fd31659d0",
            "7dcd4895787566ef"
        ],
        "x": 74,
        "y": 1299,
        "w": 1152,
        "h": 142
    },
    {
        "id": "8d53d2f17df7fbc4",
        "type": "mqtt-broker",
        "name": "ACME_broker",
        "broker": "161.132.39.167",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "45598baf2af77f76",
        "type": "MySQLdatabase",
        "name": "",
        "host": "localhost",
        "port": "3306",
        "db": "acme_db",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "eadfda525a15b034",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB1",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "fe44fd7d63e74a2d",
        "type": "canconfig",
        "channel": "can1",
        "bitrate": "125000"
    },
    {
        "id": "d9499f45a78ec16d",
        "type": "canconfig",
        "channel": "can0",
        "bitrate": "125000"
    },
    {
        "id": "d7031f3f43f31a77",
        "type": "socketcan-config",
        "interface": "can1"
    },
    {
        "id": "9d8fe396d6dcfcdd",
        "type": "socketcan-config",
        "interface": "can0"
    },
    {
        "id": "af698781cfdced6a",
        "type": "ui_tab",
        "name": "Pruebas",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a5db0d647510a054",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "70ee9b44755ba42e",
        "type": "ui_group",
        "name": "Encoders",
        "tab": "af698781cfdced6a",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "edfb2eacc3a17b91",
        "type": "ui_group",
        "name": "Celdas de carga",
        "tab": "af698781cfdced6a",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a165adb324b7645c",
        "type": "ui_group",
        "name": "Reset - CUIDADO",
        "tab": "af698781cfdced6a",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7e73167df8a5611c",
        "type": "inject",
        "z": "7e745af8071944c2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "ddbb5677344f19e5"
            ]
        ]
    },
    {
        "id": "ddbb5677344f19e5",
        "type": "change",
        "z": "7e745af8071944c2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data",
                "pt": "global",
                "to": "{\"gateway_key\":\"AXOKPG\",\"timestamp\":0,\"data\":{\"gateway_info\":{\"eth_ip\":\"-\",\"vpn_ip\":\"-\",\"ping_acme\":\"-\",\"total_space\":\"-\",\"free_space\":\"-\",\"temperature\":0,\"vbat\":0,\"num_gps_sat\":0},\"gps\":{\"pos_valid\":0,\"latitude\":0,\"longitude\":0,\"altitude\":0,\"haccuracy\":0,\"speed\":0,\"course\":0}}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "2eb28a4d1524ee51",
        "type": "inject",
        "z": "42897ad46e77c19c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "1413e12e5d9080b4",
                "0e56da427826ac01",
                "53b8d96c72cd1df7",
                "e707f89f375f0cb9",
                "a70b679d8c449d78",
                "a27a3351d6d908b3"
            ]
        ]
    },
    {
        "id": "6e0649b87bd9c7fc",
        "type": "change",
        "z": "42897ad46e77c19c",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.rm9000.x_axis",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "0f83dec6719ccaf9",
        "type": "change",
        "z": "42897ad46e77c19c",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.rm9000.y_axis",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "1ce259bba990de95",
        "type": "change",
        "z": "42897ad46e77c19c",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.rm9000.z1_axis",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "d16f5d311146fef2",
        "type": "change",
        "z": "42897ad46e77c19c",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.rm9000.z2_axis",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "f1d232d607420e82",
        "type": "change",
        "z": "42897ad46e77c19c",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.carga_grua.carga1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "9edf6e794b70ac28",
        "type": "change",
        "z": "42897ad46e77c19c",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.carga_grua.carga2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "1413e12e5d9080b4",
        "type": "random",
        "z": "42897ad46e77c19c",
        "d": true,
        "name": "",
        "low": "0",
        "high": "80",
        "inte": "true",
        "property": "payload",
        "x": 280,
        "y": 120,
        "wires": [
            [
                "6e0649b87bd9c7fc"
            ]
        ]
    },
    {
        "id": "0e56da427826ac01",
        "type": "random",
        "z": "42897ad46e77c19c",
        "d": true,
        "name": "",
        "low": "0",
        "high": "40",
        "inte": "true",
        "property": "payload",
        "x": 300,
        "y": 220,
        "wires": [
            [
                "0f83dec6719ccaf9"
            ]
        ]
    },
    {
        "id": "53b8d96c72cd1df7",
        "type": "random",
        "z": "42897ad46e77c19c",
        "d": true,
        "name": "",
        "low": 1,
        "high": 10,
        "inte": "true",
        "property": "payload",
        "x": 300,
        "y": 280,
        "wires": [
            [
                "1ce259bba990de95"
            ]
        ]
    },
    {
        "id": "e707f89f375f0cb9",
        "type": "random",
        "z": "42897ad46e77c19c",
        "d": true,
        "name": "",
        "low": 1,
        "high": 10,
        "inte": "true",
        "property": "payload",
        "x": 300,
        "y": 340,
        "wires": [
            [
                "d16f5d311146fef2"
            ]
        ]
    },
    {
        "id": "a27a3351d6d908b3",
        "type": "random",
        "z": "42897ad46e77c19c",
        "d": true,
        "name": "",
        "low": "90",
        "high": "120",
        "inte": "true",
        "property": "payload",
        "x": 300,
        "y": 400,
        "wires": [
            [
                "f1d232d607420e82"
            ]
        ]
    },
    {
        "id": "a70b679d8c449d78",
        "type": "random",
        "z": "42897ad46e77c19c",
        "d": true,
        "name": "",
        "low": "100",
        "high": "140",
        "inte": "true",
        "property": "payload",
        "x": 300,
        "y": 460,
        "wires": [
            [
                "9edf6e794b70ac28"
            ]
        ]
    },
    {
        "id": "c7ba6ff60d108b55",
        "type": "change",
        "z": "42897ad46e77c19c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.sensor_estado.state",
                "pt": "global",
                "to": "positivo",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "78436e1b42d4fbd3",
        "type": "random",
        "z": "42897ad46e77c19c",
        "name": "",
        "low": 1,
        "high": "3",
        "inte": "true",
        "property": "payload",
        "x": 440,
        "y": 560,
        "wires": [
            [
                "eca5bce551c253cc"
            ]
        ]
    },
    {
        "id": "eca5bce551c253cc",
        "type": "switch",
        "z": "42897ad46e77c19c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 610,
        "y": 560,
        "wires": [
            [
                "c7ba6ff60d108b55"
            ],
            [
                "ae69180bc9594d5f"
            ],
            [
                "5a92582c4be359d9"
            ]
        ]
    },
    {
        "id": "1f6e9ebc26cfb634",
        "type": "change",
        "z": "42897ad46e77c19c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.sensor_estado.state",
                "pt": "global",
                "to": "init",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "ae69180bc9594d5f",
        "type": "change",
        "z": "42897ad46e77c19c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.sensor_estado.state",
                "pt": "global",
                "to": "negativo",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "5a92582c4be359d9",
        "type": "debug",
        "z": "42897ad46e77c19c",
        "name": "debug 160",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 700,
        "wires": []
    },
    {
        "id": "389ef11d25e124b9",
        "type": "inject",
        "z": "42897ad46e77c19c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 560,
        "wires": [
            [
                "78436e1b42d4fbd3"
            ]
        ]
    },
    {
        "id": "46d605c846712a1c",
        "type": "function",
        "z": "88710bd4abef8c71",
        "g": "b26b9d2ecbf63aad",
        "name": "obtener primer dato",
        "func": "msg.topic = \"SELECT data FROM offline_data LIMIT 1;\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 740,
        "wires": [
            [
                "d63a08bda03af72f"
            ]
        ]
    },
    {
        "id": "d4a00120a198db5e",
        "type": "debug",
        "z": "88710bd4abef8c71",
        "g": "b26b9d2ecbf63aad",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 800,
        "wires": []
    },
    {
        "id": "6d7dec1876c4bc85",
        "type": "function",
        "z": "88710bd4abef8c71",
        "g": "479cbfad929b1fbd",
        "name": "function 103",
        "func": "\nmsg.topic = \"INSERT INTO `local_data` (`data`) VALUES ('\"+ msg.payload + \"');\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1080,
        "wires": [
            [
                "8c751bc10df5f8f7",
                "48f8cc92e57ed319"
            ]
        ]
    },
    {
        "id": "48f8cc92e57ed319",
        "type": "debug",
        "z": "88710bd4abef8c71",
        "g": "479cbfad929b1fbd",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 1040,
        "wires": []
    },
    {
        "id": "460f4a1dcaf40223",
        "type": "json",
        "z": "88710bd4abef8c71",
        "g": "479cbfad929b1fbd",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 1080,
        "wires": [
            [
                "6d7dec1876c4bc85"
            ]
        ]
    },
    {
        "id": "73a6078750626023",
        "type": "function",
        "z": "88710bd4abef8c71",
        "g": "f4c83cc67ff202ee",
        "name": "function 103",
        "func": "\nmsg.topic = \"INSERT INTO `offline_data` (`data`) VALUES ('\"+ msg.payload + \"');\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 500,
        "wires": [
            [
                "de52622b974c5bfa",
                "e78863c3fb4e5adf"
            ]
        ]
    },
    {
        "id": "460b0916befeb07e",
        "type": "json",
        "z": "88710bd4abef8c71",
        "g": "f4c83cc67ff202ee",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 500,
        "wires": [
            [
                "73a6078750626023"
            ]
        ]
    },
    {
        "id": "e78863c3fb4e5adf",
        "type": "debug",
        "z": "88710bd4abef8c71",
        "g": "f4c83cc67ff202ee",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 460,
        "wires": []
    },
    {
        "id": "cd3ce5cab6973143",
        "type": "function",
        "z": "88710bd4abef8c71",
        "g": "b26b9d2ecbf63aad",
        "name": "Procesar para mqtt",
        "func": "var array_in = msg.payload;\nvar data_out = [];\n\n\n\nif (msg.payload[0] == undefined){\n    node.status({ fill: \"green\", shape: \"ring\", text: \"empty data\" });\n    return null;    \n}\n\nelse {\n    data_out = JSON.parse(msg.payload[0].data);\n    \n    node.status({ fill: \"green\", shape: \"dot\", text: \"sending offline\" });\n\n    msg.payload = data_out;\n\n    return msg;\n\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 740,
        "wires": [
            [
                "fb70af46f0e9aa4e",
                "e9517722bd43523d",
                "d4a00120a198db5e",
                "382ac5e59a40141b"
            ]
        ]
    },
    {
        "id": "1c72cb073822d0b0",
        "type": "debug",
        "z": "88710bd4abef8c71",
        "g": "b26b9d2ecbf63aad",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 680,
        "wires": []
    },
    {
        "id": "fb70af46f0e9aa4e",
        "type": "mqtt out",
        "z": "88710bd4abef8c71",
        "g": "b26b9d2ecbf63aad",
        "name": "",
        "topic": "data/offline/puente_grua",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8d53d2f17df7fbc4",
        "x": 1090,
        "y": 740,
        "wires": []
    },
    {
        "id": "e9517722bd43523d",
        "type": "debug",
        "z": "88710bd4abef8c71",
        "g": "b26b9d2ecbf63aad",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.timestamp",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 680,
        "wires": []
    },
    {
        "id": "382ac5e59a40141b",
        "type": "function",
        "z": "88710bd4abef8c71",
        "g": "b26b9d2ecbf63aad",
        "name": "Eliminar primer dato",
        "func": "\n// elimina el primer dato\nmsg.topic = \"DELETE FROM offline_data LIMIT 1;\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 860,
        "wires": [
            [
                "1f2b695a272278f6"
            ]
        ]
    },
    {
        "id": "51b6c61463ebafc2",
        "type": "link in",
        "z": "88710bd4abef8c71",
        "g": "479cbfad929b1fbd",
        "name": "",
        "links": [
            "6a0d6344d5559850",
            "743fde7e9495f3d0"
        ],
        "x": 135,
        "y": 1080,
        "wires": [
            [
                "446906bddfa7b4e6",
                "b8724e1c5f6a5125"
            ]
        ]
    },
    {
        "id": "6084bdcba3b009a2",
        "type": "link in",
        "z": "88710bd4abef8c71",
        "g": "f4c83cc67ff202ee",
        "name": "",
        "links": [
            "6a0d6344d5559850",
            "743fde7e9495f3d0"
        ],
        "x": 125,
        "y": 500,
        "wires": [
            [
                "54e69caaf5320a4b"
            ]
        ]
    },
    {
        "id": "54e69caaf5320a4b",
        "type": "function",
        "z": "88710bd4abef8c71",
        "g": "f4c83cc67ff202ee",
        "name": "",
        "func": "var connections = global.get('connections');\n\nvar msg2 = {}\n\nmsg.payload = msg.payload;\nif (connections.acme_server == false){\n    // Not connected\n    node.status({ fill: \"green\", shape: \"ring\", text: \"disconnected - saving\" });\n    return [msg, null];\n}\nelse{\n    // Connected\n    node.status({ fill: \"green\", shape: \"dot\", text: \"connected - no save\" });\n\n    return [null, msg];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 500,
        "wires": [
            [
                "460b0916befeb07e"
            ],
            [
                "2888a2a0990dbb41"
            ]
        ]
    },
    {
        "id": "2888a2a0990dbb41",
        "type": "link out",
        "z": "88710bd4abef8c71",
        "g": "f4c83cc67ff202ee",
        "name": "connected",
        "mode": "link",
        "links": [
            "228528026fe67b75"
        ],
        "x": 355,
        "y": 560,
        "wires": []
    },
    {
        "id": "228528026fe67b75",
        "type": "link in",
        "z": "88710bd4abef8c71",
        "g": "b26b9d2ecbf63aad",
        "name": "",
        "links": [
            "2888a2a0990dbb41"
        ],
        "x": 125,
        "y": 740,
        "wires": [
            [
                "46d605c846712a1c"
            ]
        ]
    },
    {
        "id": "9f7023c73f0fde4e",
        "type": "debug",
        "z": "88710bd4abef8c71",
        "g": "b26b9d2ecbf63aad",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1110,
        "y": 860,
        "wires": []
    },
    {
        "id": "57b56322f94a74bf",
        "type": "function",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "8955c8ae76354b57",
        "name": "",
        "func": "\nmsg.topic = \"SELECT data FROM local_data LIMIT 10\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 2260,
        "wires": [
            [
                "1af3afe0fa6688b1"
            ]
        ]
    },
    {
        "id": "51b3fce38ca447b0",
        "type": "debug",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "8955c8ae76354b57",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 2320,
        "wires": []
    },
    {
        "id": "e25ee4e7018d50ed",
        "type": "function",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "8955c8ae76354b57",
        "name": "Procesar array para csv",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\n// All data\nfor (var i = 0; i < array_in.length; i++) {\n    array_out[i] = JSON.parse(msg.payload[i].data);\n\n    // Converting simple timestamp to human readable\n    // time\n    array_out[i].timestamp = unixTimestampToHumanReadable(array_out[i].timestamp);\n}\n\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n\n\n\n// Function for timestamp to readable time\nfunction unixTimestampToHumanReadable(unixTimestamp) {\n    const date = new Date(unixTimestamp);\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    const seconds = date.getSeconds().toString().padStart(2, '0');\n\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2240,
        "wires": [
            [
                "51b3fce38ca447b0",
                "3ec116b8fc0e18ad"
            ]
        ]
    },
    {
        "id": "105d7ab84942abee",
        "type": "debug",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "8955c8ae76354b57",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 2320,
        "wires": []
    },
    {
        "id": "e23a5df488c150aa",
        "type": "debug",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "8955c8ae76354b57",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 2400,
        "wires": []
    },
    {
        "id": "7eb2c3fb5a6040dc",
        "type": "file",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "8955c8ae76354b57",
        "name": "",
        "filename": "/root/ITEMAQ/ANGULAMIENTO/data_angulamiento.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1350,
        "y": 2240,
        "wires": [
            [
                "ac8f8323ad79bd1a"
            ]
        ]
    },
    {
        "id": "3ec116b8fc0e18ad",
        "type": "function",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "8955c8ae76354b57",
        "name": "csv",
        "func": "function arrayToCSV(data) {\n    // Verificar si el array de datos está vacío\n    if (data.length === 0) {\n        return '';\n    }\n\n    // Obtener las claves del primer objeto JSON para los encabezados de columna\n    const keys = Object.keys(data[0]);\n\n    // Construir los encabezados de columna\n    const headerRow = keys.join(',');\n\n    // Construir filas del CSV\n    const csvRows = [];\n    csvRows.push(headerRow);\n\n    for (const obj of data) {\n        const values = keys.map(key => obj[key]);\n        const csvRow = values.join(',');\n        csvRows.push(csvRow);\n    }\n\n    // Unir todas las filas con saltos de línea\n    return csvRows.join('\\n');\n}\n// Convertir el array de objetos JSON a una cadena CSV\nconst csvString = arrayToCSV(msg.payload);\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 2240,
        "wires": [
            [
                "082f3683ac0737aa",
                "7eb2c3fb5a6040dc"
            ]
        ]
    },
    {
        "id": "082f3683ac0737aa",
        "type": "debug",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "8955c8ae76354b57",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 2500,
        "wires": []
    },
    {
        "id": "7d3b648c195e8f27",
        "type": "inject",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "8955c8ae76354b57",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 2320,
        "wires": [
            [
                "57b56322f94a74bf"
            ]
        ]
    },
    {
        "id": "82661fba196597fd",
        "type": "link in",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "8955c8ae76354b57",
        "name": "",
        "links": [
            "e6a36b868d315054"
        ],
        "x": 205,
        "y": 2260,
        "wires": [
            [
                "57b56322f94a74bf"
            ]
        ]
    },
    {
        "id": "ac8f8323ad79bd1a",
        "type": "link out",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "8955c8ae76354b57",
        "name": "",
        "mode": "link",
        "links": [
            "accf02cffc6c548b"
        ],
        "x": 1625,
        "y": 2240,
        "wires": []
    },
    {
        "id": "75d0e21904048102",
        "type": "inject",
        "z": "88710bd4abef8c71",
        "g": "2727bbfc69998559",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 220,
        "wires": [
            [
                "3138bb908f5403e1"
            ]
        ]
    },
    {
        "id": "c1bfd5fb4f55b186",
        "type": "mqtt out",
        "z": "88710bd4abef8c71",
        "g": "2727bbfc69998559",
        "name": "",
        "topic": "data_live",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8d53d2f17df7fbc4",
        "x": 620,
        "y": 220,
        "wires": []
    },
    {
        "id": "3138bb908f5403e1",
        "type": "function",
        "z": "88710bd4abef8c71",
        "g": "2727bbfc69998559",
        "name": "function 103",
        "func": "var data_json = global.get('gateway_data');\ndata_json.timestamp = msg.payload;\nmsg.payload = data_json;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 220,
        "wires": [
            [
                "986e2ce130163afa"
            ]
        ]
    },
    {
        "id": "986e2ce130163afa",
        "type": "debug",
        "z": "88710bd4abef8c71",
        "g": "2727bbfc69998559",
        "name": "debug 119",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 610,
        "y": 160,
        "wires": []
    },
    {
        "id": "3bbf9add2595b8c2",
        "type": "mqtt out",
        "z": "88710bd4abef8c71",
        "g": "2727bbfc69998559",
        "name": "",
        "topic": "data/online/save",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8d53d2f17df7fbc4",
        "x": 620,
        "y": 280,
        "wires": []
    },
    {
        "id": "0dcf8d887164a097",
        "type": "function",
        "z": "88710bd4abef8c71",
        "g": "2727bbfc69998559",
        "name": "function 103",
        "func": "var data_json = global.get('gateway_data');\ndata_json.timestamp = msg.payload;\nmsg.payload = data_json;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 280,
        "wires": [
            [
                "3bbf9add2595b8c2"
            ]
        ]
    },
    {
        "id": "d3f06d9a9148f7e1",
        "type": "inject",
        "z": "88710bd4abef8c71",
        "g": "2727bbfc69998559",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 280,
        "wires": [
            [
                "0dcf8d887164a097"
            ]
        ]
    },
    {
        "id": "743fde7e9495f3d0",
        "type": "link out",
        "z": "88710bd4abef8c71",
        "g": "2727bbfc69998559",
        "name": "data_stream",
        "mode": "link",
        "links": [
            "51b6c61463ebafc2",
            "6084bdcba3b009a2"
        ],
        "x": 555,
        "y": 340,
        "wires": []
    },
    {
        "id": "4b19baef0f447a64",
        "type": "inject",
        "z": "88710bd4abef8c71",
        "g": "2727bbfc69998559",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 340,
        "wires": [
            [
                "5fb10eab77c3f44d"
            ]
        ]
    },
    {
        "id": "5fb10eab77c3f44d",
        "type": "function",
        "z": "88710bd4abef8c71",
        "g": "2727bbfc69998559",
        "name": "function 103",
        "func": "var data_json = global.get('gateway_data');\ndata_json.timestamp = msg.payload;\nmsg.payload = data_json;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 340,
        "wires": [
            [
                "743fde7e9495f3d0"
            ]
        ]
    },
    {
        "id": "d63a08bda03af72f",
        "type": "mysql",
        "z": "88710bd4abef8c71",
        "g": "b26b9d2ecbf63aad",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 480,
        "y": 740,
        "wires": [
            [
                "cd3ce5cab6973143",
                "1c72cb073822d0b0"
            ]
        ]
    },
    {
        "id": "8c751bc10df5f8f7",
        "type": "mysql",
        "z": "88710bd4abef8c71",
        "g": "479cbfad929b1fbd",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 740,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "de52622b974c5bfa",
        "type": "mysql",
        "z": "88710bd4abef8c71",
        "g": "f4c83cc67ff202ee",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 720,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "1f2b695a272278f6",
        "type": "mysql",
        "z": "88710bd4abef8c71",
        "g": "b26b9d2ecbf63aad",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 920,
        "y": 860,
        "wires": [
            [
                "9f7023c73f0fde4e"
            ]
        ]
    },
    {
        "id": "1af3afe0fa6688b1",
        "type": "mysql",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "8955c8ae76354b57",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 520,
        "y": 2260,
        "wires": [
            [
                "e25ee4e7018d50ed",
                "105d7ab84942abee"
            ]
        ]
    },
    {
        "id": "446906bddfa7b4e6",
        "type": "debug",
        "z": "88710bd4abef8c71",
        "g": "479cbfad929b1fbd",
        "name": "debug 123",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 1000,
        "wires": []
    },
    {
        "id": "8c8c1020199f8440",
        "type": "function",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "7153f3847aa5ae85",
        "name": "Query ",
        "func": "\nmsg.topic = `\n  SELECT * FROM local_data WHERE data < CURDATE();\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1240,
        "wires": [
            [
                "d514f0ed0feb3b21"
            ]
        ]
    },
    {
        "id": "d514f0ed0feb3b21",
        "type": "mysql",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "7153f3847aa5ae85",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 560,
        "y": 1240,
        "wires": [
            [
                "85979d24b475399a"
            ]
        ]
    },
    {
        "id": "bb64c73b5730077f",
        "type": "inject",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "7153f3847aa5ae85",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "01 00 * * 6",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1240,
        "wires": [
            [
                "8c8c1020199f8440"
            ]
        ]
    },
    {
        "id": "632b34e20696d0d2",
        "type": "debug",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "7153f3847aa5ae85",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 1240,
        "wires": []
    },
    {
        "id": "ad8e2e488742925a",
        "type": "comment",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "7153f3847aa5ae85",
        "name": "Se guarda a csv cada sábado",
        "info": "",
        "x": 200,
        "y": 1340,
        "wires": []
    },
    {
        "id": "85979d24b475399a",
        "type": "function",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "7153f3847aa5ae85",
        "name": "Procesar array para csv",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\n// All data\nfor (var i = 0; i < array_in.length; i++) {\n    array_out[i] = JSON.parse(msg.payload[i].data);\n\n    // Converting simple timestamp to human readable\n    // time\n    array_out[i].timestamp = unixTimestampToHumanReadable(array_out[i].timestamp);\n}\n\n// Nombre del archivo CSV\nmsg.filename = `/root/ITEMAQ/ANGULAMIENTO/${array_out[0].timestamp.split(\" \")[0]} hasta ${array_out[array_out.length - 1].timestamp.split(\" \")[0]}`;\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n\n\n\n// Function for timestamp to readable time\nfunction unixTimestampToHumanReadable(unixTimestamp) {\n    const date = new Date(unixTimestamp);\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    const seconds = date.getSeconds().toString().padStart(2, '0');\n\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1240,
        "wires": [
            [
                "cad56383cce99bee"
            ]
        ]
    },
    {
        "id": "cad56383cce99bee",
        "type": "function",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "7153f3847aa5ae85",
        "name": "csv",
        "func": "function arrayToCSV(data) {\n    // Verificar si el array de datos está vacío\n    if (data.length === 0) {\n        return '';\n    }\n\n    // Obtener las claves del primer objeto JSON para los encabezados de columna\n    const keys = Object.keys(data[0]);\n\n    // Construir los encabezados de columna\n    const headerRow = keys.join(',');\n\n    // Construir filas del CSV\n    const csvRows = [];\n    csvRows.push(headerRow);\n\n    for (const obj of data) {\n        const values = keys.map(key => obj[key]);\n        const csvRow = values.join(',');\n        csvRows.push(csvRow);\n    }\n\n    // Unir todas las filas con saltos de línea\n    return csvRows.join('\\n');\n}\n// Convertir el array de objetos JSON a una cadena CSV\nconst csvString = arrayToCSV(msg.payload);\nmsg.payload = csvString;\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1240,
        "wires": [
            [
                "85b01667d974833f"
            ]
        ]
    },
    {
        "id": "85b01667d974833f",
        "type": "file",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "7153f3847aa5ae85",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1100,
        "y": 1240,
        "wires": [
            [
                "5286db960201857c"
            ]
        ]
    },
    {
        "id": "5286db960201857c",
        "type": "function",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "7153f3847aa5ae85",
        "name": "Query ",
        "func": "// msg.topic = `\n//   DELETE FROM local_data\n//   WHERE date >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK)\n//     AND date < CURDATE();\n// `;\n\n// Eliminar toda la data anterior al dia \nmsg.topic = `\n  DELETE FROM local_data\n  WHERE date < CURDATE();\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1240,
        "wires": [
            [
                "2e96ea8f95a775dc"
            ]
        ]
    },
    {
        "id": "2e96ea8f95a775dc",
        "type": "mysql",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "7153f3847aa5ae85",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 1460,
        "y": 1240,
        "wires": [
            [
                "632b34e20696d0d2",
                "72d009ee46d29f35"
            ]
        ]
    },
    {
        "id": "66145dd7203ccb1c",
        "type": "exec",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "c3a2d4404f836df1",
        "command": "/root/axotec_scripts/delete_older_file.sh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 520,
        "y": 1800,
        "wires": [
            [
                "a953dc10598a3993"
            ],
            [
                "87dc6ceca1168969"
            ],
            []
        ]
    },
    {
        "id": "1c8329253901b3aa",
        "type": "inject",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "c3a2d4404f836df1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "01 00 * * 0",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1800,
        "wires": [
            [
                "66145dd7203ccb1c"
            ]
        ]
    },
    {
        "id": "a953dc10598a3993",
        "type": "debug",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "c3a2d4404f836df1",
        "name": "debug 124",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1780,
        "wires": []
    },
    {
        "id": "fb33253a24d20d27",
        "type": "function",
        "z": "88710bd4abef8c71",
        "g": "b1c4dfd104899031",
        "name": "",
        "func": "msg.topic = \"DELETE FROM local_data WHERE date < DATE_SUB(CURDATE(), INTERVAL 365 DAY);\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 2000,
        "wires": [
            [
                "382d7ce92ee926fa"
            ]
        ]
    },
    {
        "id": "382d7ce92ee926fa",
        "type": "mysql",
        "z": "88710bd4abef8c71",
        "g": "b1c4dfd104899031",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 540,
        "y": 1980,
        "wires": [
            [
                "ab736b6e4164dd14"
            ]
        ]
    },
    {
        "id": "e43c2eb643c8d766",
        "type": "inject",
        "z": "88710bd4abef8c71",
        "g": "b1c4dfd104899031",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "59 23 * * 5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 2040,
        "wires": [
            [
                "fb33253a24d20d27"
            ]
        ]
    },
    {
        "id": "ab736b6e4164dd14",
        "type": "debug",
        "z": "88710bd4abef8c71",
        "g": "b1c4dfd104899031",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1980,
        "wires": []
    },
    {
        "id": "eff70b300ce9ea9d",
        "type": "comment",
        "z": "88710bd4abef8c71",
        "g": "b1c4dfd104899031",
        "name": "La data se elimina cada viernes",
        "info": "",
        "x": 210,
        "y": 2100,
        "wires": []
    },
    {
        "id": "87dc6ceca1168969",
        "type": "debug",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "c3a2d4404f836df1",
        "name": "debug 125",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1840,
        "wires": []
    },
    {
        "id": "0a50d78bc47d51d1",
        "type": "comment",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "7153f3847aa5ae85",
        "name": "Se guarda a csv local cada sábado",
        "info": "Estos es posible porque el inkect se hace cada semana",
        "x": 500,
        "y": 1360,
        "wires": []
    },
    {
        "id": "13c1e20a99e19ff8",
        "type": "link in",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "7153f3847aa5ae85",
        "name": "",
        "links": [
            "e6a36b868d315054"
        ],
        "x": 215,
        "y": 1300,
        "wires": [
            [
                "8c8c1020199f8440"
            ]
        ]
    },
    {
        "id": "72d009ee46d29f35",
        "type": "link out",
        "z": "88710bd4abef8c71",
        "d": true,
        "g": "7153f3847aa5ae85",
        "name": "connected",
        "mode": "link",
        "links": [
            "accf02cffc6c548b"
        ],
        "x": 1615,
        "y": 1300,
        "wires": []
    },
    {
        "id": "bb04e059f87af065",
        "type": "inject",
        "z": "88710bd4abef8c71",
        "g": "8c40c5fa882ced72",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 2700,
        "wires": [
            [
                "346fa05f50dcde33"
            ]
        ]
    },
    {
        "id": "346fa05f50dcde33",
        "type": "function",
        "z": "88710bd4abef8c71",
        "g": "8c40c5fa882ced72",
        "name": "DELETE ALL",
        "func": "\nmsg.topic = `\n  DELETE FROM local_data;\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2700,
        "wires": [
            [
                "73d657039bb34872"
            ]
        ]
    },
    {
        "id": "73d657039bb34872",
        "type": "mysql",
        "z": "88710bd4abef8c71",
        "g": "8c40c5fa882ced72",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 540,
        "y": 2700,
        "wires": [
            []
        ]
    },
    {
        "id": "b8724e1c5f6a5125",
        "type": "function",
        "z": "88710bd4abef8c71",
        "g": "479cbfad929b1fbd",
        "name": "Filter",
        "func": "let out_data = {}\n\nout_data.timestamp = msg.payload.timestamp;\nout_data.x_axis = msg.payload.data.rm9000.x_axis;\nout_data.y_axis = msg.payload.data.rm9000.y_axis;\nout_data.z1_axis = msg.payload.data.rm9000.z1_axis;\nout_data.z2_axis = msg.payload.data.rm9000.z2_axis;\nout_data.carga1 = msg.payload.data.carga_grua.carga1;\nout_data.carga2 = msg.payload.data.carga_grua.carga2;\nout_data.speed = msg.payload.data.gps.speed;\nout_data.state = msg.payload.data.sensor_estado.state;\n\n\nmsg.payload = out_data;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1080,
        "wires": [
            [
                "460f4a1dcaf40223"
            ]
        ]
    },
    {
        "id": "2e31b11df2e99de3",
        "type": "function",
        "z": "88710bd4abef8c71",
        "g": "1e4ff3cc7b7175fc",
        "name": "Query ",
        "func": "\nmsg.topic = `\n  SELECT * FROM local_data WHERE data < CURDATE();\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1520,
        "wires": [
            [
                "d315c890f9188f8d"
            ]
        ]
    },
    {
        "id": "d315c890f9188f8d",
        "type": "mysql",
        "z": "88710bd4abef8c71",
        "g": "1e4ff3cc7b7175fc",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 540,
        "y": 1520,
        "wires": [
            [
                "2ef1abd9b96f89c2"
            ]
        ]
    },
    {
        "id": "18b6978abfa7e214",
        "type": "inject",
        "z": "88710bd4abef8c71",
        "g": "1e4ff3cc7b7175fc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1520,
        "wires": [
            [
                "2e31b11df2e99de3"
            ]
        ]
    },
    {
        "id": "2ef1abd9b96f89c2",
        "type": "function",
        "z": "88710bd4abef8c71",
        "g": "1e4ff3cc7b7175fc",
        "name": "Procesar array para csv",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\n// All data\nfor (var i = 0; i < array_in.length; i++) {\n    array_out[i] = JSON.parse(msg.payload[i].data);\n\n    // Converting simple timestamp to human readable\n    // time\n    array_out[i].timestamp = unixTimestampToHumanReadable(array_out[i].timestamp);\n}\nmsg.filename = `${array_out[0].timestamp.split(\" \")[0]} hasta ${array_out[array_out.length - 1].timestamp.split(\" \")[0]}`;\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n\n\n\n// Function for timestamp to readable time\nfunction unixTimestampToHumanReadable(unixTimestamp) {\n    const date = new Date(unixTimestamp);\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    const seconds = date.getSeconds().toString().padStart(2, '0');\n\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1520,
        "wires": [
            [
                "61a05725c5779d7c"
            ]
        ]
    },
    {
        "id": "61a05725c5779d7c",
        "type": "function",
        "z": "88710bd4abef8c71",
        "g": "1e4ff3cc7b7175fc",
        "name": "csv",
        "func": "function arrayToCSV(data) {\n    // Verificar si el array de datos está vacío\n    if (data.length === 0) {\n        return '';\n    }\n\n    // Obtener las claves del primer objeto JSON para los encabezados de columna\n    const keys = Object.keys(data[0]);\n\n    // Construir los encabezados de columna\n    const headerRow = keys.join(',');\n\n    // Construir filas del CSV\n    const csvRows = [];\n    csvRows.push(headerRow);\n\n    for (const obj of data) {\n        const values = keys.map(key => obj[key]);\n        const csvRow = values.join(',');\n        csvRows.push(csvRow);\n    }\n\n    // Unir todas las filas con saltos de línea\n    return csvRows.join('\\n');\n}\n// Convertir el array de objetos JSON a una cadena CSV\nconst csvString = arrayToCSV(msg.payload);\nmsg.payload = csvString;\nmsg.descarga = 1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "42d066bb94eb5113",
        "type": "function",
        "z": "6d22ca827c229e56",
        "g": "83389f3909d131cd",
        "name": "filtramos array por estados",
        "func": "var properties = global.get('properties');\n\nvar array_in = msg.payload;\nvar array_out = [];\nvar msg1 = {};\nvar msg2 = {};\n\n\nmsg.payload = array_in.filter(d => d.state == properties.states[0]);\nmsg1.payload =array_in.filter(d => d.state == properties.states[1]);\nmsg2.payload =array_in.filter(d => d.state == properties.states[2]);\n\n\n// positivo, negativo, init\nreturn [msg, msg1, msg2];",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 720,
        "wires": [
            [
                "92538704e950278f",
                "696148b2bfc859f1"
            ],
            [
                "ed69b8913409b966"
            ],
            []
        ]
    },
    {
        "id": "92538704e950278f",
        "type": "function",
        "z": "6d22ca827c229e56",
        "g": "83389f3909d131cd",
        "name": "obtenemos suma de horas útiles totales",
        "func": "var array_in = msg.payload;\n\nlet sum = 0;\n\narray_in.forEach(element => {\n    sum += element.hours;\n});\n\nmsg.payload = sum;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 660,
        "wires": [
            [
                "7dbc15a857c383f4",
                "0fa328a272257c4a"
            ]
        ]
    },
    {
        "id": "696148b2bfc859f1",
        "type": "function",
        "z": "6d22ca827c229e56",
        "g": "83389f3909d131cd",
        "name": "filtramos horas útiles acumuladas por mes ",
        "func": "var properties = global.get('properties');\n\nvar array_in = msg.payload;\nvar array_out = [];\nvar nombresMeses = properties.month_names;\n\narray_out = array_in.filter(d => d.state == properties.states[0]);\n\nmsg.payload = array_out;\n\n\n// Inicializa un objeto para almacenar las sumas por mes\nconst sumaPorMes = {};\n\n// Itera sobre los datos y suma las horas por mes\narray_in.forEach(dato => {\n  const mes = dato.month;\n  const horas = dato.hours;\n  \n  // Si el mes aún no existe en el objeto sumaPorMes, inicialízalo en 0\n  if (!sumaPorMes[mes]) {\n    sumaPorMes[mes] = 0;\n  }\n  \n  // Suma las horas al mes correspondiente\n  sumaPorMes[mes] += horas;\n});\n\n// Crea un array con las sumas acumuladas en el orden de los nombres de los meses\nconst sumasAcumuladas = nombresMeses.map(mes => sumaPorMes[mes] || 0);\narray_out = sumasAcumuladas;\n\nmsg.payload = array_out;\nmsg.topic = properties.states[0];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 700,
        "wires": [
            [
                "08a2e2a4e70f0a11"
            ]
        ]
    },
    {
        "id": "ed69b8913409b966",
        "type": "function",
        "z": "6d22ca827c229e56",
        "g": "83389f3909d131cd",
        "name": "filtramos horas no útiles acumuladas por mes ",
        "func": "var properties = global.get('properties');\n\nvar array_in = msg.payload;\nvar array_out = [];\nvar nombresMeses = properties.month_names;\n\narray_out = array_in.filter(d => d.state == properties.states[0]);\n\nmsg.payload = array_out;\n\n\n// Inicializa un objeto para almacenar las sumas por mes\nconst sumaPorMes = {};\n\n// Itera sobre los datos y suma las horas por mes\narray_in.forEach(dato => {\n  const mes = dato.month;\n  const horas = dato.hours;\n  \n  // Si el mes aún no existe en el objeto sumaPorMes, inicialízalo en 0\n  if (!sumaPorMes[mes]) {\n    sumaPorMes[mes] = 0;\n  }\n  \n  // Suma las horas al mes correspondiente\n  sumaPorMes[mes] += horas;\n});\n\n// Crea un array con las sumas acumuladas en el orden de los nombres de los meses\nconst sumasAcumuladas = nombresMeses.map(mes => sumaPorMes[mes] || 0);\narray_out = sumasAcumuladas;\n\nmsg.payload = array_out;\nmsg.topic = properties.states[1];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 740,
        "wires": [
            [
                "7f794c124c579224",
                "feaa75bda85f3d83"
            ]
        ]
    },
    {
        "id": "7f794c124c579224",
        "type": "debug",
        "z": "6d22ca827c229e56",
        "g": "83389f3909d131cd",
        "name": "debug 159",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 800,
        "wires": []
    },
    {
        "id": "08a2e2a4e70f0a11",
        "type": "change",
        "z": "6d22ca827c229e56",
        "g": "83389f3909d131cd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "graphs.array1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "feaa75bda85f3d83",
        "type": "change",
        "z": "6d22ca827c229e56",
        "g": "83389f3909d131cd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "graphs.array2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "13db80d191c063cf",
        "type": "function",
        "z": "6d22ca827c229e56",
        "g": "b5820d425c18f740",
        "name": "Preprocesamiento para frecuencia mensual",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nvar count = 0; // Cambié el inicio de count a 0\nvar current_state = \"\";\nvar prev_state = \"\";\nvar current_date = 0;\n\nfor (var i = 0; i < array_in.length; i++) {\n    current_state = array_in[i].state;\n    current_date = array_in[i].timestamp;\n\n    if (current_state != prev_state) {\n        // Crear un nuevo objeto en cada cambio de estado\n        array_out[count] = {\n            state: current_state,\n            fInit: current_date,\n            fEnd: current_date\n        };\n        count++;\n    } else {\n        // Actualizar la fecha_fin del objeto anterior si el estado es el mismo\n        array_out[count - 1].fEnd = current_date;\n    }\n    prev_state = current_state;\n}\n\nmsg.payload = array_out;\nreturn msg;\n\n\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 420,
        "wires": [
            [
                "820f048881e1c00d"
            ]
        ]
    },
    {
        "id": "820f048881e1c00d",
        "type": "function",
        "z": "6d22ca827c229e56",
        "g": "b5820d425c18f740",
        "name": "Añadiendo mes y horas",
        "func": "var properties = global.get('properties');\n\n\nvar array_in = msg.payload;\nvar array_out = [];\n\nvar nombresMeses = properties.month_names;\n\n\nfor(var i=0;i<array_in.length;i++){\n    array_out[i] = array_in[i];\n    // Calcula la diferencia en milisegundos\n    const diferenciaEnMilisegundos = (array_in[i].fEnd - array_in[i].fInit); // Multiplicamos por 1000 para convertir a milisegundos\n\n    // Convierte la diferencia en milisegundos a horas\n    const horas = diferenciaEnMilisegundos / (60 * 60 * 1000); // 1 hora = 60 minutos * 60 segundos * 1000 milisegundos\n    array_out[i].hours = horas;\n\n    // MES\n    var date = new Date(array_in[i].fInit);\n    // Obtiene el número del mes (0 para enero, 1 para febrero, etc.)\n    var mes = date.getMonth();\n    array_out[i].month = nombresMeses[mes];\n\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 480,
        "wires": [
            [
                "42d066bb94eb5113",
                "c62877a708910f8a"
            ]
        ]
    },
    {
        "id": "b7486239c2e4036c",
        "type": "mysql",
        "z": "6d22ca827c229e56",
        "g": "b5820d425c18f740",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 460,
        "y": 420,
        "wires": [
            [
                "75a24660cd48b3d7"
            ]
        ]
    },
    {
        "id": "4e252340494aaea7",
        "type": "function",
        "z": "6d22ca827c229e56",
        "g": "b5820d425c18f740",
        "name": "",
        "func": "var properties = global.get('properties');\n\n\n// msg.topic =`SELECT data FROM local_data\n// ORDER BY date ASC\n// LIMIT 10;`;\n\nmsg.topic = `SELECT data FROM local_data;`;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 420,
        "wires": [
            [
                "b7486239c2e4036c"
            ]
        ]
    },
    {
        "id": "75a24660cd48b3d7",
        "type": "function",
        "z": "6d22ca827c229e56",
        "g": "b5820d425c18f740",
        "name": "Process to json array",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = JSON.parse(msg.payload[i].data);\n}\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 420,
        "wires": [
            [
                "13db80d191c063cf"
            ]
        ]
    },
    {
        "id": "a0cdf0af175a4529",
        "type": "inject",
        "z": "6d22ca827c229e56",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 160,
        "wires": [
            [
                "567b6cf233af6abe"
            ]
        ]
    },
    {
        "id": "567b6cf233af6abe",
        "type": "change",
        "z": "6d22ca827c229e56",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "properties",
                "pt": "global",
                "to": "{\"table_name\":\"local_data\",\"states\":[\"positivo\",\"negativo\",\"init\"],\"month_names\":[\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "abb13cc7dd1a7d54",
        "type": "inject",
        "z": "6d22ca827c229e56",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 870,
        "y": 160,
        "wires": [
            [
                "fc7f737dcdd18385"
            ]
        ]
    },
    {
        "id": "fc7f737dcdd18385",
        "type": "change",
        "z": "6d22ca827c229e56",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "graphs",
                "pt": "global",
                "to": "{\"array1\":[0,0,0,0,0,0,0,0,0,0,0,0],\"array2\":[0,0,0,0,0,0,0,0,0,0,0,0]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "c62877a708910f8a",
        "type": "http response",
        "z": "6d22ca827c229e56",
        "g": "b5820d425c18f740",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1180,
        "y": 480,
        "wires": []
    },
    {
        "id": "2421ee53ca27c9fb",
        "type": "http in",
        "z": "6d22ca827c229e56",
        "g": "b5820d425c18f740",
        "name": "",
        "url": "/frequency",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 420,
        "wires": [
            [
                "4e252340494aaea7"
            ]
        ]
    },
    {
        "id": "abe239162a4e7d65",
        "type": "http in",
        "z": "6d22ca827c229e56",
        "name": "",
        "url": "/cumulatedfrequency",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 370,
        "y": 940,
        "wires": [
            [
                "1bcdcae5a4b7decd"
            ]
        ]
    },
    {
        "id": "a81724c82f500fba",
        "type": "http response",
        "z": "6d22ca827c229e56",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 840,
        "y": 940,
        "wires": []
    },
    {
        "id": "1bcdcae5a4b7decd",
        "type": "function",
        "z": "6d22ca827c229e56",
        "name": "function 122",
        "func": "var data = global.get('graphs')\n\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 940,
        "wires": [
            [
                "a81724c82f500fba",
                "7001dff028987b50"
            ]
        ]
    },
    {
        "id": "7dbc15a857c383f4",
        "type": "debug",
        "z": "6d22ca827c229e56",
        "g": "83389f3909d131cd",
        "name": "debug 161",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 660,
        "wires": []
    },
    {
        "id": "7001dff028987b50",
        "type": "debug",
        "z": "6d22ca827c229e56",
        "name": "debug 162",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1020,
        "wires": []
    },
    {
        "id": "0fa328a272257c4a",
        "type": "change",
        "z": "6d22ca827c229e56",
        "g": "83389f3909d131cd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hourmeter.total",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "7dcd4895787566ef",
        "type": "http in",
        "z": "6d22ca827c229e56",
        "g": "7dda2138188e3286",
        "name": "",
        "url": "/hourmeter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 1380,
        "wires": [
            [
                "3a06903a25bdbc48"
            ]
        ]
    },
    {
        "id": "89a77a163d6b42d4",
        "type": "http response",
        "z": "6d22ca827c229e56",
        "g": "862801e1cc0ee16c",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1100,
        "y": 1660,
        "wires": []
    },
    {
        "id": "be79467af0c160c0",
        "type": "function",
        "z": "6d22ca827c229e56",
        "g": "862801e1cc0ee16c",
        "name": "function 123",
        "func": "var hourmeter = global.get(\"hourmeter\");\n\nfunction decimalHoursToHoursAndMinutes(decimalHours) {\n  const hours = Math.floor(decimalHours);\n  const minutes = Math.round((decimalHours - hours) * 60);\n  return { hours, minutes };\n}\n\n\n\n\nmsg.payload = decimalHoursToHoursAndMinutes(msg.payload);\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1640,
        "wires": [
            [
                "89a77a163d6b42d4",
                "05398629dfdcfe52"
            ]
        ]
    },
    {
        "id": "05398629dfdcfe52",
        "type": "debug",
        "z": "6d22ca827c229e56",
        "g": "862801e1cc0ee16c",
        "name": "debug 163",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 1700,
        "wires": []
    },
    {
        "id": "eeeb35ae70be77bc",
        "type": "inject",
        "z": "6d22ca827c229e56",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 1760,
        "wires": [
            [
                "e3cd30b10c06bf04"
            ]
        ]
    },
    {
        "id": "e3cd30b10c06bf04",
        "type": "change",
        "z": "6d22ca827c229e56",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hourmeter",
                "pt": "global",
                "to": "{\"total\":0, \"minutes\":0,\"hours\":0}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "3d0952b746fc8447",
        "type": "http in",
        "z": "6d22ca827c229e56",
        "d": true,
        "name": "",
        "url": "/hourmeter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 340,
        "y": 2200,
        "wires": [
            [
                "4b055cdae401d312"
            ]
        ]
    },
    {
        "id": "8a62f5463b048ef9",
        "type": "http response",
        "z": "6d22ca827c229e56",
        "d": true,
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 840,
        "y": 2200,
        "wires": []
    },
    {
        "id": "4b055cdae401d312",
        "type": "function",
        "z": "6d22ca827c229e56",
        "d": true,
        "name": "function 124",
        "func": "var hourmeter = global.get(\"hourmeter\");\n\n\nmsg.payload = hourmeter;\n\nhourmeter.minutes += 1;\nif (hourmeter.minutes >=60){\n  hourmeter.minutes = 0;\n  hourmeter.hours += 1;\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 2200,
        "wires": [
            [
                "8a62f5463b048ef9"
            ]
        ]
    },
    {
        "id": "d786203c9179e9e7",
        "type": "inject",
        "z": "6d22ca827c229e56",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 430,
        "y": 2100,
        "wires": [
            [
                "9069d73169220819"
            ]
        ]
    },
    {
        "id": "9069d73169220819",
        "type": "change",
        "z": "6d22ca827c229e56",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hourmeter",
                "pt": "global",
                "to": "{\"minutes\":0,\"hours\":0}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "da2e274edbb43d59",
        "type": "http in",
        "z": "6d22ca827c229e56",
        "name": "",
        "url": "/status-draw",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 360,
        "y": 2540,
        "wires": [
            [
                "0ca39498efa70dc0"
            ]
        ]
    },
    {
        "id": "0c5d66d9d1534c0d",
        "type": "http response",
        "z": "6d22ca827c229e56",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 860,
        "y": 2540,
        "wires": []
    },
    {
        "id": "0ca39498efa70dc0",
        "type": "function",
        "z": "6d22ca827c229e56",
        "name": "function 125",
        "func": "// const arraySize = 12;\n// const minValue = 0;\n// const maxValue = 100;\n\n// function randomNumber(minValue, maxValue){\n// var number = Math.floor(Math.random() * (maxValue - minValue + 1)) + minValue;\n// return number;\n// }\n\n// msg.payload = {\n//   \"rm9000\":{\"x_axis\":randomNumber(0,75), \"y_axis\":randomNumber(0,38)},\n//   \"carga_grua\":{\"carga1\":randomNumber(0,10), \"carga2\":randomNumber(0,10)}\n// };\n\n// return msg;\n\n\nvar data = global.get(\"gateway_data\").data;\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 2540,
        "wires": [
            [
                "0c5d66d9d1534c0d"
            ]
        ]
    },
    {
        "id": "6c3b390338424a0f",
        "type": "http in",
        "z": "6d22ca827c229e56",
        "name": "",
        "url": "/status-desc",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 300,
        "y": 2420,
        "wires": [
            [
                "693c7ef9ffd96147"
            ]
        ]
    },
    {
        "id": "4c8525fbb7c8ec37",
        "type": "http response",
        "z": "6d22ca827c229e56",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 980,
        "y": 2420,
        "wires": []
    },
    {
        "id": "95dad9ae48ec60ac",
        "type": "debug",
        "z": "6d22ca827c229e56",
        "name": "debug 171",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 2340,
        "wires": []
    },
    {
        "id": "693c7ef9ffd96147",
        "type": "function",
        "z": "6d22ca827c229e56",
        "name": "function 126",
        "func": "var status = global.get(\"gateway_data\").data.sensor_estado.state;\nmsg.topic = status;\nif (status === \"init\"){\n    msg.payload = {\"status\": 0}\n    \n\n}\nelse{\n    msg.payload = {\"status\": 1}\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2420,
        "wires": [
            [
                "4c8525fbb7c8ec37",
                "95dad9ae48ec60ac"
            ]
        ]
    },
    {
        "id": "c0eb85ca3e5e290d",
        "type": "function",
        "z": "6d22ca827c229e56",
        "g": "862801e1cc0ee16c",
        "name": "filtramos array por estados",
        "func": "var properties = global.get('properties');\n\nvar array_in = msg.payload;\nvar array_out = [];\nvar msg1 = {};\nvar msg2 = {};\n\n\nmsg.payload = array_in.filter(d => d.state == properties.states[0]);\nmsg1.payload =array_in.filter(d => d.state == properties.states[1]);\nmsg2.payload =array_in.filter(d => d.state == properties.states[2]);\n\n\n// positivo, negativo, init\nreturn [msg, msg1, msg2];",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1640,
        "wires": [
            [
                "aec79d55b9d5237a"
            ],
            [],
            []
        ]
    },
    {
        "id": "aec79d55b9d5237a",
        "type": "function",
        "z": "6d22ca827c229e56",
        "g": "862801e1cc0ee16c",
        "name": "obtenemos suma de horas útiles totales",
        "func": "var array_in = msg.payload;\n\nlet sum = 0;\n\narray_in.forEach(element => {\n    sum += element.hours;\n});\n\nmsg.payload = sum;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1580,
        "wires": [
            [
                "03c77f85084aa581",
                "be79467af0c160c0"
            ]
        ]
    },
    {
        "id": "03c77f85084aa581",
        "type": "change",
        "z": "6d22ca827c229e56",
        "g": "862801e1cc0ee16c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hourmeter.total",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "f4ca9963f5d29594",
        "type": "mysql",
        "z": "6d22ca827c229e56",
        "g": "7dda2138188e3286",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 460,
        "y": 1340,
        "wires": [
            [
                "6de41ea3c4b45d4f"
            ]
        ]
    },
    {
        "id": "3a06903a25bdbc48",
        "type": "function",
        "z": "6d22ca827c229e56",
        "g": "7dda2138188e3286",
        "name": "",
        "func": "var properties = global.get('properties');\n\n\n// msg.topic =`SELECT data FROM local_data\n// ORDER BY date ASC\n// LIMIT 10;`;\n\nmsg.topic = `SELECT data FROM local_data;`;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1340,
        "wires": [
            [
                "f4ca9963f5d29594"
            ]
        ]
    },
    {
        "id": "6de41ea3c4b45d4f",
        "type": "function",
        "z": "6d22ca827c229e56",
        "g": "7dda2138188e3286",
        "name": "Process to json array",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = JSON.parse(msg.payload[i].data);\n}\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1340,
        "wires": [
            [
                "157d0b0f8051b22e"
            ]
        ]
    },
    {
        "id": "157d0b0f8051b22e",
        "type": "function",
        "z": "6d22ca827c229e56",
        "g": "7dda2138188e3286",
        "name": "Preprocesamiento para frecuencia mensual",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nvar count = 0; // Cambié el inicio de count a 0\nvar current_state = \"\";\nvar prev_state = \"\";\nvar current_date = 0;\n\nfor (var i = 0; i < array_in.length; i++) {\n    current_state = array_in[i].state;\n    current_date = array_in[i].timestamp;\n\n    if (current_state != prev_state) {\n        // Crear un nuevo objeto en cada cambio de estado\n        array_out[count] = {\n            state: current_state,\n            fInit: current_date,\n            fEnd: current_date\n        };\n        count++;\n    } else {\n        // Actualizar la fecha_fin del objeto anterior si el estado es el mismo\n        array_out[count - 1].fEnd = current_date;\n    }\n    prev_state = current_state;\n}\n\nmsg.payload = array_out;\nreturn msg;\n\n\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1340,
        "wires": [
            [
                "12865a7fd31659d0"
            ]
        ]
    },
    {
        "id": "12865a7fd31659d0",
        "type": "function",
        "z": "6d22ca827c229e56",
        "g": "7dda2138188e3286",
        "name": "Añadiendo mes y horas",
        "func": "var properties = global.get('properties');\n\n\nvar array_in = msg.payload;\nvar array_out = [];\n\nvar nombresMeses = properties.month_names;\n\n\nfor(var i=0;i<array_in.length;i++){\n    array_out[i] = array_in[i];\n    // Calcula la diferencia en milisegundos\n    const diferenciaEnMilisegundos = (array_in[i].fEnd - array_in[i].fInit); // Multiplicamos por 1000 para convertir a milisegundos\n\n    // Convierte la diferencia en milisegundos a horas\n    const horas = diferenciaEnMilisegundos / (60 * 60 * 1000); // 1 hora = 60 minutos * 60 segundos * 1000 milisegundos\n    array_out[i].hours = horas;\n\n    // MES\n    var date = new Date(array_in[i].fInit);\n    // Obtiene el número del mes (0 para enero, 1 para febrero, etc.)\n    var mes = date.getMonth();\n    array_out[i].month = nombresMeses[mes];\n\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1400,
        "wires": [
            [
                "c0eb85ca3e5e290d"
            ]
        ]
    },
    {
        "id": "abe8b77bcaf78d17",
        "type": "function",
        "z": "a0ba15e2dac68838",
        "name": "",
        "func": "var dates = msg.payload.dateRange;\nmsg.topic = `SELECT * FROM local_data WHERE \ndate >= FROM_UNIXTIME(${dates[0]}) AND date <= FROM_UNIXTIME(${dates[1]});\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 340,
        "wires": [
            [
                "b11b817928f4ba60"
            ]
        ]
    },
    {
        "id": "b41b3440adceac91",
        "type": "http in",
        "z": "a0ba15e2dac68838",
        "name": "",
        "url": "/bell1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 340,
        "wires": [
            [
                "abe8b77bcaf78d17"
            ]
        ]
    },
    {
        "id": "76d8cd13a910ef66",
        "type": "http response",
        "z": "a0ba15e2dac68838",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1120,
        "y": 300,
        "wires": []
    },
    {
        "id": "b11b817928f4ba60",
        "type": "mysql",
        "z": "a0ba15e2dac68838",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 540,
        "y": 340,
        "wires": [
            [
                "0bf5162599308ee1"
            ]
        ]
    },
    {
        "id": "0bf5162599308ee1",
        "type": "function",
        "z": "a0ba15e2dac68838",
        "name": "Process to json array",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = JSON.parse(msg.payload[i].data);\n}\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 340,
        "wires": [
            [
                "f447ba73d37402bd",
                "eb2dfc0f90bf345e"
            ]
        ]
    },
    {
        "id": "5743a7674b4dfa4b",
        "type": "debug",
        "z": "a0ba15e2dac68838",
        "name": "debug 164",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 340,
        "wires": []
    },
    {
        "id": "f447ba73d37402bd",
        "type": "function",
        "z": "a0ba15e2dac68838",
        "name": "to carga1",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = array_in[i].carga1;\n}\n\nmsg.payload = array_out;\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 340,
        "wires": [
            [
                "5743a7674b4dfa4b",
                "76d8cd13a910ef66"
            ]
        ]
    },
    {
        "id": "eb2dfc0f90bf345e",
        "type": "debug",
        "z": "a0ba15e2dac68838",
        "name": "debug 165",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 380,
        "wires": []
    },
    {
        "id": "623d20163936fc2e",
        "type": "function",
        "z": "a0ba15e2dac68838",
        "name": "",
        "func": "var dates = msg.payload.dateRange;\nmsg.topic = `SELECT * FROM local_data WHERE \ndate >= FROM_UNIXTIME(${dates[0]}) AND date <= FROM_UNIXTIME(${dates[1]});\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 520,
        "wires": [
            [
                "07740c1cc4a3ecee"
            ]
        ]
    },
    {
        "id": "1a1eb66820a2273f",
        "type": "http in",
        "z": "a0ba15e2dac68838",
        "name": "",
        "url": "/bell2",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 520,
        "wires": [
            [
                "623d20163936fc2e"
            ]
        ]
    },
    {
        "id": "7774ae8f20ca1497",
        "type": "http response",
        "z": "a0ba15e2dac68838",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1100,
        "y": 480,
        "wires": []
    },
    {
        "id": "07740c1cc4a3ecee",
        "type": "mysql",
        "z": "a0ba15e2dac68838",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 520,
        "y": 520,
        "wires": [
            [
                "3923e4642f1184ad"
            ]
        ]
    },
    {
        "id": "3923e4642f1184ad",
        "type": "function",
        "z": "a0ba15e2dac68838",
        "name": "Process to json array",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = JSON.parse(msg.payload[i].data);\n}\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 520,
        "wires": [
            [
                "77e63f8c17b8db3c",
                "ebc0229802a1cae4"
            ]
        ]
    },
    {
        "id": "85cdb32448d4b67f",
        "type": "debug",
        "z": "a0ba15e2dac68838",
        "name": "debug 166",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 520,
        "wires": []
    },
    {
        "id": "77e63f8c17b8db3c",
        "type": "function",
        "z": "a0ba15e2dac68838",
        "name": "to carga2",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = array_in[i].carga2;\n}\n\nmsg.payload = array_out;\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 520,
        "wires": [
            [
                "85cdb32448d4b67f",
                "7774ae8f20ca1497"
            ]
        ]
    },
    {
        "id": "ebc0229802a1cae4",
        "type": "debug",
        "z": "a0ba15e2dac68838",
        "name": "debug 167",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 560,
        "wires": []
    },
    {
        "id": "dd31b1d1a14fb78d",
        "type": "http in",
        "z": "a0ba15e2dac68838",
        "name": "",
        "url": "/heat1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 740,
        "wires": [
            [
                "0988b0e6e533d1fb",
                "2cae6446401b2557"
            ]
        ]
    },
    {
        "id": "16f2bb7f1a36b968",
        "type": "http response",
        "z": "a0ba15e2dac68838",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1100,
        "y": 720,
        "wires": []
    },
    {
        "id": "0988b0e6e533d1fb",
        "type": "function",
        "z": "a0ba15e2dac68838",
        "name": "",
        "func": "var dates = msg.payload.dateRange;\nmsg.topic = `SELECT * FROM local_data WHERE \ndate >= FROM_UNIXTIME(${dates[0]}) AND date <= FROM_UNIXTIME(${dates[1]});\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 740,
        "wires": [
            [
                "b29067fc0d1f0479"
            ]
        ]
    },
    {
        "id": "b29067fc0d1f0479",
        "type": "mysql",
        "z": "a0ba15e2dac68838",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 500,
        "y": 740,
        "wires": [
            [
                "3e4a5f19d7b4701c"
            ]
        ]
    },
    {
        "id": "3e4a5f19d7b4701c",
        "type": "function",
        "z": "a0ba15e2dac68838",
        "name": "Process to json array",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = JSON.parse(msg.payload[i].data);\n}\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 740,
        "wires": [
            [
                "ca279b96d29afc4c",
                "85294e17af85e16c"
            ]
        ]
    },
    {
        "id": "ca279b96d29afc4c",
        "type": "function",
        "z": "a0ba15e2dac68838",
        "name": "to carga1",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = { \"g\": array_in[i].x_axis ,\n        \"l\": array_in[i].y_axis,\n        \"tmp\": array_in[i].carga1};\n\n    \n}\n\nmsg.payload = array_out;\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "a65d46a4c6da42e6",
        "type": "debug",
        "z": "a0ba15e2dac68838",
        "name": "debug 168",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 800,
        "wires": []
    },
    {
        "id": "fd07f84b157f18b4",
        "type": "inject",
        "z": "a0ba15e2dac68838",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 820,
        "wires": [
            [
                "0988b0e6e533d1fb"
            ]
        ]
    },
    {
        "id": "b440b62c3e3ed590",
        "type": "http in",
        "z": "a0ba15e2dac68838",
        "name": "",
        "url": "/heat2",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1040,
        "wires": [
            [
                "66fc2eebac13aa8a"
            ]
        ]
    },
    {
        "id": "07f1a5de5121722a",
        "type": "http response",
        "z": "a0ba15e2dac68838",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1100,
        "y": 1020,
        "wires": []
    },
    {
        "id": "66fc2eebac13aa8a",
        "type": "function",
        "z": "a0ba15e2dac68838",
        "name": "",
        "func": "var dates = msg.payload.dateRange;\nmsg.topic = `SELECT * FROM local_data WHERE \ndate >= FROM_UNIXTIME(${dates[0]}) AND date <= FROM_UNIXTIME(${dates[1]});\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1040,
        "wires": [
            [
                "f524a563b81bb0fb"
            ]
        ]
    },
    {
        "id": "f524a563b81bb0fb",
        "type": "mysql",
        "z": "a0ba15e2dac68838",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 500,
        "y": 1040,
        "wires": [
            [
                "61fa9c45ccb2b578"
            ]
        ]
    },
    {
        "id": "61fa9c45ccb2b578",
        "type": "function",
        "z": "a0ba15e2dac68838",
        "name": "Process to json array",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = JSON.parse(msg.payload[i].data);\n}\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1040,
        "wires": [
            [
                "5b506d7f87f6e9c1",
                "fe78c66585121f19"
            ]
        ]
    },
    {
        "id": "fe78c66585121f19",
        "type": "debug",
        "z": "a0ba15e2dac68838",
        "name": "debug 169",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 1120,
        "wires": []
    },
    {
        "id": "176b64cccff8bd2a",
        "type": "inject",
        "z": "a0ba15e2dac68838",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1120,
        "wires": [
            [
                "66fc2eebac13aa8a"
            ]
        ]
    },
    {
        "id": "2ef52b317c5a982d",
        "type": "http in",
        "z": "a0ba15e2dac68838",
        "name": "",
        "url": "/realtime",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 1400,
        "wires": [
            [
                "3f51298873f424d8",
                "620c78f4bc3898b1"
            ]
        ]
    },
    {
        "id": "16fa853e0b848f60",
        "type": "http response",
        "z": "a0ba15e2dac68838",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1080,
        "y": 1400,
        "wires": []
    },
    {
        "id": "6c7f4dc6564a295c",
        "type": "debug",
        "z": "a0ba15e2dac68838",
        "name": "debug 170",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 1520,
        "wires": []
    },
    {
        "id": "3f51298873f424d8",
        "type": "function",
        "z": "a0ba15e2dac68838",
        "name": "",
        "func": "var dates = msg.payload.dateRange;\nmsg.topic = `SELECT * FROM local_data WHERE \ndate >= FROM_UNIXTIME(${dates[0]}) AND date <= FROM_UNIXTIME(${dates[1]});\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1400,
        "wires": [
            [
                "6a6214e1ee9a631c"
            ]
        ]
    },
    {
        "id": "6a6214e1ee9a631c",
        "type": "mysql",
        "z": "a0ba15e2dac68838",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 500,
        "y": 1400,
        "wires": [
            [
                "acef35846d1cb2c3",
                "8a275abbb621cf68"
            ]
        ]
    },
    {
        "id": "acef35846d1cb2c3",
        "type": "function",
        "z": "a0ba15e2dac68838",
        "name": "Process to json array",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out[i] = JSON.parse(msg.payload[i].data);\n}\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1400,
        "wires": [
            [
                "193fa76db6ba1c07"
            ]
        ]
    },
    {
        "id": "193fa76db6ba1c07",
        "type": "function",
        "z": "a0ba15e2dac68838",
        "name": "to realtime",
        "func": "var array_in = msg.payload;\nvar array_out1 = [];\nvar array_out2 = [];\n\n\nfor (var i = 0; i < array_in.length; i++) {\n    \n    array_out1[i] = [array_in[i].timestamp, array_in[i].z1_axis];\n    array_out2[i] = [array_in[i].timestamp, array_in[i].z2_axis];\n    \n}\n\nmsg.payload = {\"array1\": array_out1,\n                \"array2\": array_out2};\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 1400,
        "wires": [
            [
                "6c7f4dc6564a295c",
                "16fa853e0b848f60"
            ]
        ]
    },
    {
        "id": "85294e17af85e16c",
        "type": "function",
        "z": "a0ba15e2dac68838",
        "name": "function 127",
        "func": "const gridSize = 100;\nconst grid = new Array(gridSize).fill().map(() => new Array(gridSize).fill(0));\n\n// Supongamos que tienes una lista de miles de datos en el formato JSON dado\nconst datos = msg.payload;\n\n// Acumular la cantidad de veces que cada posición se repite en el grid\ndatos.forEach(({ x_axis, y_axis }) => {\n  if (x_axis >= 0 && x_axis < gridSize && y_axis >= 0 && y_axis < gridSize) {\n    grid[y_axis][x_axis]++;\n  }\n});\n\n// Convertir el grid a la estructura JSON deseada\nconst heatmapJSON = [];\n\nfor (let y = 0; y < gridSize; y++) {\n  for (let x = 0; x < gridSize; x++) {\n    if (grid[y][x] > 0) {\n      heatmapJSON.push({ g: x, l: y, tmp: grid[y][x] });\n    }\n  }\n}\n\nmsg.payload = heatmapJSON;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 860,
        "wires": [
            [
                "a65d46a4c6da42e6",
                "16f2bb7f1a36b968"
            ]
        ]
    },
    {
        "id": "5b506d7f87f6e9c1",
        "type": "function",
        "z": "a0ba15e2dac68838",
        "name": "function 128",
        "func": "const gridSize = 100;\nconst grid = new Array(gridSize).fill().map(() => new Array(gridSize).fill(0));\n\n// Supongamos que tienes una lista de miles de datos en el formato JSON dado\nconst datos = msg.payload;\n\n// Acumular la cantidad de veces que cada posición se repite en el grid\ndatos.forEach(({ x_axis, y_axis }) => {\n  if (x_axis >= 0 && x_axis < gridSize && y_axis >= 0 && y_axis < gridSize) {\n    grid[y_axis][x_axis]++;\n  }\n});\n\n// Convertir el grid a la estructura JSON deseada\nconst heatmapJSON = [];\n\nfor (let y = 0; y < gridSize; y++) {\n  for (let x = 0; x < gridSize; x++) {\n    if (grid[y][x] > 0) {\n      heatmapJSON.push({ g: x, l: y, tmp: grid[y][x] });\n    }\n  }\n}\n\nmsg.payload = heatmapJSON;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 1100,
        "wires": [
            [
                "07f1a5de5121722a"
            ]
        ]
    },
    {
        "id": "cf18a4ef9a22997d",
        "type": "http response",
        "z": "a0ba15e2dac68838",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1060,
        "y": 1700,
        "wires": []
    },
    {
        "id": "829269dae53c4743",
        "type": "http in",
        "z": "a0ba15e2dac68838",
        "name": "",
        "url": "/download",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1700,
        "wires": [
            [
                "22ace646b32bf5f0"
            ]
        ]
    },
    {
        "id": "22ace646b32bf5f0",
        "type": "function",
        "z": "a0ba15e2dac68838",
        "name": "Query ",
        "func": "var dates = msg.payload.dateRange;\nmsg.topic = `SELECT * FROM local_data WHERE \ndate >= FROM_UNIXTIME(${dates[0]}) AND date <= FROM_UNIXTIME(${dates[1]});\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1700,
        "wires": [
            [
                "cb0495be47fd2d74"
            ]
        ]
    },
    {
        "id": "cb0495be47fd2d74",
        "type": "mysql",
        "z": "a0ba15e2dac68838",
        "mydb": "45598baf2af77f76",
        "name": "",
        "x": 500,
        "y": 1700,
        "wires": [
            [
                "9d5a8aa418d03927"
            ]
        ]
    },
    {
        "id": "9d5a8aa418d03927",
        "type": "function",
        "z": "a0ba15e2dac68838",
        "name": "Procesar array para csv",
        "func": "var array_in = msg.payload;\nvar array_out = [];\n\n// All data\nfor (var i = 0; i < array_in.length; i++) {\n    array_out[i] = JSON.parse(msg.payload[i].data);\n\n    // Converting simple timestamp to human readable\n    // time\n    array_out[i].timestamp = unixTimestampToHumanReadable(array_out[i].timestamp);\n}\nmsg.filename = `${array_out[0].timestamp.split(\" \")[0]} hasta ${array_out[array_out.length - 1].timestamp.split(\" \")[0]}`;\n\nmsg.payload = array_out;\n\nmsg.columns = Object.keys(msg.payload[0]).toString();\n\n\nreturn msg;\n\n\n\n// Function for timestamp to readable time\nfunction unixTimestampToHumanReadable(unixTimestamp) {\n    const date = new Date(unixTimestamp);\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    const seconds = date.getSeconds().toString().padStart(2, '0');\n\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1700,
        "wires": [
            [
                "abeddcbc5d676562"
            ]
        ]
    },
    {
        "id": "abeddcbc5d676562",
        "type": "function",
        "z": "a0ba15e2dac68838",
        "name": "csv",
        "func": "function arrayToCSV(data) {\n    // Verificar si el array de datos está vacío\n    if (data.length === 0) {\n        return '';\n    }\n\n    // Obtener las claves del primer objeto JSON para los encabezados de columna\n    const keys = Object.keys(data[0]);\n\n    // Construir los encabezados de columna\n    const headerRow = keys.join(',');\n\n    // Construir filas del CSV\n    const csvRows = [];\n    csvRows.push(headerRow);\n\n    for (const obj of data) {\n        const values = keys.map(key => obj[key]);\n        const csvRow = values.join(',');\n        csvRows.push(csvRow);\n    }\n\n    // Unir todas las filas con saltos de línea\n    return csvRows.join('\\n');\n}\n// Convertir el array de objetos JSON a una cadena CSV\nconst csvString = arrayToCSV(msg.payload);\nmsg.payload = {\"data\": csvString};\nmsg.descarga = 1;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1700,
        "wires": [
            [
                "cf18a4ef9a22997d"
            ]
        ]
    },
    {
        "id": "2cae6446401b2557",
        "type": "debug",
        "z": "a0ba15e2dac68838",
        "name": "debug 172",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 820,
        "wires": []
    },
    {
        "id": "620c78f4bc3898b1",
        "type": "debug",
        "z": "a0ba15e2dac68838",
        "name": "debug 173",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 1320,
        "wires": []
    },
    {
        "id": "256bc2406bb069d2",
        "type": "inject",
        "z": "a0ba15e2dac68838",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1480,
        "wires": [
            [
                "3f51298873f424d8"
            ]
        ]
    },
    {
        "id": "8a275abbb621cf68",
        "type": "debug",
        "z": "a0ba15e2dac68838",
        "name": "debug 179",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1480,
        "wires": []
    },
    {
        "id": "0c6c359498c1fb12",
        "type": "http in",
        "z": "c5f49755157c982b",
        "name": "",
        "url": "/frequency",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 320,
        "y": 260,
        "wires": [
            [
                "5693a46b14518d2d"
            ]
        ]
    },
    {
        "id": "5693a46b14518d2d",
        "type": "change",
        "z": "c5f49755157c982b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"hours\":1,\"month\":\"Octubre\",\"fInit\":1698076766890,\"fEnd\":1698076866890,\"state\":\"positivo\",\"sw\":true},{\"hours\":1,\"month\":\"Octubre\",\"fInit\":1698076866890,\"fEnd\":1698076966890,\"state\":\"negativo\",\"sw\":true},{\"hours\":1,\"month\":\"Octubre\",\"fInit\":1698076966890,\"fEnd\":1698077066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Octubre\",\"fInit\":1698076966890,\"fEnd\":1698077066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Octubre\",\"fInit\":1698076966890,\"fEnd\":1698077066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Octubre\",\"fInit\":1698076966890,\"fEnd\":1698077066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Octubre\",\"fInit\":1698076966890,\"fEnd\":1698077066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Noviembre\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Noviembre\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Noviembre\",\"fInit\":1698076966890,\"fEnd\":1698077066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Noviembre\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Noviembre\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Diciembre\",\"fInit\":1698076966890,\"fEnd\":1698077066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Diciembre\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Diciembre\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Diciembre\",\"fInit\":1698076966890,\"fEnd\":1698077066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Diciembre\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Diciembre\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Enero\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Enero\",\"fInit\":1698076966890,\"fEnd\":1698077066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Enero\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Enero\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"init\",\"sw\":true},{\"hours\":1,\"month\":\"Febrero\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"positivo\",\"sw\":true},{\"hours\":1,\"month\":\"Febrero\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"positivo\",\"sw\":true},{\"hours\":1,\"month\":\"Febrero\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"positivo\",\"sw\":true},{\"hours\":1,\"month\":\"Febrero\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"positivo\",\"sw\":true},{\"hours\":1,\"month\":\"Febrero\",\"fInit\":1698077066890,\"fEnd\":1698078066890,\"state\":\"positivo\",\"sw\":true}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 260,
        "wires": [
            [
                "f6a493c0a9b0c9be"
            ]
        ]
    },
    {
        "id": "f6a493c0a9b0c9be",
        "type": "http response",
        "z": "c5f49755157c982b",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 780,
        "y": 260,
        "wires": []
    },
    {
        "id": "ba9eb26f2347cdac",
        "type": "http in",
        "z": "c5f49755157c982b",
        "name": "",
        "url": "/realtime",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 310,
        "y": 560,
        "wires": [
            [
                "8d7dac689369427b"
            ]
        ]
    },
    {
        "id": "10a0745d3c51f7ac",
        "type": "http response",
        "z": "c5f49755157c982b",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 780,
        "y": 560,
        "wires": []
    },
    {
        "id": "8d7dac689369427b",
        "type": "function",
        "z": "c5f49755157c982b",
        "name": "function 112",
        "func": "var global_realtime = global.get(\"realtime\");\n\nvar array1 = [\n  [1483401600000, 116.33, 114.76, 116.15],\n  [1483488000000, 116.51, 115.75, 116.02],\n  [1483574400000, 116.86, 115.81, 116.61],\n  [1483660800000, 118.16, 116.47, 117.91],\n  [1483920000000, 119.43, 117.94, 118.99],\n  [1484006400000, 119.38, 118.3, 119.11],\n  [1484092800000, 119.93, 118.6, 119.75],\n  [1484179200000, 119.3, 118.21, 119.25],\n  [1484265600000, 119.62, 118.81, 119.04],\n  [1484611200000, 120.24, 118.22, 120.0],\n  [1484697600000, 120.5, 119.71, 119.99],\n  [1484784000000, 120.09, 119.37, 119.78],\n  [1484870400000, 120.45, 119.73, 120.0],\n  [1485129600000, 120.81, 119.77, 120.08],\n  [1485216000000, 120.1, 119.5, 119.97],\n  [1485302400000, 122.1, 120.28, 121.88],\n  [1485388800000, 122.44, 121.6, 121.94],\n  [1485475200000, 122.35, 121.6, 121.95],\n  [1485734400000, 121.63, 120.66, 121.63],\n  [1485820800000, 121.39, 120.62, 121.35],\n  [1485993600000, 129.39, 127.78, 128.53],\n  [1486080000000, 129.19, 128.16, 129.08],\n  [1486339200000, 130.5, 128.9, 130.29],\n  [1486425600000, 132.09, 130.45, 131.53],\n  [1486512000000, 132.22, 131.22, 132.04],\n  [1486598400000, 132.44, 131.12, 132.42],\n  [1486684800000, 132.94, 132.05, 132.12],\n  [1486944000000, 133.82, 132.75, 133.29],\n  [1487030400000, 135.09, 133.25, 135.02],\n  [1487116800000, 136.27, 134.62, 135.51],\n  [1487203200000, 135.9, 134.84, 135.34],\n  [1487289600000, 135.83, 135.1, 135.72],\n  [1487635200000, 136.75, 135.98, 136.7],\n  [1487721600000, 137.12, 136.11, 137.11],\n  [1487808000000, 137.48, 136.3, 136.53],\n  [1487894400000, 136.66, 135.28, 136.66],\n  [1488153600000, 137.44, 136.28, 136.93],\n  [1488240000000, 137.44, 136.7, 136.99],\n];\n\nvar array2 = [\n  [1483401600000, 115.8, 116.33, 114.76, 116.15],\n  [1483488000000, 115.85, 116.51, 115.75, 116.02],\n  [1483574400000, 115.92, 116.86, 115.81, 116.61],\n  [1483660800000, 116.78, 118.16, 116.47, 117.91],\n  [1483920000000, 117.95, 119.43, 117.94, 118.99],\n  [1484006400000, 118.77, 119.38, 118.3, 119.11],\n  [1484092800000, 118.74, 119.93, 118.6, 119.75],\n  [1484179200000, 118.9, 119.3, 118.21, 119.25],\n  [1484265600000, 119.11, 119.62, 118.81, 119.04],\n  [1484611200000, 118.34, 120.24, 118.22, 120.0],\n  [1484697600000, 120.0, 120.5, 119.71, 119.99],\n  [1484784000000, 119.4, 120.09, 119.37, 119.78],\n  [1484870400000, 120.45, 120.45, 119.73, 120.0],\n  [1485129600000, 120.0, 120.81, 119.77, 120.08],\n  [1485216000000, 119.55, 120.1, 119.5, 119.97],\n  [1485302400000, 120.42, 122.1, 120.28, 121.88],\n  [1485388800000, 121.67, 122.44, 121.6, 121.94],\n  [1485475200000, 122.14, 122.35, 121.6, 121.95],\n  [1485734400000, 120.93, 121.63, 120.66, 121.63],\n  [1485820800000, 121.15, 121.39, 120.62, 121.35],\n  [1485993600000, 127.98, 129.39, 127.78, 128.53],\n  [1486080000000, 128.31, 129.19, 128.16, 129.08],\n  [1486339200000, 129.13, 130.5, 128.9, 130.29],\n  [1486425600000, 130.54, 132.09, 130.45, 131.53],\n  [1486512000000, 131.35, 132.22, 131.22, 132.04],\n  [1486598400000, 131.65, 132.44, 131.12, 132.42],\n  [1486684800000, 132.46, 132.94, 132.05, 132.12],\n  [1486944000000, 133.08, 133.82, 132.75, 133.29],\n  [1487030400000, 133.47, 135.09, 133.25, 135.02],\n  [1487116800000, 135.52, 136.27, 134.62, 135.51],\n  [1487203200000, 135.67, 135.9, 134.84, 135.34],\n  [1487289600000, 135.1, 135.83, 135.1, 135.72],\n  [1487635200000, 136.23, 136.75, 135.98, 136.7],\n  [1487721600000, 136.43, 137.12, 136.11, 137.11],\n  [1487808000000, 137.38, 137.48, 136.3, 136.53],\n  [1487894400000, 135.91, 136.66, 135.28, 136.66],\n  [1488153600000, 137.14, 137.44, 136.28, 136.93],\n  [1488240000000, 137.08, 137.44, 136.7, 136.99],\n  [1488440000000, 137.08, 137.44, 136.7, 136.99]\n];\n\nmsg.payload = global_realtime;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 560,
        "wires": [
            [
                "10a0745d3c51f7ac",
                "52e2a7a7fc70a29f"
            ]
        ]
    },
    {
        "id": "191b9e8b794756be",
        "type": "inject",
        "z": "c5f49755157c982b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 40,
        "wires": [
            [
                "8eca3232ecc32cd1"
            ]
        ]
    },
    {
        "id": "8eca3232ecc32cd1",
        "type": "change",
        "z": "c5f49755157c982b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "realtime",
                "pt": "global",
                "to": "{\"array1\":[],\"array2\":[]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "0d11eea0affc8bba",
        "type": "inject",
        "z": "c5f49755157c982b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 100,
        "wires": [
            [
                "cad14634947d2846"
            ]
        ]
    },
    {
        "id": "cad14634947d2846",
        "type": "function",
        "z": "c5f49755157c982b",
        "name": "function 113",
        "func": "var global_realtime = global.get(\"realtime\");\n\nfunction getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nglobal_realtime.array1.push([msg.payload, getRandomArbitrary(0,10) ])\nglobal_realtime.array2.push([msg.payload, getRandomArbitrary(0,10) ])\nmsg.payload = global_realtime.array1;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 100,
        "wires": [
            [
                "9f2af581bbbc17d9"
            ]
        ]
    },
    {
        "id": "9f2af581bbbc17d9",
        "type": "debug",
        "z": "c5f49755157c982b",
        "name": "debug 126",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 100,
        "wires": []
    },
    {
        "id": "85ca24b28653200b",
        "type": "http in",
        "z": "c5f49755157c982b",
        "name": "",
        "url": "/cumulatedfrequency",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 350,
        "y": 360,
        "wires": [
            [
                "9f14006a13ff7372"
            ]
        ]
    },
    {
        "id": "c1debdc4b7abf18a",
        "type": "http response",
        "z": "c5f49755157c982b",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 820,
        "y": 360,
        "wires": []
    },
    {
        "id": "9f14006a13ff7372",
        "type": "function",
        "z": "c5f49755157c982b",
        "name": "function 114",
        "func": "const arraySize = 12;\nconst minValue = 0;\nconst maxValue = 100;\nconst randomArray = [];\n\nfor (let i = 0; i < arraySize; i++) {\n  const randomNumber = Math.floor(Math.random() * (maxValue - minValue + 1)) + minValue;\n  randomArray.push(randomNumber);\n}\n\nmsg.payload = {\n    \"array1\": randomArray,\n    \"array2\": randomArray\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 360,
        "wires": [
            [
                "c1debdc4b7abf18a"
            ]
        ]
    },
    {
        "id": "a28ada152038f4e5",
        "type": "http in",
        "z": "c5f49755157c982b",
        "name": "",
        "url": "/bell1",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 340,
        "y": 420,
        "wires": [
            [
                "1983b284b054faf2"
            ]
        ]
    },
    {
        "id": "a79cd01d9d68535a",
        "type": "http response",
        "z": "c5f49755157c982b",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 820,
        "y": 420,
        "wires": []
    },
    {
        "id": "1983b284b054faf2",
        "type": "function",
        "z": "c5f49755157c982b",
        "name": "function 115",
        "func": "const arraySize = 13;\nconst minValue = 0;\nconst maxValue = 100;\nconst randomArray = [];\n\nfor (let i = 0; i < arraySize; i++) {\n  const randomNumber = Math.floor(Math.random() * (maxValue - minValue + 1)) + minValue;\n  randomArray.push(randomNumber);\n}\n\nmsg.payload = randomArray;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 420,
        "wires": [
            [
                "a79cd01d9d68535a",
                "e7e5277012c18dce"
            ]
        ]
    },
    {
        "id": "e7e5277012c18dce",
        "type": "debug",
        "z": "c5f49755157c982b",
        "name": "debug 127",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 480,
        "wires": []
    },
    {
        "id": "dc565b6356c98478",
        "type": "http in",
        "z": "c5f49755157c982b",
        "name": "",
        "url": "/bell2",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 660,
        "wires": [
            [
                "b0ef03f2b450268c"
            ]
        ]
    },
    {
        "id": "f7652f35b4473954",
        "type": "http response",
        "z": "c5f49755157c982b",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 760,
        "y": 660,
        "wires": []
    },
    {
        "id": "b0ef03f2b450268c",
        "type": "function",
        "z": "c5f49755157c982b",
        "name": "function 116",
        "func": "const arraySize = 13;\nconst minValue = 0;\nconst maxValue = 100;\nconst randomArray = [];\n\nfor (let i = 0; i < arraySize; i++) {\n  const randomNumber = Math.floor(Math.random() * (maxValue - minValue + 1)) + minValue;\n  randomArray.push(randomNumber);\n}\n\nmsg.payload = randomArray;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 660,
        "wires": [
            [
                "f7652f35b4473954",
                "ed71202d328271e7"
            ]
        ]
    },
    {
        "id": "ed71202d328271e7",
        "type": "debug",
        "z": "c5f49755157c982b",
        "name": "debug 128",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 720,
        "wires": []
    },
    {
        "id": "0af4d8b74d998353",
        "type": "http in",
        "z": "c5f49755157c982b",
        "name": "",
        "url": "/barchart1",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 920,
        "wires": [
            [
                "6e50cd8318a6b142"
            ]
        ]
    },
    {
        "id": "011634ea2a0bf413",
        "type": "http response",
        "z": "c5f49755157c982b",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 780,
        "y": 920,
        "wires": []
    },
    {
        "id": "6e50cd8318a6b142",
        "type": "function",
        "z": "c5f49755157c982b",
        "name": "function 117",
        "func": "const arraySize = 12;\nconst minValue = 0;\nconst maxValue = 100;\nconst randomArray = [];\n\nfor (let i = 0; i < arraySize; i++) {\n  const randomNumber = Math.floor(Math.random() * (maxValue - minValue + 1)) + minValue;\n  randomArray.push(randomNumber);\n}\n\nmsg.payload = randomArray;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 920,
        "wires": [
            [
                "011634ea2a0bf413"
            ]
        ]
    },
    {
        "id": "61f6c539c19f5d0e",
        "type": "http in",
        "z": "c5f49755157c982b",
        "name": "",
        "url": "/barchart2",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 1000,
        "wires": [
            [
                "30e1655f0ab566de"
            ]
        ]
    },
    {
        "id": "9288aa80b890aed3",
        "type": "http response",
        "z": "c5f49755157c982b",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 780,
        "y": 1000,
        "wires": []
    },
    {
        "id": "30e1655f0ab566de",
        "type": "function",
        "z": "c5f49755157c982b",
        "name": "function 118",
        "func": "const arraySize = 12;\nconst minValue = 0;\nconst maxValue = 100;\nconst randomArray = [];\n\nfor (let i = 0; i < arraySize; i++) {\n  const randomNumber = Math.floor(Math.random() * (maxValue - minValue + 1)) + minValue;\n  randomArray.push(randomNumber);\n}\n\nmsg.payload = randomArray;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1000,
        "wires": [
            [
                "9288aa80b890aed3"
            ]
        ]
    },
    {
        "id": "52e2a7a7fc70a29f",
        "type": "debug",
        "z": "c5f49755157c982b",
        "name": "debug 129",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 600,
        "wires": []
    },
    {
        "id": "970ec77e2c986956",
        "type": "http in",
        "z": "c5f49755157c982b",
        "name": "",
        "url": "/status-draw",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 260,
        "y": 1180,
        "wires": [
            [
                "058caac31428328b"
            ]
        ]
    },
    {
        "id": "c1cd2fc96f44488c",
        "type": "http response",
        "z": "c5f49755157c982b",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 760,
        "y": 1180,
        "wires": []
    },
    {
        "id": "058caac31428328b",
        "type": "function",
        "z": "c5f49755157c982b",
        "name": "function 119",
        "func": "const arraySize = 12;\nconst minValue = 0;\nconst maxValue = 100;\n\nfunction randomNumber(minValue, maxValue){\nvar number = Math.floor(Math.random() * (maxValue - minValue + 1)) + minValue;\nreturn number;\n}\n\nmsg.payload = {\n  \"rm9000\":{\"x_axis\":randomNumber(0,75), \"y_axis\":randomNumber(0,38)},\n  \"carga_grua\":{\"carga1\":randomNumber(0,10), \"carga2\":randomNumber(0,10)}\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1180,
        "wires": [
            [
                "c1cd2fc96f44488c"
            ]
        ]
    },
    {
        "id": "2e2c765f3d8597a1",
        "type": "http in",
        "z": "c5f49755157c982b",
        "name": "",
        "url": "/hourmeter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 260,
        "y": 1380,
        "wires": [
            [
                "d700a276b48f18c0"
            ]
        ]
    },
    {
        "id": "5b469b2aa09d859d",
        "type": "http response",
        "z": "c5f49755157c982b",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 760,
        "y": 1380,
        "wires": []
    },
    {
        "id": "d700a276b48f18c0",
        "type": "function",
        "z": "c5f49755157c982b",
        "name": "function 120",
        "func": "var hourmeter = global.get(\"hourmeter\");\n\n\nmsg.payload = hourmeter;\n\nhourmeter.minutes += 1;\nif (hourmeter.minutes >=60){\n  hourmeter.minutes = 0;\n  hourmeter.hours += 1;\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1380,
        "wires": [
            [
                "5b469b2aa09d859d"
            ]
        ]
    },
    {
        "id": "041ce0db5b2e3c72",
        "type": "http in",
        "z": "c5f49755157c982b",
        "name": "",
        "url": "/status-desc",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 260,
        "y": 1120,
        "wires": [
            [
                "82f10b985310ab3e"
            ]
        ]
    },
    {
        "id": "eeb83cc0b1cd66df",
        "type": "http response",
        "z": "c5f49755157c982b",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 760,
        "y": 1120,
        "wires": []
    },
    {
        "id": "82f10b985310ab3e",
        "type": "function",
        "z": "c5f49755157c982b",
        "name": "function 121",
        "func": "const arraySize = 12;\nconst minValue = 0;\nconst maxValue = 100;\n\nfunction randomNumber(minValue, maxValue){\nvar number = Math.floor(Math.random() * (maxValue - minValue + 1)) + minValue;\nreturn number;\n}\n\nmsg.payload = {\n  \"status\": randomNumber(0,1), \n};\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1120,
        "wires": [
            [
                "eeb83cc0b1cd66df"
            ]
        ]
    },
    {
        "id": "a622c1614f695ff8",
        "type": "inject",
        "z": "c5f49755157c982b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 350,
        "y": 1280,
        "wires": [
            [
                "06b1fa8c59b42a6c"
            ]
        ]
    },
    {
        "id": "06b1fa8c59b42a6c",
        "type": "change",
        "z": "c5f49755157c982b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hourmeter",
                "pt": "global",
                "to": "{\"minutes\":0,\"hours\":0}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "9706fe8328a34e1b",
        "type": "http in",
        "z": "c5f49755157c982b",
        "name": "",
        "url": "/heat1",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 300,
        "y": 1660,
        "wires": [
            [
                "74c310ce584f3f30"
            ]
        ]
    },
    {
        "id": "35a3c4df7f977100",
        "type": "http response",
        "z": "c5f49755157c982b",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 800,
        "y": 1660,
        "wires": []
    },
    {
        "id": "74c310ce584f3f30",
        "type": "change",
        "z": "c5f49755157c982b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "heat1",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 1700,
        "wires": [
            [
                "35a3c4df7f977100"
            ]
        ]
    },
    {
        "id": "1417a74412f6e59f",
        "type": "inject",
        "z": "c5f49755157c982b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 1540,
        "wires": [
            [
                "886e471d5f80c0cd"
            ]
        ]
    },
    {
        "id": "886e471d5f80c0cd",
        "type": "change",
        "z": "c5f49755157c982b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "heat1",
                "pt": "global",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "c4968b80a9581e4b",
        "type": "inject",
        "z": "c5f49755157c982b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 1880,
        "wires": [
            [
                "fa4382907d6c7fb4"
            ]
        ]
    },
    {
        "id": "fa4382907d6c7fb4",
        "type": "function",
        "z": "c5f49755157c982b",
        "name": "function 104",
        "func": "var heat_array = global.get(\"heat1\")\n\nfunction getRandomNumber(min=0, max=500) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst new_value = { \"g\": getRandomNumber(), \"l\": getRandomNumber(), \"tmp\":getRandomNumber(0,300)};\n\nheat_array.push(new_value);\n\nglobal.set(\"heat1\", heat_array);\n\nmsg.payload = heat_array;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1880,
        "wires": [
            [
                "a972cff90ed03aea"
            ]
        ]
    },
    {
        "id": "a972cff90ed03aea",
        "type": "debug",
        "z": "c5f49755157c982b",
        "name": "debug 128",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 1880,
        "wires": []
    },
    {
        "id": "4945fb5bd1d9f9f9",
        "type": "debug",
        "z": "b85ff4939ed7cb27",
        "name": "debug 110",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 400,
        "wires": []
    },
    {
        "id": "9fecf59483e9ca3d",
        "type": "switch",
        "z": "b85ff4939ed7cb27",
        "name": "VTG (velocidad km/h)",
        "property": "payload.sentence",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "VTG",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 840,
        "y": 620,
        "wires": [
            [
                "52fab923a0073861"
            ]
        ]
    },
    {
        "id": "400c7dcbe7c75298",
        "type": "switch",
        "z": "b85ff4939ed7cb27",
        "name": "GCA (lat, lon, alt)",
        "property": "payload.sentence",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "GGA",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 830,
        "y": 520,
        "wires": [
            [
                "d29af6263cca380a",
                "ea91b9c6d7c78f94",
                "973a6d986f8b6577",
                "877a1e3b457abedc",
                "42a386f4357843e8"
            ]
        ]
    },
    {
        "id": "d29af6263cca380a",
        "type": "function",
        "z": "b85ff4939ed7cb27",
        "name": "function 92",
        "func": "msg.payload = { \"name\": \"Vehículo\", \"lat\": msg.payload.lat, \"lon\": msg.payload.lon }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "52fab923a0073861",
        "type": "function",
        "z": "b85ff4939ed7cb27",
        "name": "function 93",
        "func": "msg.payload = msg.payload.speedKmph\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 620,
        "wires": [
            [
                "4779801259b2aa41",
                "db28b6288dad28d3"
            ]
        ]
    },
    {
        "id": "73f0660f889471d7",
        "type": "comment",
        "z": "b85ff4939ed7cb27",
        "name": "Getting GPS data",
        "info": "",
        "x": 340,
        "y": 300,
        "wires": []
    },
    {
        "id": "973a6d986f8b6577",
        "type": "function",
        "z": "b85ff4939ed7cb27",
        "name": "longitud",
        "func": "msg.payload = msg.payload.lon;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 320,
        "wires": [
            [
                "d05253ac8384f064",
                "381fbb3d7343e915"
            ]
        ]
    },
    {
        "id": "ea91b9c6d7c78f94",
        "type": "function",
        "z": "b85ff4939ed7cb27",
        "name": "latitud",
        "func": "msg.payload = msg.payload.lat;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 260,
        "wires": [
            [
                "d91f4c273d1a82a4",
                "f3c34a4288d41215"
            ]
        ]
    },
    {
        "id": "877a1e3b457abedc",
        "type": "function",
        "z": "b85ff4939ed7cb27",
        "name": "altitud",
        "func": "msg.payload = msg.payload.alt;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 380,
        "wires": [
            [
                "afadbedf14a6645f"
            ]
        ]
    },
    {
        "id": "bf761df783735138",
        "type": "inject",
        "z": "b85ff4939ed7cb27",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 870,
        "y": 80,
        "wires": [
            [
                "e43a1ab0a4ae0881"
            ]
        ]
    },
    {
        "id": "e43a1ab0a4ae0881",
        "type": "function",
        "z": "b85ff4939ed7cb27",
        "name": "Global",
        "func": "\nvar data_json = { \"general_flag\": 0 };\n\nglobal.set('data_json', data_json);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "4779801259b2aa41",
        "type": "debug",
        "z": "b85ff4939ed7cb27",
        "name": "debug 111",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1310,
        "y": 720,
        "wires": []
    },
    {
        "id": "03eb9a2a8c6bec2d",
        "type": "debug",
        "z": "b85ff4939ed7cb27",
        "name": "debug 112",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 540,
        "wires": []
    },
    {
        "id": "0c20eb2c74f3a5aa",
        "type": "comment",
        "z": "b85ff4939ed7cb27",
        "name": "SENDING TO CLOUD",
        "info": "",
        "x": 1320,
        "y": 40,
        "wires": []
    },
    {
        "id": "1b259dee666d07b4",
        "type": "debug",
        "z": "b85ff4939ed7cb27",
        "name": "debug 121",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 490,
        "y": 400,
        "wires": []
    },
    {
        "id": "f3c34a4288d41215",
        "type": "change",
        "z": "b85ff4939ed7cb27",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gps.latitude",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "381fbb3d7343e915",
        "type": "change",
        "z": "b85ff4939ed7cb27",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gps.longitude",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "afadbedf14a6645f",
        "type": "change",
        "z": "b85ff4939ed7cb27",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gps.altitude",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "d91f4c273d1a82a4",
        "type": "debug",
        "z": "b85ff4939ed7cb27",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1210,
        "y": 140,
        "wires": []
    },
    {
        "id": "db28b6288dad28d3",
        "type": "change",
        "z": "b85ff4939ed7cb27",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gps.speed",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "42a386f4357843e8",
        "type": "function",
        "z": "b85ff4939ed7cb27",
        "name": "numero de satelites",
        "func": "msg.payload = msg.payload.numSat;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 440,
        "wires": [
            [
                "03eb9a2a8c6bec2d",
                "116d7cfbe59922a2",
                "5843998cea7de834"
            ]
        ]
    },
    {
        "id": "116d7cfbe59922a2",
        "type": "change",
        "z": "b85ff4939ed7cb27",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gps.num_sat",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "5843998cea7de834",
        "type": "change",
        "z": "b85ff4939ed7cb27",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.num_gps_sat",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1530,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "d05253ac8384f064",
        "type": "debug",
        "z": "b85ff4939ed7cb27",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1210,
        "y": 360,
        "wires": []
    },
    {
        "id": "6312b45669d02760",
        "type": "nmea",
        "z": "b85ff4939ed7cb27",
        "name": "",
        "property": "payload",
        "outputProperty": "payload",
        "x": 570,
        "y": 540,
        "wires": [
            [
                "9fecf59483e9ca3d",
                "400c7dcbe7c75298",
                "4945fb5bd1d9f9f9"
            ]
        ]
    },
    {
        "id": "10f7189304e01696",
        "type": "serial in",
        "z": "b85ff4939ed7cb27",
        "name": "",
        "serial": "eadfda525a15b034",
        "x": 290,
        "y": 440,
        "wires": [
            [
                "1b259dee666d07b4",
                "6312b45669d02760"
            ]
        ]
    },
    {
        "id": "735eada7813d22ff",
        "type": "change",
        "z": "0e59410b16d8c0d1",
        "g": "391293c6a3ed1d34",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "connections.acme_server",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 140,
        "wires": [
            [
                "11ceb1f8c548271a",
                "4a8ac69b345e633c"
            ]
        ]
    },
    {
        "id": "04679722cfe5f990",
        "type": "switch",
        "z": "0e59410b16d8c0d1",
        "g": "391293c6a3ed1d34",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 180,
        "wires": [
            [
                "735eada7813d22ff"
            ],
            [
                "a3b5af3b8f4aba3a"
            ]
        ]
    },
    {
        "id": "a3b5af3b8f4aba3a",
        "type": "change",
        "z": "0e59410b16d8c0d1",
        "g": "391293c6a3ed1d34",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "connections_acme_server",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 220,
        "wires": [
            [
                "5f855c63def49250",
                "f82eba84d7d53d1b"
            ]
        ]
    },
    {
        "id": "11ceb1f8c548271a",
        "type": "debug",
        "z": "0e59410b16d8c0d1",
        "g": "391293c6a3ed1d34",
        "name": "Latencia servidor Acme",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1010,
        "y": 120,
        "wires": []
    },
    {
        "id": "5f855c63def49250",
        "type": "debug",
        "z": "0e59410b16d8c0d1",
        "g": "391293c6a3ed1d34",
        "name": "Not connected",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 240,
        "wires": []
    },
    {
        "id": "f7194e3b080e9e13",
        "type": "change",
        "z": "0e59410b16d8c0d1",
        "g": "5179124c0369cae1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "connections.vpn_server",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 400,
        "wires": [
            [
                "6f161a26d6ca704c"
            ]
        ]
    },
    {
        "id": "ad64acdcb68dea2e",
        "type": "switch",
        "z": "0e59410b16d8c0d1",
        "g": "5179124c0369cae1",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 440,
        "wires": [
            [
                "f7194e3b080e9e13"
            ],
            [
                "47c71030ed8e575c"
            ]
        ]
    },
    {
        "id": "47c71030ed8e575c",
        "type": "change",
        "z": "0e59410b16d8c0d1",
        "g": "5179124c0369cae1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "connections.vpn_server",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 480,
        "wires": [
            [
                "efe82c8833f5e7fb"
            ]
        ]
    },
    {
        "id": "6f161a26d6ca704c",
        "type": "debug",
        "z": "0e59410b16d8c0d1",
        "g": "5179124c0369cae1",
        "name": "Latencia servidor VPN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 980,
        "y": 400,
        "wires": []
    },
    {
        "id": "efe82c8833f5e7fb",
        "type": "debug",
        "z": "0e59410b16d8c0d1",
        "g": "5179124c0369cae1",
        "name": "Not connected",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 480,
        "wires": []
    },
    {
        "id": "56d496481777526f",
        "type": "change",
        "z": "0e59410b16d8c0d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "connections",
                "pt": "global",
                "to": "{\"acme_server\":false,\"vpn_server\":false}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "7b17a6971e0eeb57",
        "type": "inject",
        "z": "0e59410b16d8c0d1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 490,
        "y": 40,
        "wires": [
            [
                "56d496481777526f"
            ]
        ]
    },
    {
        "id": "01c93927a286229b",
        "type": "comment",
        "z": "0e59410b16d8c0d1",
        "g": "5179124c0369cae1",
        "name": "falta corregir la IP maestra del VPN",
        "info": "",
        "x": 220,
        "y": 500,
        "wires": []
    },
    {
        "id": "4a8ac69b345e633c",
        "type": "change",
        "z": "0e59410b16d8c0d1",
        "g": "391293c6a3ed1d34",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.ping_acme",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "f82eba84d7d53d1b",
        "type": "change",
        "z": "0e59410b16d8c0d1",
        "g": "391293c6a3ed1d34",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.ping_acme",
                "pt": "global",
                "to": "not connected",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "dde1817b366efa9f",
        "type": "inject",
        "z": "0e59410b16d8c0d1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 620,
        "wires": [
            [
                "452d70c849410f5c",
                "cb41ad20635ba16e",
                "b7bf77a7e6f53a93",
                "767a797441b982f9",
                "138b0248078f6d94",
                "27e9687971fb5eb9",
                "c15fbdf310b434b6"
            ]
        ]
    },
    {
        "id": "452d70c849410f5c",
        "type": "exec",
        "z": "0e59410b16d8c0d1",
        "command": "echo -n $(hostname -I | awk '{print $1}')",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 450,
        "y": 620,
        "wires": [
            [
                "1839d4303baaeae4"
            ],
            [],
            []
        ]
    },
    {
        "id": "1839d4303baaeae4",
        "type": "change",
        "z": "0e59410b16d8c0d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.eth_ip",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "cb41ad20635ba16e",
        "type": "exec",
        "z": "0e59410b16d8c0d1",
        "command": "echo -n $(df -h --total | grep /dev/root | awk '{print$2}')",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 480,
        "y": 720,
        "wires": [
            [
                "2159029cf738bf4d"
            ],
            [],
            []
        ]
    },
    {
        "id": "b7bf77a7e6f53a93",
        "type": "exec",
        "z": "0e59410b16d8c0d1",
        "command": "echo -n $(df -h --total | grep /dev/root | awk '{print$3}')",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 480,
        "y": 780,
        "wires": [
            [
                "480b825bed3d2f40"
            ],
            [],
            []
        ]
    },
    {
        "id": "767a797441b982f9",
        "type": "exec",
        "z": "0e59410b16d8c0d1",
        "command": "echo -n $(df -h --total | grep /dev/root | awk '{print$4}')",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 480,
        "y": 840,
        "wires": [
            [
                "07aa7fca26a9fece"
            ],
            [],
            []
        ]
    },
    {
        "id": "2159029cf738bf4d",
        "type": "change",
        "z": "0e59410b16d8c0d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.total_space",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "480b825bed3d2f40",
        "type": "change",
        "z": "0e59410b16d8c0d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.used_space",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "07aa7fca26a9fece",
        "type": "change",
        "z": "0e59410b16d8c0d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.free_space",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "138b0248078f6d94",
        "type": "exec",
        "z": "0e59410b16d8c0d1",
        "command": "echo -n $(df -h --total | grep /dev/root | awk '{print$5}')",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 480,
        "y": 900,
        "wires": [
            [
                "f1a58a64ba34b4c5"
            ],
            [],
            []
        ]
    },
    {
        "id": "f1a58a64ba34b4c5",
        "type": "change",
        "z": "0e59410b16d8c0d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.used_space_percent",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "27e9687971fb5eb9",
        "type": "exec",
        "z": "0e59410b16d8c0d1",
        "command": "echo -n $(free | grep Mem: | awk '{print$3/$2*100}')",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 470,
        "y": 1020,
        "wires": [
            [
                "35f490b71ba82172"
            ],
            [],
            []
        ]
    },
    {
        "id": "35f490b71ba82172",
        "type": "change",
        "z": "0e59410b16d8c0d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.memory_usage_percent",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "c15fbdf310b434b6",
        "type": "exec",
        "z": "0e59410b16d8c0d1",
        "command": "echo -n $(vcgencmd measure_temp)",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 430,
        "y": 1100,
        "wires": [
            [
                "90bbb96c4cd637a3"
            ],
            [],
            []
        ]
    },
    {
        "id": "8b3591dbea7dbbb6",
        "type": "change",
        "z": "0e59410b16d8c0d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.temperature",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "90bbb96c4cd637a3",
        "type": "change",
        "z": "0e59410b16d8c0d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$substring(payload,5,4)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 1100,
        "wires": [
            [
                "8b3591dbea7dbbb6"
            ]
        ]
    },
    {
        "id": "f0af807d03240c15",
        "type": "exec",
        "z": "0e59410b16d8c0d1",
        "d": true,
        "command": "speedtest-cli --simple --secure",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 410,
        "y": 1200,
        "wires": [
            [
                "47f3d1ec56995593"
            ],
            [],
            []
        ]
    },
    {
        "id": "47f3d1ec56995593",
        "type": "split",
        "z": "0e59410b16d8c0d1",
        "d": true,
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": true,
        "addname": "",
        "x": 690,
        "y": 1200,
        "wires": [
            [
                "44cea3d97e13b8d8",
                "fab8f85a2f6e1af1"
            ]
        ]
    },
    {
        "id": "44cea3d97e13b8d8",
        "type": "debug",
        "z": "0e59410b16d8c0d1",
        "d": true,
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 1280,
        "wires": []
    },
    {
        "id": "fab8f85a2f6e1af1",
        "type": "switch",
        "z": "0e59410b16d8c0d1",
        "d": true,
        "name": "",
        "property": "parts.index",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 890,
        "y": 1200,
        "wires": [
            [
                "20d275b397f221ff"
            ],
            [
                "8f4f8d3493e4dfc3"
            ],
            [
                "142374017ea0eccc"
            ]
        ]
    },
    {
        "id": "20d275b397f221ff",
        "type": "change",
        "z": "0e59410b16d8c0d1",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.ping_internet",
                "pt": "global",
                "to": "$substring(payload, 6, 9)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "8f4f8d3493e4dfc3",
        "type": "change",
        "z": "0e59410b16d8c0d1",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.download",
                "pt": "global",
                "to": "$substring(payload, 10, 12)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "142374017ea0eccc",
        "type": "change",
        "z": "0e59410b16d8c0d1",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.gateway_info.upload",
                "pt": "global",
                "to": "$substring(payload, 10, 12)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "421ae02426fccc3c",
        "type": "inject",
        "z": "0e59410b16d8c0d1",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1200,
        "wires": [
            [
                "f0af807d03240c15"
            ]
        ]
    },
    {
        "id": "84ebe79cf6b36993",
        "type": "comment",
        "z": "0e59410b16d8c0d1",
        "d": true,
        "name": "Not recommended, affects server connection",
        "info": "",
        "x": 430,
        "y": 1260,
        "wires": []
    },
    {
        "id": "01351c47f8e420f9",
        "type": "ping",
        "z": "0e59410b16d8c0d1",
        "g": "391293c6a3ed1d34",
        "protocol": "Automatic",
        "mode": "timed",
        "name": "",
        "host": "161.132.39.167",
        "timer": "5",
        "inputs": 0,
        "x": 180,
        "y": 180,
        "wires": [
            [
                "04679722cfe5f990"
            ]
        ]
    },
    {
        "id": "c6fe45afc9c6eb9f",
        "type": "ping",
        "z": "0e59410b16d8c0d1",
        "g": "5179124c0369cae1",
        "protocol": "Automatic",
        "mode": "timed",
        "name": "",
        "host": "192.168.192.79",
        "timer": "5",
        "inputs": 0,
        "x": 160,
        "y": 440,
        "wires": [
            [
                "ad64acdcb68dea2e"
            ]
        ]
    },
    {
        "id": "8d590f6524b37452",
        "type": "switch",
        "z": "f24bebacdb4e3198",
        "name": "",
        "property": "payload.canid",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "100",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "102",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "104",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "106",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 530,
        "y": 300,
        "wires": [
            [
                "757d891ad7dd67f5"
            ],
            [
                "4e56bd5cb1f06dd7"
            ],
            [
                "4413e58563e1530c"
            ],
            [
                "28413dfab958e587"
            ]
        ]
    },
    {
        "id": "f0bd8ad06372a9b5",
        "type": "inject",
        "z": "f24bebacdb4e3198",
        "name": "reset encoder 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 540,
        "wires": [
            [
                "b2e8f90a7a2f2027",
                "fd95575d8b2c851e",
                "abba56ec1ad967a1"
            ]
        ]
    },
    {
        "id": "4e56bd5cb1f06dd7",
        "type": "function",
        "z": "f24bebacdb4e3198",
        "name": "encoder 2",
        "func": "var data = msg.payload.data;\n\nlet out = data[6]*1000000 + data[4]*10000 + data[2]*100 + data[0];\n\nmsg.fdata = Math.round(out / 1000);\nmsg.payload = out;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 220,
        "wires": [
            [
                "010a90cd4a2dc78b",
                "80381cdf57f71d6b",
                "4abc6a941da5215e"
            ]
        ]
    },
    {
        "id": "010a90cd4a2dc78b",
        "type": "debug",
        "z": "f24bebacdb4e3198",
        "name": "debug 132",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "fdata",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 220,
        "wires": []
    },
    {
        "id": "4abc6a941da5215e",
        "type": "debug",
        "z": "f24bebacdb4e3198",
        "name": "debug 137",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 140,
        "wires": []
    },
    {
        "id": "757d891ad7dd67f5",
        "type": "function",
        "z": "f24bebacdb4e3198",
        "name": "encoder 1",
        "func": "var data = msg.payload.data;\n\nlet out = data[6]*1000000 + data[4]*10000 + data[2]*100 + data[0];\n\nmsg.fdata = Math.round(out/1000);\n\nmsg.payload = out;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 160,
        "wires": [
            [
                "b38509e2b064ae94",
                "c2745923679ccd3e"
            ]
        ]
    },
    {
        "id": "b38509e2b064ae94",
        "type": "debug",
        "z": "f24bebacdb4e3198",
        "name": "debug 138",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "fdata",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 160,
        "wires": []
    },
    {
        "id": "aa47093f4cd9041f",
        "type": "debug",
        "z": "f24bebacdb4e3198",
        "name": "debug 139",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 100,
        "wires": []
    },
    {
        "id": "953b644dc46f2921",
        "type": "change",
        "z": "f24bebacdb4e3198",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"canid\":2005,\"dlc\":8,\"data\":[0,0,1,0,0,0,0,0]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 540,
        "wires": [
            [
                "414ae3071624c335"
            ]
        ]
    },
    {
        "id": "4d312273c298e445",
        "type": "change",
        "z": "f24bebacdb4e3198",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"canid\":2005,\"dlc\":8,\"data\":[0,0,0,0,1,0,0,0]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 600,
        "wires": [
            [
                "414ae3071624c335"
            ]
        ]
    },
    {
        "id": "b13ecbe21ab5f778",
        "type": "inject",
        "z": "f24bebacdb4e3198",
        "name": "reset encoder 1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 480,
        "wires": [
            [
                "a8ebf0ce8732517a",
                "fd95575d8b2c851e",
                "abba56ec1ad967a1"
            ]
        ]
    },
    {
        "id": "252dd40ecbb0e825",
        "type": "change",
        "z": "f24bebacdb4e3198",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"canid\":2005,\"dlc\":8,\"data\":[1,0,0,0,0,0,0,0]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 480,
        "wires": [
            [
                "414ae3071624c335"
            ]
        ]
    },
    {
        "id": "3a8a6d7c2ba78cec",
        "type": "change",
        "z": "f24bebacdb4e3198",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"canid\":2005,\"dlc\":8,\"data\":[0,0,0,0,0,0,1,0]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 660,
        "wires": [
            [
                "414ae3071624c335"
            ]
        ]
    },
    {
        "id": "f8ee31c026b5063f",
        "type": "inject",
        "z": "f24bebacdb4e3198",
        "name": "reset encoder 3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 600,
        "wires": [
            [
                "a54f007659012df7",
                "fd95575d8b2c851e",
                "abba56ec1ad967a1"
            ]
        ]
    },
    {
        "id": "7da1e972aa4be85d",
        "type": "inject",
        "z": "f24bebacdb4e3198",
        "name": "reset encoder 4",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 660,
        "wires": [
            [
                "b8a3e9c2ee37b404",
                "fd95575d8b2c851e",
                "abba56ec1ad967a1"
            ]
        ]
    },
    {
        "id": "28413dfab958e587",
        "type": "function",
        "z": "f24bebacdb4e3198",
        "name": "encoder 4",
        "func": "var data = msg.payload.data;\n\nlet out = data[6]*1000000 + data[4]*10000 + data[2]*100 + data[0];\n\nmsg.fdata = Math.round(out / 1000);\n\nmsg.payload = out;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 360,
        "wires": [
            [
                "85cd1e26a5840d27",
                "c0df164212d36d3a",
                "b24b125b3391287c"
            ]
        ]
    },
    {
        "id": "4413e58563e1530c",
        "type": "function",
        "z": "f24bebacdb4e3198",
        "name": "encoder 3",
        "func": "var data = msg.payload.data;\n\nlet out = data[6]*1000000 + data[4]*10000 + data[2]*100 + data[0];\n\nmsg.fdata = Math.round(out/1000);\n\nmsg.payload = out;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 300,
        "wires": [
            [
                "ae111ec0a8840cd3",
                "b2a057664a47de22",
                "a25d095b0dc5e10c"
            ]
        ]
    },
    {
        "id": "ae111ec0a8840cd3",
        "type": "debug",
        "z": "f24bebacdb4e3198",
        "name": "debug 140",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "fdata",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 300,
        "wires": []
    },
    {
        "id": "85cd1e26a5840d27",
        "type": "debug",
        "z": "f24bebacdb4e3198",
        "name": "debug 141",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "fdata",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 360,
        "wires": []
    },
    {
        "id": "a8ebf0ce8732517a",
        "type": "delay",
        "z": "f24bebacdb4e3198",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 600,
        "y": 480,
        "wires": [
            [
                "252dd40ecbb0e825"
            ]
        ]
    },
    {
        "id": "b2e8f90a7a2f2027",
        "type": "delay",
        "z": "f24bebacdb4e3198",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 600,
        "y": 540,
        "wires": [
            [
                "953b644dc46f2921"
            ]
        ]
    },
    {
        "id": "a54f007659012df7",
        "type": "delay",
        "z": "f24bebacdb4e3198",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 600,
        "y": 600,
        "wires": [
            [
                "4d312273c298e445"
            ]
        ]
    },
    {
        "id": "b8a3e9c2ee37b404",
        "type": "delay",
        "z": "f24bebacdb4e3198",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 600,
        "y": 660,
        "wires": [
            [
                "3a8a6d7c2ba78cec"
            ]
        ]
    },
    {
        "id": "fd95575d8b2c851e",
        "type": "delay",
        "z": "f24bebacdb4e3198",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 580,
        "y": 860,
        "wires": [
            [
                "1ae0a5266356db38"
            ]
        ]
    },
    {
        "id": "1ae0a5266356db38",
        "type": "change",
        "z": "f24bebacdb4e3198",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"canid\":2005,\"dlc\":8,\"data\":[0,0,0,0,0,0,0,0]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 860,
        "wires": [
            [
                "414ae3071624c335"
            ]
        ]
    },
    {
        "id": "9e913604557e1433",
        "type": "catch",
        "z": "f24bebacdb4e3198",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 520,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "7939d68622a970d1",
        "type": "change",
        "z": "f24bebacdb4e3198",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.rm9000.x_axis",
                "pt": "global",
                "to": "fdata",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "46d80b4433962232",
        "type": "change",
        "z": "f24bebacdb4e3198",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.rm9000.y_axis",
                "pt": "global",
                "to": "fdata",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "b2a057664a47de22",
        "type": "change",
        "z": "f24bebacdb4e3198",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.rm9000.z1_axis",
                "pt": "global",
                "to": "fdata",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "c0df164212d36d3a",
        "type": "change",
        "z": "f24bebacdb4e3198",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.rm9000.z2_axis",
                "pt": "global",
                "to": "fdata",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "27549fae4fa58913",
        "type": "socketcan-out",
        "z": "f24bebacdb4e3198",
        "name": "socketcan-out",
        "config": "d7031f3f43f31a77",
        "x": 190,
        "y": 300,
        "wires": [
            [
                "aa47093f4cd9041f",
                "8d590f6524b37452"
            ]
        ]
    },
    {
        "id": "f3bb113676d43533",
        "type": "socketcan-out",
        "z": "f24bebacdb4e3198",
        "name": "socketcan-out",
        "config": "9d8fe396d6dcfcdd",
        "x": 1110,
        "y": 580,
        "wires": [
            [
                "4933be1217db6718"
            ]
        ]
    },
    {
        "id": "4933be1217db6718",
        "type": "switch",
        "z": "f24bebacdb4e3198",
        "name": "",
        "property": "payload.canid",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "391",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "647",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "903",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1799",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1290,
        "y": 580,
        "wires": [
            [
                "1b95a422163d212e",
                "57a90ac1cce01c30"
            ],
            [
                "11df43a0ed4a4619",
                "763cb188ae368a92"
            ],
            [
                "dc6f647d92c6e35b",
                "3d558644b4a48809"
            ],
            []
        ]
    },
    {
        "id": "11df43a0ed4a4619",
        "type": "function",
        "z": "f24bebacdb4e3198",
        "name": "carga 287",
        "func": "var data = msg.payload.data;\n\nlet out = data[4]<<8 + data[3];\n\nmsg.payload = out\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 560,
        "wires": [
            [
                "ff7d0db7e7c88614",
                "9d536593c74672e4",
                "6c93f9cb6606d7fc"
            ]
        ]
    },
    {
        "id": "dc6f647d92c6e35b",
        "type": "function",
        "z": "f24bebacdb4e3198",
        "name": "carga 387",
        "func": "var data = msg.payload.data;\n\nlet out = data[4]*100 + data[3];\n\nmsg.payload = out\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 600,
        "wires": [
            [
                "3664e342ca4c4994",
                "b8d8e40cb87121e2",
                "2b51f72f4490dde3"
            ]
        ]
    },
    {
        "id": "ff7d0db7e7c88614",
        "type": "debug",
        "z": "f24bebacdb4e3198",
        "name": "debug 174",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 560,
        "wires": []
    },
    {
        "id": "3664e342ca4c4994",
        "type": "debug",
        "z": "f24bebacdb4e3198",
        "name": "debug 175",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1610,
        "y": 600,
        "wires": []
    },
    {
        "id": "763cb188ae368a92",
        "type": "debug",
        "z": "f24bebacdb4e3198",
        "name": "debug 176",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1490,
        "y": 440,
        "wires": []
    },
    {
        "id": "3d558644b4a48809",
        "type": "debug",
        "z": "f24bebacdb4e3198",
        "name": "debug 177",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 660,
        "wires": []
    },
    {
        "id": "427ca0a2ae34524d",
        "type": "inject",
        "z": "f24bebacdb4e3198",
        "name": "",
        "props": [
            {
                "p": "fdata",
                "v": "0",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 710,
        "y": 60,
        "wires": [
            [
                "7939d68622a970d1",
                "46d80b4433962232"
            ]
        ]
    },
    {
        "id": "9d536593c74672e4",
        "type": "change",
        "z": "f24bebacdb4e3198",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.carga_grua.carga1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "b8d8e40cb87121e2",
        "type": "change",
        "z": "f24bebacdb4e3198",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gateway_data.data.carga_grua.carga2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "1b95a422163d212e",
        "type": "debug",
        "z": "f24bebacdb4e3198",
        "name": "debug 178",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 400,
        "wires": []
    },
    {
        "id": "c2745923679ccd3e",
        "type": "ui_text",
        "z": "f24bebacdb4e3198",
        "group": "70ee9b44755ba42e",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Encoder 1 (supuesto eje x):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1080,
        "y": 120,
        "wires": []
    },
    {
        "id": "80381cdf57f71d6b",
        "type": "ui_text",
        "z": "f24bebacdb4e3198",
        "group": "70ee9b44755ba42e",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Encoder 2 (supuesto eje y):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1060,
        "y": 180,
        "wires": []
    },
    {
        "id": "a25d095b0dc5e10c",
        "type": "ui_text",
        "z": "f24bebacdb4e3198",
        "group": "70ee9b44755ba42e",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Encoder 3 (supuesto eje z1):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1040,
        "y": 280,
        "wires": []
    },
    {
        "id": "b24b125b3391287c",
        "type": "ui_text",
        "z": "f24bebacdb4e3198",
        "group": "70ee9b44755ba42e",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Encoder 4 (supuesto eje z2):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1040,
        "y": 440,
        "wires": []
    },
    {
        "id": "57a90ac1cce01c30",
        "type": "function",
        "z": "f24bebacdb4e3198",
        "name": "carga 187",
        "func": "var data = msg.payload.data;\n\nlet out = data[4]<<8 + data[3];\n\nmsg.payload = out\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 520,
        "wires": [
            [
                "9722d4f978bc4289"
            ]
        ]
    },
    {
        "id": "9722d4f978bc4289",
        "type": "ui_text",
        "z": "f24bebacdb4e3198",
        "group": "edfb2eacc3a17b91",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "CAN ID 187 (verificar que gancho es):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1690,
        "y": 480,
        "wires": []
    },
    {
        "id": "6c93f9cb6606d7fc",
        "type": "ui_text",
        "z": "f24bebacdb4e3198",
        "group": "edfb2eacc3a17b91",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "CAN ID 287 (verificar que gancho es):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1850,
        "y": 580,
        "wires": []
    },
    {
        "id": "2b51f72f4490dde3",
        "type": "ui_text",
        "z": "f24bebacdb4e3198",
        "group": "edfb2eacc3a17b91",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "CAN ID 387 (verificar que gancho es):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1710,
        "y": 660,
        "wires": []
    },
    {
        "id": "10f08bc05befffe4",
        "type": "ui_button",
        "z": "f24bebacdb4e3198",
        "name": "",
        "group": "a165adb324b7645c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "reset encoder 1",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 360,
        "y": 440,
        "wires": [
            [
                "a8ebf0ce8732517a",
                "fd95575d8b2c851e",
                "abba56ec1ad967a1"
            ]
        ]
    },
    {
        "id": "dddf597ee8a96c54",
        "type": "ui_button",
        "z": "f24bebacdb4e3198",
        "name": "",
        "group": "a165adb324b7645c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "reset encoder 2",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 320,
        "y": 520,
        "wires": [
            [
                "b2e8f90a7a2f2027",
                "fd95575d8b2c851e",
                "abba56ec1ad967a1"
            ]
        ]
    },
    {
        "id": "b6ed7580bfe2b720",
        "type": "ui_button",
        "z": "f24bebacdb4e3198",
        "name": "",
        "group": "a165adb324b7645c",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "reset encoder 3",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 340,
        "y": 580,
        "wires": [
            [
                "a54f007659012df7",
                "fd95575d8b2c851e",
                "abba56ec1ad967a1"
            ]
        ]
    },
    {
        "id": "aa4aa2241faba703",
        "type": "ui_button",
        "z": "f24bebacdb4e3198",
        "name": "",
        "group": "a165adb324b7645c",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "reset encoder 4",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 320,
        "y": 700,
        "wires": [
            [
                "b8a3e9c2ee37b404",
                "fd95575d8b2c851e",
                "abba56ec1ad967a1"
            ]
        ]
    },
    {
        "id": "414ae3071624c335",
        "type": "socketcan-in",
        "z": "f24bebacdb4e3198",
        "name": "socketcan-in",
        "config": "d7031f3f43f31a77",
        "x": 1070,
        "y": 680,
        "wires": []
    },
    {
        "id": "abba56ec1ad967a1",
        "type": "change",
        "z": "f24bebacdb4e3198",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"canid\":2005,\"dlc\":8,\"data\":[0,0,0,0,0,0,0,0]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 780,
        "wires": [
            [
                "414ae3071624c335"
            ]
        ]
    }
]